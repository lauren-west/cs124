{"version":3,"sources":["Alert.js","MainPage.js","Lists.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","useState","inputValue","input","setInput","priority","setPriority","handleClose","console","log","onClose","visible","className","children","type","name","value","onChange","e","target","task","htmlFor","id","selected","onClick","cancelName","onOk","okName","ListsDisplay","showAlert","setShowAlert","list","src","title","stopPropagation","handleDelete","inputVal","updateList","MainPage","data","map","x","setData","onListClick","listName","ListsItemDisplay","currentTasks","completed","checked","updateTask","listitem","deleteTask","Lists","setTasks","fetch","getDocInfo","then","setFetch","filter","y","z","addListItem","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","App","collectionName","query","collection","hasFetchedTask","collectionRef","useCollection","loading","docs","a","getDoc","ref","element","selectedPage","setPage","currTasks","q","doc","getDocs","forEach","push","listid","taskid","title_val","comp_value","priority_value","update","delete","pageRenderLookup","List","generateUniqueID","set","n","selectedId","itemName","Task","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e164e199.chunk.js","sourcesContent":["import {useState} from \"react\";\n\nfunction Alert(props) {\n    let [input, setInput] = useState(props.inputValue);\n    let [priority, setPriority] = useState(props.priority)\n    function handleClose(){\n        console.log(priority);\n        setInput(props.inputValue);\n        props.onClose();\n    }\n\n    if (!props.visible){\n        return null;\n    }\n    // {console.log(setInput(props.inputValue))}\n    return (\n        <div className={\"backdrop\"}>\n            <div className=\"modal\">\n                {props.children}\n                <input type=\"text\" name=\"name\" value={input}\n                       onChange={(e) => setInput(e.target.value)}/>\n\n                {props.task &&\n                <div>\n                    <label className={\"priority-label\"} htmlFor=\"priority-levels\">Priority</label>\n                    <select name=\"priority-levels\" id=\"priority-levels\" onChange={(e) => setPriority(e.target.value)}>\n                        <option selected={priority === \"low\" ? true: false} value=\"low\">Low</option>\n                        <option selected={priority === \"medium\" ? true: false} value=\"medium\">Medium</option>\n                        <option selected={priority === \"high\" ? true: false} value=\"high\">High</option>\n                    </select>\n                </div>}\n\n                <div className=\"alert-buttons\">\n                    <button className={\"alert-button alert-cancel\"} type={\"button\"}\n                            onClick={handleClose}>\n                        {props.cancelName}\n                    </button>\n                    <button className={\"alert-button alert-ok\"} type={\"button\"}\n                            onClick={() => {\n                                props.onOk(input, priority);\n                                handleClose();\n                                setInput(\"\")\n                                ;}}>\n                        {props.okName}\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Alert;","import './main.css'\nimport React, {useState} from \"react\";\nimport Alert from \"./Alert\";\n\nfunction ListsDisplay(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    function handleAlertOK(listName) {\n\n    }\n\n    function handleEdit(inputVal) {\n        props.updateList(props.list.id, inputVal)\n    }\n\n    // async function updateTask(listid, taskid, title_val, comp_value, priority_value){\n    //     await collectionRef.doc(listid)\n    //         .collection(listid)\n    //         .doc(taskid)\n    //         .update({\n    //             title: title_val,\n    //             completed: comp_value,\n    //             priority: priority_value\n    //         });\n    //     setFetch(false)\n    // }\n    // function handleDelete(e) {\n    //     e.stopPropagation()\n    //     props.setData(props.data.filter((list) => list.id !== props.list.id))\n    //\n    //\n    // }\n\n    return (\n        <>\n            <div onClick={() => props.onClick(props.list.id)} className=\"boxes\" id=\"list-box-1\">\n                <img src=\"list-solid.svg\"/>\n                <span>{props.list.title}</span>\n                <div className={\"edit-delete-button-container\"}>\n                    <img className=\"edit-delete-button\" onClick={(e) => {\n                        e.stopPropagation()\n                        setShowAlert(true)\n                    }} src={\"edit-solid.svg\"}/>\n                    <img className=\"edit-delete-button\" onClick={(e) => props.handleDelete(props.list.id, e)} src={\"times-solid.svg\"}></img>\n                {/*    (e) => props.handleDelete(e.target.id)*/}\n                </div>\n\n            </div>\n            <Alert inputValue={props.list.title} visible={showAlert} onClose={() => setShowAlert(false)} onOk={handleEdit} cancelName={\"Don't Edit List\"} okName={\"Edit List\"}>\n                <div>Edit List:</div>\n            </Alert>\n        </>\n    )\n}\n\nfunction MainPage(props) {\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOK(listName) {\n        props.setData(listName)\n    }\n\n    return (\n        <>\n            <h1 id=\"MyLists\">My Lists</h1>\n            {props.data.map((x) => <ListsDisplay handleDelete={props.handleDelete} updateList={props.updateList} setData={props.setData} data={props.data} list={x} onClick={props.onListClick}/>)}\n            <div id=\"button1\">\n                <button onClick={() => setShowAlert(true)} className=\"addList addTask\">\n                    <img src=\"plus-solid.svg\"/>\n                    <span>Add List</span>\n                </button>\n            </div>\n            <Alert inputValue={\"\"} visible={showAlert} onClose={() => setShowAlert(false)} onOk={handleAlertOK} cancelName={\"Don't Add List\"} okName={\"Add List\"}>\n                <div>Add List:</div>\n            </Alert>\n        </>\n    )\n}\n\nexport default MainPage;","import \"./main.css\"\nimport React, {useEffect, useState, useMemo} from \"react\";\nimport Alert from \"./Alert\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {collection, doc, setDoc, query, where, getDoc, getDocs} from \"firebase/firestore\";\nimport firebase from \"firebase/compat\";\n\nfunction ShowEditAlert(props) {\n    props.setCurrentTask(props.listitem.id)\n    props.setShowEditAlert(true)\n}\n\nfunction ListsItemDisplay(props){\n    console.log(props.currentTasks);\n    const [checked, setChecked] = useState(props.completed); //useState(props.listitem.completed)\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOKListItem(listitem, priority) {\n        props.updateTask(props.list.id, props.id, listitem, props.completed, priority)\n        // props.listitem.text = listItemText;\n        // props.setData(Object.assign([], props.data))\n    }\n    function handleDelete(e) {\n        e.stopPropagation()\n        props.deleteTask(props.list.id, props.id)\n        // props.list.listItems = props.list.listItems.filter((item) => item.id !== props.id)\n        // props.setData(Object.assign([], props.data))\n    }\n    function showPriorityImage(priority){\n        if (priority == \"high\"){\n            return (\n                <div>\n            <img className=\"edit-delete-button\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n            <img className=\"edit-delete-button\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n                </div>)\n        } else if (priority == \"medium\"){\n            return (\n                <div>\n                    <img className=\"edit-delete-button\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div id=\"box1\" className=\"boxes boxes-blue\">\n            <input checked={checked} type=\"checkbox\" onChange={() => {\n                props.updateTask(props.list.id, props.id, props.listitem, !props.completed, props.priority)\n                // props.setData(Object.assign([], props.data))\n                console.log(\"add completed attribute\")\n            }}/>\n            <label>{props.listitem}</label><br/>\n\n            <div className={\"edit-delete-button-container\"}>\n                {showPriorityImage(props.priority)}\n            <img className=\"edit-delete-button\" onClick={() => setShowAlert(true)} src={\"edit-solid.svg\"}></img>\n            <img className=\"edit-delete-button\" onClick={(e) => handleDelete(e)} src={\"times-solid.svg\"}></img>\n            </div>\n            <Alert priority={props.priority} task={true} visible={showAlert} inputValue={props.listitem} onClose={() => setShowAlert(false)} onOk={handleAlertOKListItem} cancelName={\"Don't Edit Task\"} okName={\"Edit Task\"}>\n                <div>Edit Task:</div>\n            </Alert>\n        </div>\n    )\n}\n\nfunction Lists(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    const [currentTasks, setTasks] = useState([]);\n\n    // function updateListItems(newListItems) {\n    //     props.setData(props.data.map(list => {\n    //         if (list.id === props.list.id) {\n    //             list.listItems = newListItems\n    //         }\n    //         return list;\n    //     }))\n    // }\n\n    if (!props.fetch) {\n        props.getDocInfo(props.list.id).then((x) => setTasks(x));\n        props.setFetch(true);\n    }\n\n    return (\n        <>\n            <h1>{props.data[0].title}</h1>\n            {currentTasks.filter((y) => !y[2]).filter((z) => z[3] == \"high\").map((x) => <ListsItemDisplay deleteTask={props.deleteTask} updateTask={props.updateTask} setTasks={setTasks} currentTasks={currentTasks} list={props.list} setData={props.setData} data={props.data} id={x[0]} listitem={x[1]} completed={x[2]} priority={x[3]}/>)}\n            {currentTasks.filter((y) => !y[2]).filter((z) => z[3] == \"medium\").map((x) => <ListsItemDisplay deleteTask={props.deleteTask} updateTask={props.updateTask} setTasks={setTasks} currentTasks={currentTasks} list={props.list} setData={props.setData} data={props.data} id={x[0]} listitem={x[1]} completed={x[2]} priority={x[3]}/>)}\n            {currentTasks.filter((y) => !y[2]).filter((z) => z[3] == \"low\").map((x) => <ListsItemDisplay deleteTask={props.deleteTask} updateTask={props.updateTask} setTasks={setTasks} currentTasks={currentTasks} list={props.list} setData={props.setData} data={props.data} id={x[0]} listitem={x[1]} completed={x[2]} priority={x[3]}/>)}\n            <hr/>\n            <h3>Completed:</h3>\n            {currentTasks.filter((y) => y[2]).map((x) => <ListsItemDisplay deleteTask={props.deleteTask} updateTask={props.updateTask} setTasks={setTasks} currentTasks={currentTasks} list={props.list} setData={props.setData} data={props.data} id={x[0]} listitem={x[1]} completed={x[2]} priority={x[3]}/>)}\n            <div id=\"button1\">\n                <button onClick={() => {setShowAlert(true)}} className=\"addTask\">\n                    <img src=\"plus-solid.svg\"/>\n                    <span>Add Task</span>\n                </button>\n            </div>\n            <Alert priority={props.priority} task={true} visible={showAlert}  onClose={() => setShowAlert(false)} onOk={(input) => props.addListItem(props.list, input, \"low\") } cancelName={\"Don't Add Task\"} okName={\"Add Task\"}>\n                <div>Add Task:</div>\n            </Alert>\n        </>\n    )\n}\n\nexport default Lists;","import './AlertApp.css';\nimport React, {useState} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {collection, doc, setDoc, query, where, getDoc, getDocs, updateDoc, deleteDoc} from \"firebase/firestore\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCcQ6XCOvMIA7pHME4bWBgy_7OVy_7XErA\",\n    authDomain: \"cs124-fall2021.firebaseapp.com\",\n    projectId: \"cs124-fall2021\",\n    storageBucket: \"cs124-fall2021.appspot.com\",\n    messagingSenderId: \"264318304667\",\n    appId: \"1:264318304667:web:4be8d27a02811b1ccd613e\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction App() {\n\n    const collectionName = \"lewing-hmc-tasks2\"\n    const query = db.collection(collectionName);\n    const [hasFetchedTask, setFetch] = useState(false);\n    let collectionRef = db.collection(collectionName)\n    const [value, loading, error] = useCollection(query)\n    if (!loading) {\n        value.docs.map(async (x) => console.log((await getDoc(x.ref)).data().title))\n    }\n\n    const data = loading === false ? value.docs.map((element)=> element.data()) : []\n\n    const [showAlert, setShowAlert] = useState(false);\n    const [showEditAlert, setShowEditAlert] = useState(false);\n    let [listId, setListId] = useState(0);\n    let [selectedPage, setPage] = useState({\n        type: \"home\"\n    })\n\n    function handleAddList(listName) {\n        const List = {\n            id: generateUniqueID(),\n            title: listName,\n        }\n        collectionRef.doc(List.id).set(List)\n    }\n\n\n    function handleDeleteList(id, e){\n        collectionRef.doc(id).delete()\n        e.stopPropagation()\n    }\n\n    function setFetchAndPage(){\n        setFetch(false);\n        setPage({type: \"home\"});\n    }\n\n    function addListItem(list, itemName, priority){\n        const Task = {\n            id: generateUniqueID(),\n            title: itemName,\n            completed: false,\n            priority: priority // planning on low, medium, high\n        }\n        list.collection(list.id).doc(Task.id).set(Task)\n        setFetch(false)\n    }\n\n    async function getDocInfo(id){\n        let currTasks = [];\n        const q = collectionRef.doc(id).collection(id);\n        const querySnapshot = await getDocs(q);\n        querySnapshot.forEach((doc) => {\n            currTasks.push([doc.data().id, doc.data().title, doc.data().completed, doc.data().priority]);\n        });\n        return currTasks;\n    }\n\n    async function updateTask(listid, taskid, title_val, comp_value, priority_value){\n        await collectionRef.doc(listid)\n            .collection(listid)\n            .doc(taskid)\n            .update({\n                title: title_val,\n                completed: comp_value,\n                priority: priority_value\n            });\n        setFetch(false)\n    }\n\n    async function updateList(id, title_val){\n        await collectionRef.doc(id).update({\n                title: title_val\n            })\n    }\n\n    async function deleteTask(listid, taskid){\n        await collectionRef.doc(listid).collection(listid).doc(taskid).delete();\n        setFetch(false)\n\n    }\n\n    const pageRenderLookup = {\n        \"home\": (\n                <MainPage updateList={updateList} handleDelete={handleDeleteList} setData={handleAddList} data={data} onListClick={(n) =>\n                    setPage({\n                    type: \"list\",\n                    selectedId: n\n                })}/>\n        ),\n        \"list\": (\n            <>\n                <img onClick={() => setFetchAndPage()} src={\"long-arrow-alt-left-solid.svg\"} className={\"back-arrow\"}/>\n                <Lists deleteTask={deleteTask} updateTask={updateTask} setFetch={setFetch} fetch={hasFetchedTask} getDocInfo={getDocInfo} addListItem={addListItem} data={data.filter((x) => x.id == selectedPage.selectedId)} list={collectionRef.doc(selectedPage.selectedId)}/>\n            </>\n        )\n    }\n    return pageRenderLookup[selectedPage.type]\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  //  start first component to start going (App.js)\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}