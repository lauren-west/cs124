{"version":3,"sources":["Alert.js","MainPage.js","Lists.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","useState","inputValue","input","setInput","priority","setPriority","handleClose","onClose","useCallback","event","visible","className","children","autoFocus","id","type","name","value","onChange","e","target","task","htmlFor","selected","onClick","cancelName","edit","onAddTaskOkay","listWithoutId","onOk","okName","ListsDisplay","showAlert","setShowAlert","list","src","title","stopPropagation","handleDelete","inputVal","updateList","MainPage","data","map","x","setData","onListClick","listName","ListsItemDisplay","console","log","currentTasks","completed","checked","updateTask","listitem","deleteTask","Lists","setTasks","filter","setFilter","collectionRef","useCollection","doc","collection","orderBy","loading","elmo","docs","element","y","deleteCompleted","addListItem","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","firestore","App","collectionName","query","setFetch","a","getDoc","ref","selectedPage","setPage","currTasks","q","getDocs","forEach","push","listid","taskid","title_val","comp_value","priority_value","update","delete","pageRenderLookup","List","generateUniqueID","set","n","selectedId","fetch","getDocInfo","itemName","Task","created","database","ServerValue","TIMESTAMP","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ceeedcf.chunk.js","sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\n\n\nfunction Alert(props) {\n    let [input, setInput] = useState(props.inputValue);\n    let [priority, setPriority] = useState(props.priority);\n    const handlekeyPress = useCallback((event) => {\n    }, [props.visible]);\n    if (!priority){\n        setPriority(\"tiny\");\n    }\n    function handleClose(){\n        setInput(props.inputValue);\n        props.onClose();\n    }\n\n    if (!props.visible){\n        return null;\n    }\n\n    return (\n        <div className={\"backdrop\"}>\n            <div className=\"modal\">\n                {props.children}\n\n                <input autoFocus={true} id=\"textfield\" type=\"text\" name=\"name\" value={input}\n                       onChange={(e) => setInput(e.target.value)}/>\n                {props.task &&\n                <div>\n                    <label className={\"priority-label\"} htmlFor=\"priority-levels\">Priority</label>\n                    <select name=\"priority-levels\" id=\"priority-levels\" onChange={(e) => setPriority(e.target.value)}>\n                        <option selected={priority === \"tiny\" ? true: false} value=\"tiny\">Low</option>\n                        <option selected={priority === \"medium\" ? true: false} value=\"medium\">Medium</option>\n                        <option selected={priority === \"high\" ? true: false} value=\"high\">High</option>\n                    </select>\n                </div>}\n\n                <div className=\"alert-buttons\">\n                    <button className={\"alert-button alert-cancel\"} type={\"button\"}\n                            onClick={handleClose}>\n                        {props.cancelName}\n                    </button>\n                    <button className={\"alert-button alert-ok\"} type={\"button\"}\n                            onClick={() => {\n\n                                if (props.task && !props.edit){\n                                    if (!priority){\n                                        setPriority(\"tiny\");\n                                    }\n                                    props.onAddTaskOkay(props.listWithoutId, input, priority);\n                                }else {\n                                    props.onOk(input, priority)\n                                }\n                                handleClose();\n                                if (!props.edit){\n                                    setInput(\"\")\n                                } else{\n                                    setInput(input)\n                                }}}>\n                        {props.okName}\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Alert;","import './main.css'\nimport React, {useState} from \"react\";\nimport Alert from \"./Alert\";\n\nfunction ListsDisplay(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    function handleAlertOK(listName) {\n\n    }\n\n    function handleEdit(inputVal) {\n        props.updateList(props.list.id, inputVal)\n    }\n\n    return (\n        <>\n            <div onClick={() => props.onClick(props.list.id)} className=\"boxes\" id=\"list-box-1\">\n                <img src=\"list-solid.svg\"/>\n                <span>{props.list.title}</span>\n                <div className={\"edit-delete-button-container\"}>\n                    <img className=\"edit-delete-button\" onClick={(e) => {\n                        e.stopPropagation()\n                        setShowAlert(true)\n                    }} src={\"edit-solid.svg\"}/>\n                    <img className=\"edit-delete-button\" onClick={(e) => props.handleDelete(props.list.id, e)} src={\"times-solid.svg\"}></img>\n                {/*    (e) => props.handleDelete(e.target.id)*/}\n                </div>\n\n            </div>\n            <Alert task={false} edit={true} inputValue={props.list.title} visible={showAlert} onClose={() => setShowAlert(false)} onOk={handleEdit} cancelName={\"Don't Save\"} okName={\"Save\"}>\n                <div>Edit List:</div>\n            </Alert>\n        </>\n    )\n}\n\nfunction MainPage(props) {\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOK(listName) {\n        props.setData(listName)\n    }\n\n    return (\n        <>\n            <h1 id=\"MyLists\">My Lists</h1>\n            {props.data.map((x) => <ListsDisplay handleDelete={props.handleDelete} updateList={props.updateList} setData={props.setData} data={props.data} list={x} onClick={props.onListClick}/>)}\n            <div id=\"button1\">\n                <button onClick={() => setShowAlert(true)} className=\"addList addTask\">\n                    <img src=\"plus-solid.svg\"/>\n                    <span>Add List</span>\n                </button>\n            </div>\n            <Alert task={false} edit={false} inputValue={\"\"} visible={showAlert} onClose={() => setShowAlert(false)} onOk={handleAlertOK} cancelName={\"Don't Add\"} okName={\"Add\"}>\n                <div>Add List:</div>\n            </Alert>\n        </>\n    )\n}\n\nexport default MainPage;","import \"./main.css\"\nimport React, {useEffect, useState, useMemo} from \"react\";\nimport Alert from \"./Alert\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {collection, doc, setDoc, where, getDoc, getDocs} from \"firebase/firestore\";\nimport { query, orderBy, limit } from \"firebase/firestore\";\nimport firebase from \"firebase/compat\";\n\nfunction ShowEditAlert(props) {\n    props.setCurrentTask(props.listitem.id)\n    props.setShowEditAlert(true)\n}\n\nfunction ListsItemDisplay(props){\n    console.log(props.currentTasks);\n    const [checked, setChecked] = useState(props.completed); //useState(props.listitem.completed)\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOKListItem(listitem, priority) {\n        props.updateTask(props.list.id, props.id, listitem, props.completed, priority)\n\n    }\n    function handleDelete(e) {\n        e.stopPropagation()\n        props.deleteTask(props.list.id, props.id)\n\n    }\n\n    function showPriorityImage(priority){\n        if (priority == \"high\"){\n            return (\n                <div>\n            <img className=\"priority-img\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n            <img className=\"priority-img\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n                </div>)\n        } else if (priority == \"medium\"){\n            return (\n                <div>\n                    <img className=\"priority-img\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div id=\"box1\" className=\"boxes boxes-blue\">\n            <input checked={props.completed} type=\"checkbox\" onChange={() => {\n                props.updateTask(props.list.id, props.id, props.listitem, !props.completed, props.priority)\n            }}/>\n            <label>{props.listitem}</label><br/>\n\n            <div className={\"edit-delete-button-container\"}>\n                {showPriorityImage(props.priority)}\n            <img className=\"edit-delete-button\" onClick={() => setShowAlert(true)} src={\"edit-solid.svg\"}></img>\n            <img className=\"edit-delete-button\" onClick={(e) => handleDelete(e)} src={\"times-solid.svg\"}></img>\n            </div>\n            <Alert edit={true} priority={props.priority} task={true} visible={showAlert} inputValue={props.listitem} onClose={() => setShowAlert(false)} onOk={handleAlertOKListItem} cancelName={\"Don't Save\"} okName={\"Save\"}>\n                <div>Edit Task:</div>\n            </Alert>\n        </div>\n    )\n}\n\nfunction Lists(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    const [currentTasks, setTasks] = useState([]);\n    const [filter, setFilter] = useState(\"title\");\n    const query = props.collectionRef;\n    const [value, loading, error] = useCollection(props.collectionRef.doc(props.list.id).collection(props.list.id).orderBy(filter))\n    const elmo = loading === false ? value.docs.map((element)=> element.data()) : []\n\n    function deleteCompleted(elmo){\n        elmo.filter((y) => y.completed).map((x) => props.deleteTask(props.list.id, x.id))\n    }\n\n    return (\n        <>\n            <h1>{props.data[0].title}</h1>\n            <div className={\"filters\"}>\n            <label className={\"filter-dropdown\"} htmlFor=\"filters\">Filters</label>\n                <select name=\"filters\" id=\"filter-select\" onChange={(e) => setFilter(e.target.value)}>\n                    <option value=\"title\">Name</option>\n                    <option value=\"created\">Creation Date</option>\n                    <option value=\"priority\">Priority</option>\n                </select>\n            </div>\n            {elmo.filter((y) => !y.completed).map((x) => <ListsItemDisplay deleteTask={props.deleteTask} updateTask={props.updateTask} setTasks={setTasks} currentTasks={currentTasks} list={props.list} setData={props.setData} data={props.data} id={x.id} listitem={x.title} completed={x.completed} priority={x.priority}/>)}\n            <hr/>\n            <h3 className={\"completed\"}>Completed:</h3>\n            <button className={\"completed-button\"} onClick={() => deleteCompleted(elmo)}>Delete All Completed</button>\n            {elmo.filter((y) => y.completed).map((x) => <ListsItemDisplay deleteTask={props.deleteTask} updateTask={props.updateTask} setTasks={setTasks} currentTasks={currentTasks} list={props.list} setData={props.setData} data={props.data} id={x.id} listitem={x.title} completed={x.completed} priority={x.priority}/>)}\n            <div id=\"button1\">\n                <button onClick={() => {setShowAlert(true)}} className=\"addTask\">\n                    <img src=\"plus-solid.svg\"/>\n                    <span>Add Task</span>\n                </button>\n            </div>\n            <Alert edit={false} priority={props.priority} task={true} visible={showAlert}  onClose={() => setShowAlert(false)} listWithoutId={props.list} list={props.list.id} onOk={console.log(\"Oops\")} onAddTaskOkay={props.addListItem} cancelName={\"Don't Add\"} okName={\"Add\"}>\n                <div>Add Task:</div>\n            </Alert>\n        </>\n    )\n}\n\nexport default Lists;","import './AlertApp.css';\nimport React, {useState} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {collection, doc, setDoc, query, where, getDoc, getDocs, updateDoc, deleteDoc, Timestamp} from \"firebase/firestore\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport { getAnalytics } from \"firebase/analytics\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB8G1WCYinf4GWK7GMzLkP8PlLujGnNqHM\",\n    authDomain: \"cs124-lab.firebaseapp.com\",\n    projectId: \"cs124-lab\",\n    storageBucket: \"cs124-lab.appspot.com\",\n    messagingSenderId: \"385341419353\",\n    appId: \"1:385341419353:web:fe357b4ea465efcdff2648\",\n    measurementId: \"G-PB2T6D5MN8\"\n};\n\nconst app = firebase.initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst db = firebase.firestore();\n\nfunction App() {\n\n    const collectionName = \"lewing-hmc-tasks2\"\n    const query = db.collection(collectionName);\n    const [hasFetchedTask, setFetch] = useState(false);\n    let collectionRef = db.collection(collectionName)\n    const [value, loading, error] = useCollection(query)\n    if (!loading) {\n        value.docs.map(async (x) => console.log((await getDoc(x.ref)).data().title))\n    }\n    const data = loading === false ? value.docs.map((element)=> element.data()) : []\n\n    const [showAlert, setShowAlert] = useState(false);\n    const [showEditAlert, setShowEditAlert] = useState(false);\n    let [listId, setListId] = useState(0);\n    let [selectedPage, setPage] = useState({\n        type: \"home\"\n    })\n\n    function handleAddList(listName) {\n        const List = {\n            id: generateUniqueID(),\n            title: listName,\n        }\n        collectionRef.doc(List.id).set(List)\n\n    }\n\n\n    function handleDeleteList(id, e){\n        collectionRef.doc(id).delete()\n        e.stopPropagation()\n    }\n\n    function setFetchAndPage(){\n        setFetch(false);\n        setPage({type: \"home\"});\n    }\n\n    function addListItem(list, itemName, priority){\n        const Task = {\n            id: generateUniqueID(),\n            title: itemName,\n            completed: false,\n            priority: priority, // planning on tiny, medium, high\n            created: firebase.database.ServerValue.TIMESTAMP\n        }\n        list.collection(list.id).doc(Task.id).set(Task)\n        setFetch(false)\n    }\n\n    async function getDocInfo(id){\n        let currTasks = [];\n        if(!loading){\n            const q = collectionRef.doc(id).collection(id);\n            const querySnapshot = await getDocs(q);\n            querySnapshot.forEach((doc) => {\n                currTasks.push([doc.data().id, doc.data().title, doc.data().completed, doc.data().priority]);\n        });}\n        return currTasks;\n    }\n\n    async function updateTask(listid, taskid, title_val, comp_value, priority_value){\n        await collectionRef.doc(listid)\n            .collection(listid)\n            .doc(taskid)\n            .update({\n                title: title_val,\n                completed: comp_value,\n                priority: priority_value\n            });\n        setFetch(false)\n    }\n\n    async function updateList(id, title_val){\n        await collectionRef.doc(id).update({\n                title: title_val\n            })\n    }\n\n    async function deleteTask(listid, taskid){\n        await collectionRef.doc(listid).collection(listid).doc(taskid).delete();\n        setFetch(false)\n\n    }\n\n    const pageRenderLookup = {\n        \"home\": (\n                <MainPage updateList={updateList} handleDelete={handleDeleteList} setData={handleAddList} data={data} onListClick={(n) =>\n                    setPage({\n                    type: \"list\",\n                    selectedId: n\n                })}/>\n        ),\n        \"list\": (\n            <>\n                <img onClick={() => setFetchAndPage()} src={\"long-arrow-alt-left-solid.svg\"} className={\"back-arrow\"}/>\n                <Lists collectionRef={collectionRef} query={useCollection} deleteTask={deleteTask} updateTask={updateTask} setFetch={setFetch} fetch={loading} data={data.filter((x) => x.id == selectedPage.selectedId)}  getDocInfo={getDocInfo} addListItem={addListItem} list={collectionRef.doc(selectedPage.selectedId)}/>\n            </>\n        )\n    }\n    return pageRenderLookup[selectedPage.type]\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  //  start first component to start going (App.js)\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}