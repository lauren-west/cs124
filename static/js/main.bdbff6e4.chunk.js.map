{"version":3,"sources":["Alert.js","MainPage.js","Lists.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","useState","inputValue","input","setInput","priority","setPriority","handleClose","onClose","visible","className","children","autoFocus","id","type","name","value","onChange","e","target","htmlFor","selected","onClick","cancelName","onOk","edit","okName","ListsDisplay","showAlert","setShowAlert","list","src","title","stopPropagation","handleDelete","inputVal","updateList","MainPage","data","map","x","setData","onListClick","listName","ListsItemDisplay","console","log","currentTasks","completed","checked","updateTask","listitem","deleteTask","task","Lists","setTasks","filter","setFilter","collectionRef","useCollection","doc","collection","orderBy","loading","elmo","docs","element","y","addListItem","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","App","collectionName","query","setFetch","a","getDoc","ref","selectedPage","setPage","currTasks","q","getDocs","forEach","push","listid","taskid","title_val","comp_value","priority_value","update","delete","pageRenderLookup","List","generateUniqueID","set","n","selectedId","fetch","getDocInfo","itemName","Task","created","database","ServerValue","TIMESTAMP","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdbff6e4.chunk.js","sourcesContent":["import {useEffect, useState} from \"react\";\n\n\nfunction Alert(props) {\n    let [input, setInput] = useState(props.inputValue);\n    let [priority, setPriority] = useState(props.priority);\n\n    function handleClose(){\n        setInput(props.inputValue);\n        props.onClose();\n    }\n\n    // useEffect(() => {\n    //     document.addEventListener('keyup', (event) => {\n    //         console.log(\"yucky blucky fruit cake\", props);\n    //         if(event.key === \"Escape\" ) {\n    //             if (!props.visible) {\n    //                 return;\n    //             }\n    //             console.log(\"Escape Hit\")\n    //         }\n    //         if(event.key === \"Enter\" ) {\n    //             if (!props.visible) {\n    //                 return;\n    //             }\n    //             console.log(\"Enter Hit\")\n    //             // props.onOk(input, priority);\n    //             // handleClose();\n    //         }\n    //     });\n    // }, [])\n\n    if (!props.visible){\n        return null;\n    }\n    // document.getElementById('#textfield').focus();\n    // {console.log(setInput(props.inputValue))}\n\n\n    return (\n        <div className={\"backdrop\"}>\n            <div className=\"modal\">\n                {props.children}\n\n                <input autoFocus={true} id=\"textfield\" type=\"text\" name=\"name\" value={input}\n                       onChange={(e) => setInput(e.target.value)}/>\n                <div>\n                    <label className={\"priority-label\"} htmlFor=\"priority-levels\">Priority</label>\n                    <select name=\"priority-levels\" id=\"priority-levels\" onChange={(e) => setPriority(e.target.value)}>\n                        <option selected={priority === \"tiny\" ? true: false} value=\"tiny\">Low</option>\n                        <option selected={priority === \"medium\" ? true: false} value=\"medium\">Medium</option>\n                        <option selected={priority === \"high\" ? true: false} value=\"high\">High</option>\n                    </select>\n                </div>\n\n                <div className=\"alert-buttons\">\n                    <button className={\"alert-button alert-cancel\"} type={\"button\"}\n                            onClick={handleClose}>\n                        {props.cancelName}\n                    </button>\n                    <button className={\"alert-button alert-ok\"} type={\"button\"}\n                            onClick={() => {\n                                props.onOk(input, priority);\n                                handleClose();\n                                if (!props.edit){\n                                    setInput(\"\")\n                                } else{\n                                    setInput(input)\n                                }}}>\n                        {props.okName}\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Alert;","import './main.css'\nimport React, {useState} from \"react\";\nimport Alert from \"./Alert\";\n\nfunction ListsDisplay(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    function handleAlertOK(listName) {\n\n    }\n\n    function handleEdit(inputVal) {\n        props.updateList(props.list.id, inputVal)\n    }\n\n    // async function updateTask(listid, taskid, title_val, comp_value, priority_value){\n    //     await collectionRef.doc(listid)\n    //         .collection(listid)\n    //         .doc(taskid)\n    //         .update({\n    //             title: title_val,\n    //             completed: comp_value,\n    //             priority: priority_value\n    //         });\n    //     setFetch(false)\n    // }\n    // function handleDelete(e) {\n    //     e.stopPropagation()\n    //     props.setData(props.data.filter((list) => list.id !== props.list.id))\n    //\n    //\n    // }\n\n    return (\n        <>\n            <div onClick={() => props.onClick(props.list.id)} className=\"boxes\" id=\"list-box-1\">\n                <img src=\"list-solid.svg\"/>\n                <span>{props.list.title}</span>\n                <div className={\"edit-delete-button-container\"}>\n                    <img className=\"edit-delete-button\" onClick={(e) => {\n                        e.stopPropagation()\n                        setShowAlert(true)\n                    }} src={\"edit-solid.svg\"}/>\n                    <img className=\"edit-delete-button\" onClick={(e) => props.handleDelete(props.list.id, e)} src={\"times-solid.svg\"}></img>\n                {/*    (e) => props.handleDelete(e.target.id)*/}\n                </div>\n\n            </div>\n            <Alert edit={true} inputValue={props.list.title} visible={showAlert} onClose={() => setShowAlert(false)} onOk={handleEdit} cancelName={\"Don't Save\"} okName={\"Save\"}>\n                <div>Edit List:</div>\n            </Alert>\n        </>\n    )\n}\n\nfunction MainPage(props) {\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOK(listName) {\n        props.setData(listName)\n    }\n\n    return (\n        <>\n            <h1 id=\"MyLists\">My Lists</h1>\n            {props.data.map((x) => <ListsDisplay handleDelete={props.handleDelete} updateList={props.updateList} setData={props.setData} data={props.data} list={x} onClick={props.onListClick}/>)}\n            <div id=\"button1\">\n                <button onClick={() => setShowAlert(true)} className=\"addList addTask\">\n                    <img src=\"plus-solid.svg\"/>\n                    <span>Add List</span>\n                </button>\n            </div>\n            <Alert edit={false} inputValue={\"\"} visible={showAlert} onClose={() => setShowAlert(false)} onOk={handleAlertOK} cancelName={\"Don't Add\"} okName={\"Add\"}>\n                <div>Add List:</div>\n            </Alert>\n        </>\n    )\n}\n\nexport default MainPage;","import \"./main.css\"\nimport React, {useEffect, useState, useMemo} from \"react\";\nimport Alert from \"./Alert\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {collection, doc, setDoc, where, getDoc, getDocs} from \"firebase/firestore\";\nimport { query, orderBy, limit } from \"firebase/firestore\";\nimport firebase from \"firebase/compat\";\n\nfunction ShowEditAlert(props) {\n    props.setCurrentTask(props.listitem.id)\n    props.setShowEditAlert(true)\n}\n\nfunction ListsItemDisplay(props){\n    console.log(props.currentTasks);\n    const [checked, setChecked] = useState(props.completed); //useState(props.listitem.completed)\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOKListItem(listitem, priority) {\n        props.updateTask(props.list.id, props.id, listitem, props.completed, priority)\n\n    }\n    function handleDelete(e) {\n        e.stopPropagation()\n        props.deleteTask(props.list.id, props.id)\n\n    }\n    function showPriorityImage(priority){\n        if (priority == \"high\"){\n            return (\n                <div>\n            <img className=\"priority-img\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n            <img className=\"priority-img\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n                </div>)\n        } else if (priority == \"medium\"){\n            return (\n                <div>\n                    <img className=\"priority-img\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div id=\"box1\" className=\"boxes boxes-blue\">\n            <input checked={props.completed} type=\"checkbox\" onChange={() => {\n                props.updateTask(props.list.id, props.id, props.listitem, !props.completed, props.priority)\n                // props.setData(Object.assign([], props.data))\n                console.log(\"add completed attribute\")\n            }}/>\n            <label>{props.listitem}</label><br/>\n\n            <div className={\"edit-delete-button-container\"}>\n                {showPriorityImage(props.priority)}\n            <img className=\"edit-delete-button\" onClick={() => setShowAlert(true)} src={\"edit-solid.svg\"}></img>\n            <img className=\"edit-delete-button\" onClick={(e) => handleDelete(e)} src={\"times-solid.svg\"}></img>\n            </div>\n            <Alert edit={true} priority={props.priority} task={true} visible={showAlert} inputValue={props.listitem} onClose={() => setShowAlert(false)} onOk={handleAlertOKListItem} cancelName={\"Don't Save\"} okName={\"Save\"}>\n                <div>Edit Task:</div>\n            </Alert>\n        </div>\n    )\n}\n\nfunction Lists(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    const [currentTasks, setTasks] = useState([]);\n    const [filter, setFilter] = useState(\"title\");\n    console.log(filter)\n    const query = props.collectionRef;\n    const [value, loading, error] = useCollection(props.collectionRef.doc(props.list.id).collection(props.list.id).orderBy(filter))\n    const elmo = loading === false ? value.docs.map((element)=> element.data()) : []\n\n\n\n    return (\n        <>\n            <h1>{props.data[0].title}</h1>\n            <div className={\"filters\"}>\n            <label className={\"filter-dropdown\"} htmlFor=\"filters\">Filters</label>\n                <select name=\"filters\" id=\"filter-select\" onChange={(e) => setFilter(e.target.value)}>\n                    <option value=\"title\">Name</option>\n                    <option value=\"created\">Creation Date</option>\n                    <option value=\"priority\">Priority</option>\n                </select>\n            </div>\n            {elmo.filter((y) => !y.completed).map((x) => <ListsItemDisplay deleteTask={props.deleteTask} updateTask={props.updateTask} setTasks={setTasks} currentTasks={currentTasks} list={props.list} setData={props.setData} data={props.data} id={x.id} listitem={x.title} completed={x.completed} priority={x.priority}/>)}\n            <hr/>\n            <h3>Completed:</h3>\n            {elmo.filter((y) => y.completed).map((x) => <ListsItemDisplay deleteTask={props.deleteTask} updateTask={props.updateTask} setTasks={setTasks} currentTasks={currentTasks} list={props.list} setData={props.setData} data={props.data} id={x.id} listitem={x.title} completed={x.completed} priority={x.priority}/>)}\n            <div id=\"button1\">\n                <button onClick={() => {setShowAlert(true)}} className=\"addTask\">\n                    <img src=\"plus-solid.svg\"/>\n                    <span>Add Task</span>\n                </button>\n            </div>\n            <Alert edit={false} priority={props.priority} task={true} visible={showAlert}  onClose={() => setShowAlert(false)} onOk={(input) => props.addListItem(props.list, input, \"tiny\") } cancelName={\"Don't Add\"} okName={\"Add\"}>\n                <div>Add Task:</div>\n            </Alert>\n        </>\n    )\n}\n\nexport default Lists;","import './AlertApp.css';\nimport React, {useState} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {collection, doc, setDoc, query, where, getDoc, getDocs, updateDoc, deleteDoc, Timestamp} from \"firebase/firestore\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCcQ6XCOvMIA7pHME4bWBgy_7OVy_7XErA\",\n    authDomain: \"cs124-fall2021.firebaseapp.com\",\n    projectId: \"cs124-fall2021\",\n    storageBucket: \"cs124-fall2021.appspot.com\",\n    messagingSenderId: \"264318304667\",\n    appId: \"1:264318304667:web:4be8d27a02811b1ccd613e\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction App() {\n\n    const collectionName = \"lewing-hmc-tasks2\"\n    const query = db.collection(collectionName);\n    const [hasFetchedTask, setFetch] = useState(false);\n    let collectionRef = db.collection(collectionName)\n    const [value, loading, error] = useCollection(query)\n    if (!loading) {\n        value.docs.map(async (x) => console.log((await getDoc(x.ref)).data().title))\n    }\n    const data = loading === false ? value.docs.map((element)=> element.data()) : []\n\n    const [showAlert, setShowAlert] = useState(false);\n    const [showEditAlert, setShowEditAlert] = useState(false);\n    let [listId, setListId] = useState(0);\n    let [selectedPage, setPage] = useState({\n        type: \"home\"\n    })\n\n    function handleAddList(listName) {\n        const List = {\n            id: generateUniqueID(),\n            title: listName,\n        }\n        collectionRef.doc(List.id).set(List)\n    }\n\n\n    function handleDeleteList(id, e){\n        collectionRef.doc(id).delete()\n        e.stopPropagation()\n    }\n\n    function setFetchAndPage(){\n        setFetch(false);\n        setPage({type: \"home\"});\n    }\n\n    function addListItem(list, itemName, priority){\n        const Task = {\n            id: generateUniqueID(),\n            title: itemName,\n            completed: false,\n            priority: priority, // planning on tiny, medium, high\n            created: firebase.database.ServerValue.TIMESTAMP\n        }\n        list.collection(list.id).doc(Task.id).set(Task)\n        setFetch(false)\n    }\n\n    async function getDocInfo(id){\n        let currTasks = [];\n        if(!loading){\n            const q = collectionRef.doc(id).collection(id);\n            const querySnapshot = await getDocs(q);\n            querySnapshot.forEach((doc) => {\n                currTasks.push([doc.data().id, doc.data().title, doc.data().completed, doc.data().priority]);\n        });}\n        return currTasks;\n    }\n\n    async function updateTask(listid, taskid, title_val, comp_value, priority_value){\n        await collectionRef.doc(listid)\n            .collection(listid)\n            .doc(taskid)\n            .update({\n                title: title_val,\n                completed: comp_value,\n                priority: priority_value\n            });\n        setFetch(false)\n    }\n\n    async function updateList(id, title_val){\n        await collectionRef.doc(id).update({\n                title: title_val\n            })\n    }\n\n    async function deleteTask(listid, taskid){\n        await collectionRef.doc(listid).collection(listid).doc(taskid).delete();\n        setFetch(false)\n\n    }\n\n    const pageRenderLookup = {\n        \"home\": (\n                <MainPage updateList={updateList} handleDelete={handleDeleteList} setData={handleAddList} data={data} onListClick={(n) =>\n                    setPage({\n                    type: \"list\",\n                    selectedId: n\n                })}/>\n        ),\n        \"list\": (\n            <>\n                <img onClick={() => setFetchAndPage()} src={\"long-arrow-alt-left-solid.svg\"} className={\"back-arrow\"}/>\n                <Lists collectionRef={collectionRef} query={useCollection} deleteTask={deleteTask} updateTask={updateTask} setFetch={setFetch} fetch={loading} data={data.filter((x) => x.id == selectedPage.selectedId)}  getDocInfo={getDocInfo} addListItem={addListItem} list={collectionRef.doc(selectedPage.selectedId)}/>\n            </>\n        )\n    }\n    return pageRenderLookup[selectedPage.type]\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  //  start first component to start going (App.js)\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}