{"version":3,"sources":["Alert.js","MainPage.js","Lists.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","useState","inputValue","input","setInput","priority","setPriority","handleClose","onClose","console","log","visible","useCallback","event","className","children","autoFocus","id","type","name","value","onChange","e","target","task","htmlFor","selected","onClick","cancelName","onOk","edit","okName","ListsDisplay","showAlert","setShowAlert","list","src","title","stopPropagation","handleDelete","inputVal","updateList","MainPage","data","map","x","setData","onListClick","listName","ListsItemDisplay","currentTasks","completed","checked","updateTask","listitem","deleteTask","Lists","setTasks","filter","setFilter","collectionRef","useCollection","doc","collection","orderBy","loading","elmo","docs","element","y","deleteCompleted","addListItem","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","App","collectionName","query","setFetch","a","getDoc","ref","selectedPage","setPage","currTasks","q","getDocs","forEach","push","listid","taskid","title_val","comp_value","priority_value","update","delete","pageRenderLookup","List","generateUniqueID","set","n","selectedId","fetch","getDocInfo","itemName","Task","created","database","ServerValue","TIMESTAMP","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e1a0196.chunk.js","sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\n\n\nfunction Alert(props) {\n    let [input, setInput] = useState(props.inputValue);\n    let [priority, setPriority] = useState(props.priority);\n    console.log(props.visible);\n    const handlekeyPress = useCallback((event) => {\n        console.log(props.visible);\n    }, [props.visible]);\n\n    function handleClose(){\n        setInput(props.inputValue);\n        props.onClose();\n    }\n\n    if (!props.visible){\n        return null;\n    }\n\n    return (\n        <div className={\"backdrop\"}>\n            <div className=\"modal\">\n                {props.children}\n\n                <input autoFocus={true} id=\"textfield\" type=\"text\" name=\"name\" value={input}\n                       onChange={(e) => setInput(e.target.value)}/>\n                {props.task &&\n                <div>\n                    <label className={\"priority-label\"} htmlFor=\"priority-levels\">Priority</label>\n                    <select name=\"priority-levels\" id=\"priority-levels\" onChange={(e) => setPriority(e.target.value)}>\n                        <option selected={priority === \"tiny\" ? true: false} value=\"tiny\">Low</option>\n                        <option selected={priority === \"medium\" ? true: false} value=\"medium\">Medium</option>\n                        <option selected={priority === \"high\" ? true: false} value=\"high\">High</option>\n                    </select>\n                </div>}\n\n                <div className=\"alert-buttons\">\n                    <button className={\"alert-button alert-cancel\"} type={\"button\"}\n                            onClick={handleClose}>\n                        {props.cancelName}\n                    </button>\n                    <button className={\"alert-button alert-ok\"} type={\"button\"}\n                            onClick={() => {\n                                props.onOk(input, priority);\n                                handleClose();\n                                if (!props.edit){\n                                    setInput(\"\")\n                                } else{\n                                    setInput(input)\n                                }}}>\n                        {props.okName}\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Alert;","import './main.css'\nimport React, {useState} from \"react\";\nimport Alert from \"./Alert\";\n\nfunction ListsDisplay(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    function handleAlertOK(listName) {\n\n    }\n\n    function handleEdit(inputVal) {\n        props.updateList(props.list.id, inputVal)\n    }\n\n    return (\n        <>\n            <div onClick={() => props.onClick(props.list.id)} className=\"boxes\" id=\"list-box-1\">\n                <img src=\"list-solid.svg\"/>\n                <span>{props.list.title}</span>\n                <div className={\"edit-delete-button-container\"}>\n                    <img className=\"edit-delete-button\" onClick={(e) => {\n                        e.stopPropagation()\n                        setShowAlert(true)\n                    }} src={\"edit-solid.svg\"}/>\n                    <img className=\"edit-delete-button\" onClick={(e) => props.handleDelete(props.list.id, e)} src={\"times-solid.svg\"}></img>\n                {/*    (e) => props.handleDelete(e.target.id)*/}\n                </div>\n\n            </div>\n            <Alert task={false} edit={true} inputValue={props.list.title} visible={showAlert} onClose={() => setShowAlert(false)} onOk={handleEdit} cancelName={\"Don't Save\"} okName={\"Save\"}>\n                <div>Edit List:</div>\n            </Alert>\n        </>\n    )\n}\n\nfunction MainPage(props) {\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOK(listName) {\n        props.setData(listName)\n    }\n\n    return (\n        <>\n            <h1 id=\"MyLists\">My Lists</h1>\n            {props.data.map((x) => <ListsDisplay handleDelete={props.handleDelete} updateList={props.updateList} setData={props.setData} data={props.data} list={x} onClick={props.onListClick}/>)}\n            <div id=\"button1\">\n                <button onClick={() => setShowAlert(true)} className=\"addList addTask\">\n                    <img src=\"plus-solid.svg\"/>\n                    <span>Add List</span>\n                </button>\n            </div>\n            <Alert task={false} edit={false} inputValue={\"\"} visible={showAlert} onClose={() => setShowAlert(false)} onOk={handleAlertOK} cancelName={\"Don't Add\"} okName={\"Add\"}>\n                <div>Add List:</div>\n            </Alert>\n        </>\n    )\n}\n\nexport default MainPage;","import \"./main.css\"\nimport React, {useEffect, useState, useMemo} from \"react\";\nimport Alert from \"./Alert\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {collection, doc, setDoc, where, getDoc, getDocs} from \"firebase/firestore\";\nimport { query, orderBy, limit } from \"firebase/firestore\";\nimport firebase from \"firebase/compat\";\n\nfunction ShowEditAlert(props) {\n    props.setCurrentTask(props.listitem.id)\n    props.setShowEditAlert(true)\n}\n\nfunction ListsItemDisplay(props){\n    console.log(props.currentTasks);\n    const [checked, setChecked] = useState(props.completed); //useState(props.listitem.completed)\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOKListItem(listitem, priority) {\n        props.updateTask(props.list.id, props.id, listitem, props.completed, priority)\n\n    }\n    function handleDelete(e) {\n        e.stopPropagation()\n        props.deleteTask(props.list.id, props.id)\n\n    }\n\n    function showPriorityImage(priority){\n        if (priority == \"high\"){\n            return (\n                <div>\n            <img className=\"priority-img\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n            <img className=\"priority-img\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n                </div>)\n        } else if (priority == \"medium\"){\n            return (\n                <div>\n                    <img className=\"priority-img\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div id=\"box1\" className=\"boxes boxes-blue\">\n            <input checked={props.completed} type=\"checkbox\" onChange={() => {\n                props.updateTask(props.list.id, props.id, props.listitem, !props.completed, props.priority)\n                // props.setData(Object.assign([], props.data))\n                console.log(\"add completed attribute\")\n            }}/>\n            <label>{props.listitem}</label><br/>\n\n            <div className={\"edit-delete-button-container\"}>\n                {showPriorityImage(props.priority)}\n            <img className=\"edit-delete-button\" onClick={() => setShowAlert(true)} src={\"edit-solid.svg\"}></img>\n            <img className=\"edit-delete-button\" onClick={(e) => handleDelete(e)} src={\"times-solid.svg\"}></img>\n            </div>\n            <Alert edit={true} priority={props.priority} task={true} visible={showAlert} inputValue={props.listitem} onClose={() => setShowAlert(false)} onOk={handleAlertOKListItem} cancelName={\"Don't Save\"} okName={\"Save\"}>\n                <div>Edit Task:</div>\n            </Alert>\n        </div>\n    )\n}\n\nfunction Lists(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    const [currentTasks, setTasks] = useState([]);\n    const [filter, setFilter] = useState(\"title\");\n    console.log(filter)\n    const query = props.collectionRef;\n    const [value, loading, error] = useCollection(props.collectionRef.doc(props.list.id).collection(props.list.id).orderBy(filter))\n    const elmo = loading === false ? value.docs.map((element)=> element.data()) : []\n\n    function deleteCompleted(elmo){\n        elmo.filter((y) => y.completed).map((x) => props.deleteTask(props.list.id, x.id))\n    }\n\n\n    return (\n        <>\n            <h1>{props.data[0].title}</h1>\n            <div className={\"filters\"}>\n            <label className={\"filter-dropdown\"} htmlFor=\"filters\">Filters</label>\n                <select name=\"filters\" id=\"filter-select\" onChange={(e) => setFilter(e.target.value)}>\n                    <option value=\"title\">Name</option>\n                    <option value=\"created\">Creation Date</option>\n                    <option value=\"priority\">Priority</option>\n                </select>\n            </div>\n            {elmo.filter((y) => !y.completed).map((x) => <ListsItemDisplay deleteTask={props.deleteTask} updateTask={props.updateTask} setTasks={setTasks} currentTasks={currentTasks} list={props.list} setData={props.setData} data={props.data} id={x.id} listitem={x.title} completed={x.completed} priority={x.priority}/>)}\n            <hr/>\n            <h3 className={\"completed\"}>Completed:</h3>\n            <button className={\"completed-button\"} onClick={() => deleteCompleted(elmo)}>Delete All Completed</button>\n            {elmo.filter((y) => y.completed).map((x) => <ListsItemDisplay deleteTask={props.deleteTask} updateTask={props.updateTask} setTasks={setTasks} currentTasks={currentTasks} list={props.list} setData={props.setData} data={props.data} id={x.id} listitem={x.title} completed={x.completed} priority={x.priority}/>)}\n            <div id=\"button1\">\n                <button onClick={() => {setShowAlert(true)}} className=\"addTask\">\n                    <img src=\"plus-solid.svg\"/>\n                    <span>Add Task</span>\n                </button>\n            </div>\n            <Alert edit={false} priority={props.priority} task={true} visible={showAlert}  onClose={() => setShowAlert(false)} onOk={(input) => props.addListItem(props.list, input, \"tiny\") } cancelName={\"Don't Add\"} okName={\"Add\"}>\n                <div>Add Task:</div>\n            </Alert>\n        </>\n    )\n}\n\nexport default Lists;","import './AlertApp.css';\nimport React, {useState} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {collection, doc, setDoc, query, where, getDoc, getDocs, updateDoc, deleteDoc, Timestamp} from \"firebase/firestore\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCcQ6XCOvMIA7pHME4bWBgy_7OVy_7XErA\",\n    authDomain: \"cs124-fall2021.firebaseapp.com\",\n    projectId: \"cs124-fall2021\",\n    storageBucket: \"cs124-fall2021.appspot.com\",\n    messagingSenderId: \"264318304667\",\n    appId: \"1:264318304667:web:4be8d27a02811b1ccd613e\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction App() {\n\n    const collectionName = \"lewing-hmc-tasks2\"\n    const query = db.collection(collectionName);\n    const [hasFetchedTask, setFetch] = useState(false);\n    let collectionRef = db.collection(collectionName)\n    const [value, loading, error] = useCollection(query)\n    if (!loading) {\n        value.docs.map(async (x) => console.log((await getDoc(x.ref)).data().title))\n    }\n    const data = loading === false ? value.docs.map((element)=> element.data()) : []\n\n    const [showAlert, setShowAlert] = useState(false);\n    const [showEditAlert, setShowEditAlert] = useState(false);\n    let [listId, setListId] = useState(0);\n    let [selectedPage, setPage] = useState({\n        type: \"home\"\n    })\n\n    function handleAddList(listName) {\n        const List = {\n            id: generateUniqueID(),\n            title: listName,\n        }\n        collectionRef.doc(List.id).set(List)\n    }\n\n\n    function handleDeleteList(id, e){\n        collectionRef.doc(id).delete()\n        e.stopPropagation()\n    }\n\n    function setFetchAndPage(){\n        setFetch(false);\n        setPage({type: \"home\"});\n    }\n\n    function addListItem(list, itemName, priority){\n        const Task = {\n            id: generateUniqueID(),\n            title: itemName,\n            completed: false,\n            priority: priority, // planning on tiny, medium, high\n            created: firebase.database.ServerValue.TIMESTAMP\n        }\n        list.collection(list.id).doc(Task.id).set(Task)\n        setFetch(false)\n    }\n\n    async function getDocInfo(id){\n        let currTasks = [];\n        if(!loading){\n            const q = collectionRef.doc(id).collection(id);\n            const querySnapshot = await getDocs(q);\n            querySnapshot.forEach((doc) => {\n                currTasks.push([doc.data().id, doc.data().title, doc.data().completed, doc.data().priority]);\n        });}\n        return currTasks;\n    }\n\n    async function updateTask(listid, taskid, title_val, comp_value, priority_value){\n        await collectionRef.doc(listid)\n            .collection(listid)\n            .doc(taskid)\n            .update({\n                title: title_val,\n                completed: comp_value,\n                priority: priority_value\n            });\n        setFetch(false)\n    }\n\n    async function updateList(id, title_val){\n        await collectionRef.doc(id).update({\n                title: title_val\n            })\n    }\n\n    async function deleteTask(listid, taskid){\n        await collectionRef.doc(listid).collection(listid).doc(taskid).delete();\n        setFetch(false)\n\n    }\n\n    const pageRenderLookup = {\n        \"home\": (\n                <MainPage updateList={updateList} handleDelete={handleDeleteList} setData={handleAddList} data={data} onListClick={(n) =>\n                    setPage({\n                    type: \"list\",\n                    selectedId: n\n                })}/>\n        ),\n        \"list\": (\n            <>\n                <img onClick={() => setFetchAndPage()} src={\"long-arrow-alt-left-solid.svg\"} className={\"back-arrow\"}/>\n                <Lists collectionRef={collectionRef} query={useCollection} deleteTask={deleteTask} updateTask={updateTask} setFetch={setFetch} fetch={loading} data={data.filter((x) => x.id == selectedPage.selectedId)}  getDocInfo={getDocInfo} addListItem={addListItem} list={collectionRef.doc(selectedPage.selectedId)}/>\n            </>\n        )\n    }\n    return pageRenderLookup[selectedPage.type]\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  //  start first component to start going (App.js)\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}