{"ast":null,"code":"var _jsxFileName = \"/Users/laurenwest/code/cs124/lab2R/src/Alert.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  _s();\n\n  let [listName, setListName] = useState(\"\");\n  let [listItemName, setListItemName] = useState(\"\");\n\n  if (props.selectedId === -1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [props.children, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: listName,\n              onChange: e => setListName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"alert-button alert-cancel\",\n            type: \"button\",\n            onClick: props.onClose,\n            children: props.cancelName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"alert-button alert-ok\",\n            type: \"button\",\n            onClick: () => {\n              props.onOk(listName);\n              props.onClose();\n            },\n            children: props.okName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [props.children, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: listItemName,\n              onChange: e => setListItemName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"alert-button alert-cancel\",\n            type: \"button\",\n            onClick: props.onClose,\n            children: props.cancelName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"alert-button alert-ok\",\n            type: \"button\",\n            onClick: () => {\n              props.onOkItem(listItemName);\n              props.onClose();\n            },\n            children: props.okName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(Alert, \"UQxkl+L3A5HJFLMzmC7ZgsDxFJE=\");\n\n_c = Alert;\nexport default Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/Users/laurenwest/code/cs124/lab2R/src/Alert.js"],"names":["useState","Alert","props","listName","setListName","listItemName","setListItemName","selectedId","children","e","target","value","onClose","cancelName","onOk","okName","onOkItem"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AACjB,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAA9C;;AACA,MAAIE,KAAK,CAACK,UAAN,KAAqB,CAAC,CAA1B,EAA4B;AACxB,wBACA;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,mBACKL,KAAK,CAACM,QADX,eAEI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACI;AAAA,6CAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,MAAxB;AAA+B,cAAA,KAAK,EAAEL,QAAtC;AAAgD,cAAA,QAAQ,EAAGM,CAAD,IAAOL,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5E;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAQ,YAAA,SAAS,EAAE,2BAAnB;AAAgD,YAAA,IAAI,EAAE,QAAtD;AACQ,YAAA,OAAO,EAAET,KAAK,CAACU,OADvB;AAAA,sBAEKV,KAAK,CAACW;AAFX;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI;AAAQ,YAAA,SAAS,EAAE,uBAAnB;AAA4C,YAAA,IAAI,EAAE,QAAlD;AACQ,YAAA,OAAO,EAAE,MAAM;AACXX,cAAAA,KAAK,CAACY,IAAN,CAAWX,QAAX;AACAD,cAAAA,KAAK,CAACU,OAAN;AACH,aAJT;AAAA,sBAKKV,KAAK,CAACa;AALX;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA;AAuBE,GAxBN,MAyBK;AACD,wBACA;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,mBACKb,KAAK,CAACM,QADX,eAEI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACI;AAAA,6CAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,MAAxB;AAA+B,cAAA,KAAK,EAAEH,YAAtC;AAAoD,cAAA,QAAQ,EAAGI,CAAD,IAAOH,eAAe,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAApF;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAQ,YAAA,SAAS,EAAE,2BAAnB;AAAgD,YAAA,IAAI,EAAE,QAAtD;AACQ,YAAA,OAAO,EAAET,KAAK,CAACU,OADvB;AAAA,sBAEKV,KAAK,CAACW;AAFX;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI;AAAQ,YAAA,SAAS,EAAE,uBAAnB;AAA4C,YAAA,IAAI,EAAE,QAAlD;AACQ,YAAA,OAAO,EAAE,MAAM;AACXX,cAAAA,KAAK,CAACc,QAAN,CAAeX,YAAf;AACAH,cAAAA,KAAK,CAACU,OAAN;AACH,aAJT;AAAA,sBAKKV,KAAK,CAACa;AALX;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA;AAuBF;AACL;;GArDQd,K;;KAAAA,K;AAuDT,eAAeA,KAAf","sourcesContent":["import {useState} from \"react\";\n\nfunction Alert(props){\n    let [listName, setListName] = useState(\"\");\n    let [listItemName, setListItemName] = useState(\"\");\n    if (props.selectedId === -1){\n        return (\n        <div className={\"backdrop\"}>\n            <div className=\"modal\">\n                {props.children}\n                <div className=\"alert-buttons\">\n                    <label>\n                        Name:\n                        <input type=\"text\" name=\"name\" value={listName} onChange={(e) => setListName(e.target.value)} />\n                    </label>\n                    <button className={\"alert-button alert-cancel\"} type={\"button\"}\n                            onClick={props.onClose}>\n                        {props.cancelName}\n                    </button>\n                    <button className={\"alert-button alert-ok\"} type={\"button\"}\n                            onClick={() => {\n                                props.onOk(listName);\n                                props.onClose();\n                            }}>\n                        {props.okName}\n                    </button>\n                </div>\n            </div>\n        </div>\n        )}\n    else {\n        return(\n        <div className={\"backdrop\"}>\n            <div className=\"modal\">\n                {props.children}\n                <div className=\"alert-buttons\">\n                    <label>\n                        Name:\n                        <input type=\"text\" name=\"name\" value={listItemName} onChange={(e) => setListItemName(e.target.value)} />\n                    </label>\n                    <button className={\"alert-button alert-cancel\"} type={\"button\"}\n                            onClick={props.onClose}>\n                        {props.cancelName}\n                    </button>\n                    <button className={\"alert-button alert-ok\"} type={\"button\"}\n                            onClick={() => {\n                                props.onOkItem(listItemName);\n                                props.onClose();\n                            }}>\n                        {props.okName}\n                    </button>\n                </div>\n            </div>\n        </div>\n    )}\n}\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}