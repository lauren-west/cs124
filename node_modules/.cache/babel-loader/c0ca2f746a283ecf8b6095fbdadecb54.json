{"ast":null,"code":"var _jsxFileName = \"/Users/laurenwest/code/cs124/lab2R/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport './AlertApp.css';\nimport React, { useState } from \"react\";\nimport MainPage from './MainPage';\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(false);\n  let [data, setData] = useState(DATA);\n  let [selectedPage, setPage] = useState({\n    type: \"home\"\n  });\n  const pageRenderLookup = {\n    \"home\": /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(MainPage, {\n        setShowAlert: setShowAlert,\n        setData: setData,\n        data: data,\n        onListClick: n => setPage({\n          type: \"list\",\n          selectedId: n\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false),\n    \"list\": /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => setPage({\n          type: \"home\"\n        }),\n        src: \"long-arrow-alt-left-solid.svg\",\n        className: \"back-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Lists, {\n        handleDelete: updateListItems,\n        setShowAlert: setShowAlert,\n        setShowAlert: setShowAlert,\n        setData: setData,\n        data: data,\n        list: data[selectedPage.selectedId]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), renderAlert(showAlert, \"Don't Add Task\", \"Add Task\", handleAlertOKListItem)]\n    }, void 0, true)\n  };\n  return pageRenderLookup[selectedPage.type];\n}\n\n_s(App, \"xAJ/SKzqVN2j7SH93mV8pizAXv0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/laurenwest/code/cs124/lab2R/src/App.js"],"names":["React","useState","MainPage","Lists","DATA","App","showAlert","setShowAlert","data","setData","selectedPage","setPage","type","pageRenderLookup","n","selectedId","updateListItems","renderAlert","handleAlertOKListItem"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAO,gBAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,MAAI,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACG,IAAD,CAA9B;AACA,MAAI,CAACM,YAAD,EAAeC,OAAf,IAA0BV,QAAQ,CAAC;AACnCW,IAAAA,IAAI,EAAE;AAD6B,GAAD,CAAtC;AAIA,QAAMC,gBAAgB,GAAG;AACrB,yBACI;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEN,YAAxB;AAAsC,QAAA,OAAO,EAAEE,OAA/C;AAAwD,QAAA,IAAI,EAAED,IAA9D;AAAoE,QAAA,WAAW,EAAGM,CAAD,IAAOH,OAAO,CAAC;AAC5FC,UAAAA,IAAI,EAAE,MADsF;AAE5FG,UAAAA,UAAU,EAAED;AAFgF,SAAD;AAA/F;AAAA;AAAA;AAAA;AAAA;AADJ,qBAFiB;AASrB,yBACI;AAAA,8BACI;AAAK,QAAA,OAAO,EAAE,MAAMH,OAAO,CAAC;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAD,CAA3B;AAA6C,QAAA,GAAG,EAAE,+BAAlD;AAAmF,QAAA,SAAS,EAAE;AAA9F;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,YAAY,EAAEI,eAArB;AAAsC,QAAA,YAAY,EAAET,YAApD;AAAmE,QAAA,YAAY,EAAEA,YAAjF;AAA+F,QAAA,OAAO,EAAEE,OAAxG;AAAiH,QAAA,IAAI,EAAED,IAAvH;AAA6H,QAAA,IAAI,EAAEA,IAAI,CAACE,YAAY,CAACK,UAAd;AAAvI;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKE,WAAW,CAACX,SAAD,EAAY,gBAAZ,EAA8B,UAA9B,EAA0CY,qBAA1C,CAHhB;AAAA;AAViB,GAAzB;AAiBA,SAAOL,gBAAgB,CAACH,YAAY,CAACE,IAAd,CAAvB;AACH;;GAzBQP,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport './AlertApp.css';\nimport React, {useState} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\n\nfunction App() {\n    const [showAlert, setShowAlert] = useState(false);\n    let [data, setData] = useState(DATA);\n    let [selectedPage, setPage] = useState({\n        type: \"home\"\n    })\n\n    const pageRenderLookup = {\n        \"home\": (\n            <>\n                <MainPage setShowAlert={setShowAlert} setData={setData} data={data} onListClick={(n) => setPage({\n                    type: \"list\",\n                    selectedId: n\n                })}/>\n            </>\n        ),\n        \"list\": (\n            <>\n                <img onClick={() => setPage({type: \"home\"})} src={\"long-arrow-alt-left-solid.svg\"} className={\"back-arrow\"}/>\n                <Lists handleDelete={updateListItems} setShowAlert={setShowAlert}  setShowAlert={setShowAlert} setData={setData} data={data} list={data[selectedPage.selectedId]}/>\n                {renderAlert(showAlert, \"Don't Add Task\", \"Add Task\", handleAlertOKListItem)}\n            </>\n        )\n    }\n    return pageRenderLookup[selectedPage.type]\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}