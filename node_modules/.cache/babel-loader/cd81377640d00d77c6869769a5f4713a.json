{"ast":null,"code":"var _jsxFileName = \"/Users/laurenwest/code/cs124/lab2R/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport './AlertApp.css';\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport MainPage from './MainPage';\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\nimport Alert from './Alert';\nimport AlertEdit from './AlertEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [showEditAlert, setShowEditAlert] = useState(false);\n  let [currentTask, setCurrentTask] = useState(\"\");\n  let [data, setData] = useState(DATA);\n  let [listId, setListId] = useState(0);\n  let [selectedPage, setPage] = useState({\n    type: \"home\"\n  });\n\n  function handleAlertOK(listName) {\n    setData([...data, {\n      id: data.length,\n      title: listName,\n      listItems: []\n    }]);\n  }\n\n  function updateListItems(newListItems) {\n    setData(data.map(list => {\n      if (selectedPage.selectedId === list.id) {\n        list.listItems = newListItems;\n      }\n\n      return list;\n    }));\n  }\n\n  function handleAlertOKListItem(listItemName) {\n    updateListItems([...data[selectedPage.selectedId].listItems, {\n      id: data[selectedPage.selectedId].listItems.length,\n      text: listItemName,\n      completed: false\n    }]);\n  }\n\n  function handleEditTask(listItemName) {\n    setData(data.map(list => {\n      if (selectedPage.selectedId === list.id) {\n        list.listItems[currentTask].text = listItemName;\n      }\n\n      return list;\n    }));\n  }\n\n  function handleEditList(listName) {\n    console.log(listId);\n    setData(data.map(list => {\n      if (listId === list.id) {\n        console.log(\"AHHHHHHH\");\n        console.log(listName);\n        console.log(list.title);\n        list.title = listName;\n      }\n\n      return list;\n    }));\n  }\n\n  function toggleModal() {\n    setShowAlert(false);\n    setShowEditAlert(false);\n  }\n\n  function renderAlert(showAlert, cancelName, okName, handleOk) {\n    if (!showAlert) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: toggleModal,\n      onOk: handleOk,\n      cancelName: cancelName,\n      okName: okName,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [okName, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n  function renderEditAlert(showEditAlert, cancelEdit, acceptEdit, handleOk) {\n    if (!showEditAlert) {\n      return null;\n    }\n\n    if (selectedPage === \"home\") {\n      {\n        console.log(\"home\");\n      }\n      return /*#__PURE__*/_jsxDEV(AlertEdit, {\n        inputName: data[listId].title,\n        data: data,\n        onClose: toggleModal,\n        onOk: handleOk,\n        cancelName: cancelEdit,\n        currentTask: currentTask,\n        selectedId: selectedPage.selectedId,\n        okName: acceptEdit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [acceptEdit, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [console.log(currentTask), console.log(data[listId]), console.log(data[listId].listItems), console.log(data[listId].listItems[currentTask]), console.log(data[listId].listItems[currentTask].text), /*#__PURE__*/_jsxDEV(AlertEdit, {\n          inputName: \"hey\",\n          data: data,\n          onClose: toggleModal,\n          onOk: handleOk,\n          cancelName: cancelEdit,\n          currentTask: currentTask,\n          selectedId: selectedPage.selectedId,\n          okName: acceptEdit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [acceptEdit, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  const pageRenderLookup = {\n    \"home\": /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainPage, {\n        setListId: setListId,\n        setShowEditAlert: setShowEditAlert,\n        setShowAlert: setShowAlert,\n        setData: setData,\n        data: data,\n        onListClick: n => setPage({\n          type: \"list\",\n          selectedId: n\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), renderAlert(showAlert, \"Don't Add List\", \"Add List\", handleAlertOK), renderEditAlert(showEditAlert, \"Don't Edit List\", \"Edit List\", handleEditList)]\n    }, void 0, true),\n    \"list\": /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => setPage({\n          type: \"home\"\n        }),\n        src: \"long-arrow-alt-left-solid.svg\",\n        className: \"back-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Lists, {\n        setCurrentTask: setCurrentTask,\n        handleDelete: updateListItems,\n        setShowEditAlert: setShowEditAlert,\n        setShowAlert: setShowAlert,\n        setData: setData,\n        data: data,\n        selectedId: selectedPage.selectedId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), renderAlert(showAlert, \"Don't Add Task\", \"Add Task\", handleAlertOKListItem), renderEditAlert(showEditAlert, \"Don't Edit Task\", \"Edit Task\", handleEditTask)]\n    }, void 0, true)\n  };\n  return pageRenderLookup[selectedPage.type];\n}\n\n_s(App, \"/3ccOCWU3DfJAOAYjKwebIQZiu4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/laurenwest/code/cs124/lab2R/src/App.js"],"names":["React","useEffect","useState","useMemo","MainPage","Lists","DATA","Alert","AlertEdit","App","showAlert","setShowAlert","showEditAlert","setShowEditAlert","currentTask","setCurrentTask","data","setData","listId","setListId","selectedPage","setPage","type","handleAlertOK","listName","id","length","title","listItems","updateListItems","newListItems","map","list","selectedId","handleAlertOKListItem","listItemName","text","completed","handleEditTask","handleEditList","console","log","toggleModal","renderAlert","cancelName","okName","handleOk","renderEditAlert","cancelEdit","acceptEdit","pageRenderLookup","n"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport './AlertApp.css';\nimport React, {useEffect, useState, useMemo} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\nimport Alert from './Alert';\nimport AlertEdit from './AlertEdit'\n\nfunction App() {\n    const [showAlert, setShowAlert] = useState(false);\n    const [showEditAlert, setShowEditAlert] = useState(false);\n    let [currentTask, setCurrentTask] = useState(\"\");\n    let [data, setData] = useState(DATA);\n    let [listId, setListId] = useState(0);\n    let [selectedPage, setPage] = useState({\n        type: \"home\"\n    })\n\n    function handleAlertOK(listName) {\n        setData([...data, {\n                id: data.length,\n                title: listName,\n                listItems: []\n                }\n            ]\n        )\n    }\n\n    function updateListItems(newListItems){\n        setData(data.map(list => {\n            if (selectedPage.selectedId === list.id) {\n                list.listItems = newListItems\n            }\n            return list;\n        }))\n    }\n\n    function handleAlertOKListItem(listItemName) {\n        updateListItems([...data[selectedPage.selectedId].listItems,\n            {\n                id: data[selectedPage.selectedId].listItems.length,\n                text: listItemName,\n                completed: false\n            }\n        ]);\n    }\n\n    function handleEditTask(listItemName){\n        setData(data.map(list => {\n            if (selectedPage.selectedId === list.id) {\n                list.listItems[currentTask].text = listItemName\n            }\n            return list;\n        }))\n    }\n\n    function handleEditList(listName){\n        console.log(listId)\n        setData(data.map(list => {\n            if ( listId === list.id) {\n                console.log(\"AHHHHHHH\")\n                console.log(listName)\n                console.log(list.title)\n                list.title = listName\n            }\n            return list;\n        }))\n    }\n\n\n    function toggleModal() {\n        setShowAlert(false);\n        setShowEditAlert(false);\n    }\n\n    function renderAlert(showAlert, cancelName, okName, handleOk){\n        if (!showAlert){\n            return null\n        }\n        return (\n            <Alert onClose={toggleModal} onOk={handleOk} cancelName={cancelName} okName={okName}>\n                <div>{okName}:</div>\n            </Alert>\n        )\n    }\n\n    function renderEditAlert(showEditAlert, cancelEdit, acceptEdit, handleOk){\n        if (!showEditAlert){\n            return null\n        }\n\n        if(selectedPage === \"home\"){\n            {console.log(\"home\")}\n            return (\n                <AlertEdit inputName={data[listId].title} data={data} onClose={toggleModal} onOk={handleOk} cancelName={cancelEdit}\n                           currentTask={currentTask} selectedId={selectedPage.selectedId} okName={acceptEdit}>\n                    <div>{acceptEdit}:</div>\n                </AlertEdit>\n            )\n        }\n        else {\n            return (\n                <div>\n                    {console.log(currentTask)}\n                    {console.log(data[listId])}\n                    {console.log(data[listId].listItems)}\n                    {console.log(data[listId].listItems[currentTask])}\n                    {console.log(data[listId].listItems[currentTask].text)}\n\n                <AlertEdit inputName={\"hey\"} data={data} onClose={toggleModal} onOk={handleOk} cancelName={cancelEdit}\n                           currentTask={currentTask} selectedId={selectedPage.selectedId} okName={acceptEdit}>\n                    <div>{acceptEdit}:</div>\n                </AlertEdit>\n                </div>\n            )\n        }\n    }\n\n    const pageRenderLookup = {\n        \"home\": (\n            <>\n                <MainPage setListId={setListId} setShowEditAlert={setShowEditAlert} setShowAlert={setShowAlert} setData={setData} data={data} onListClick={(n) => setPage({\n                    type: \"list\",\n                    selectedId: n\n                })}/>\n                {renderAlert(showAlert, \"Don't Add List\", \"Add List\", handleAlertOK)}\n                {renderEditAlert(showEditAlert,\"Don't Edit List\", \"Edit List\", handleEditList)}\n\n            </>\n        ),\n        \"list\": (\n            <>\n                <img onClick={() => setPage({type: \"home\"})} src={\"long-arrow-alt-left-solid.svg\"} className={\"back-arrow\"}/>\n                <Lists setCurrentTask={setCurrentTask} handleDelete={updateListItems} setShowEditAlert={setShowEditAlert} setShowAlert={setShowAlert} setData={setData} data={data} selectedId={selectedPage.selectedId}/>\n                {renderAlert(showAlert, \"Don't Add Task\", \"Add Task\", handleAlertOKListItem)}\n                {renderEditAlert(showEditAlert,\"Don't Edit Task\", \"Edit Task\", handleEditTask)}\n            </>\n        )\n    }\n    return pageRenderLookup[selectedPage.type]\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}