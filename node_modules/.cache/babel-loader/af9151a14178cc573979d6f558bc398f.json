{"ast":null,"code":"import _regeneratorRuntime from \"/Users/laurenwest/code/cs124/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/laurenwest/code/cs124/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/laurenwest/code/cs124/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createForOfIteratorHelper from \"/Users/laurenwest/code/cs124/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _defineProperty from \"/Users/laurenwest/code/cs124/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/laurenwest/code/cs124/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/laurenwest/code/cs124/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _ERROR_MAP;\n\nimport '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { openDb, deleteDb } from 'idb';\nimport { ErrorFactory, isIndexedDBAvailable, validateIndexedDBOpenable, getModularInstance } from '@firebase/util';\nimport { _registerComponent, getApp, _getProvider } from '@firebase/app';\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\nvar ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n/** Key of FCM Payload in Notification's data field. */\n\nvar FCM_MSG = 'FCM_MSG';\nvar CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id'; // Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\n\nvar SDK_PLATFORM_WEB = 3;\nvar EVENT_MESSAGE_DELIVERED = 1;\nvar MessageType$1;\n\n(function (MessageType) {\n  MessageType[MessageType[\"DATA_MESSAGE\"] = 1] = \"DATA_MESSAGE\";\n  MessageType[MessageType[\"DISPLAY_NOTIFICATION\"] = 3] = \"DISPLAY_NOTIFICATION\";\n})(MessageType$1 || (MessageType$1 = {}));\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\r\n * in compliance with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n * or implied. See the License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\n\n\nvar MessageType;\n\n(function (MessageType) {\n  MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\n  MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\n})(MessageType || (MessageType = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction arrayToBase64(array) {\n  var uint8Array = new Uint8Array(array);\n  var base64String = btoa(String.fromCharCode.apply(String, _toConsumableArray(uint8Array)));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nfunction base64ToArray(base64String) {\n  var padding = '='.repeat((4 - base64String.length % 4) % 4);\n  var base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n  var rawData = atob(base64);\n  var outputArray = new Uint8Array(rawData.length);\n\n  for (var i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OLD_DB_NAME = 'fcm_token_details_db';\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\r\n * callback is called for all versions of the old DB.\r\n */\n\nvar OLD_DB_VERSION = 5;\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nfunction migrateOldDatabase(_x) {\n  return _migrateOldDatabase.apply(this, arguments);\n}\n\nfunction _migrateOldDatabase() {\n  _migrateOldDatabase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(senderId) {\n    var databases, dbNames, tokenDetails, db;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!('databases' in indexedDB)) {\n              _context2.next = 7;\n              break;\n            }\n\n            _context2.next = 3;\n            return indexedDB.databases();\n\n          case 3:\n            databases = _context2.sent;\n            dbNames = databases.map(function (db) {\n              return db.name;\n            });\n\n            if (dbNames.includes(OLD_DB_NAME)) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", null);\n\n          case 7:\n            tokenDetails = null;\n            _context2.next = 10;\n            return openDb(OLD_DB_NAME, OLD_DB_VERSION, /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(db) {\n                var _a, objectStore, value, oldDetails, _oldDetails, _oldDetails2;\n\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!(db.oldVersion < 2)) {\n                          _context.next = 2;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\");\n\n                      case 2:\n                        if (db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n                          _context.next = 4;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\");\n\n                      case 4:\n                        objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\n                        _context.next = 7;\n                        return objectStore.index('fcmSenderId').get(senderId);\n\n                      case 7:\n                        value = _context.sent;\n                        _context.next = 10;\n                        return objectStore.clear();\n\n                      case 10:\n                        if (value) {\n                          _context.next = 12;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\");\n\n                      case 12:\n                        if (!(db.oldVersion === 2)) {\n                          _context.next = 19;\n                          break;\n                        }\n\n                        oldDetails = value;\n\n                        if (!(!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint)) {\n                          _context.next = 16;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\");\n\n                      case 16:\n                        tokenDetails = {\n                          token: oldDetails.fcmToken,\n                          createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\n                          subscriptionOptions: {\n                            auth: oldDetails.auth,\n                            p256dh: oldDetails.p256dh,\n                            endpoint: oldDetails.endpoint,\n                            swScope: oldDetails.swScope,\n                            vapidKey: typeof oldDetails.vapidKey === 'string' ? oldDetails.vapidKey : arrayToBase64(oldDetails.vapidKey)\n                          }\n                        };\n                        _context.next = 20;\n                        break;\n\n                      case 19:\n                        if (db.oldVersion === 3) {\n                          _oldDetails = value;\n                          tokenDetails = {\n                            token: _oldDetails.fcmToken,\n                            createTime: _oldDetails.createTime,\n                            subscriptionOptions: {\n                              auth: arrayToBase64(_oldDetails.auth),\n                              p256dh: arrayToBase64(_oldDetails.p256dh),\n                              endpoint: _oldDetails.endpoint,\n                              swScope: _oldDetails.swScope,\n                              vapidKey: arrayToBase64(_oldDetails.vapidKey)\n                            }\n                          };\n                        } else if (db.oldVersion === 4) {\n                          _oldDetails2 = value;\n                          tokenDetails = {\n                            token: _oldDetails2.fcmToken,\n                            createTime: _oldDetails2.createTime,\n                            subscriptionOptions: {\n                              auth: arrayToBase64(_oldDetails2.auth),\n                              p256dh: arrayToBase64(_oldDetails2.p256dh),\n                              endpoint: _oldDetails2.endpoint,\n                              swScope: _oldDetails2.swScope,\n                              vapidKey: arrayToBase64(_oldDetails2.vapidKey)\n                            }\n                          };\n                        }\n\n                      case 20:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x29) {\n                return _ref6.apply(this, arguments);\n              };\n            }());\n\n          case 10:\n            db = _context2.sent;\n            db.close(); // Delete all old databases.\n\n            _context2.next = 14;\n            return deleteDb(OLD_DB_NAME);\n\n          case 14:\n            _context2.next = 16;\n            return deleteDb('fcm_vapid_details_db');\n\n          case 16:\n            _context2.next = 18;\n            return deleteDb('undefined');\n\n          case 18:\n            return _context2.abrupt(\"return\", checkTokenDetails(tokenDetails) ? tokenDetails : null);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _migrateOldDatabase.apply(this, arguments);\n}\n\nfunction checkTokenDetails(tokenDetails) {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n\n  var subscriptionOptions = tokenDetails.subscriptionOptions;\n  return typeof tokenDetails.createTime === 'number' && tokenDetails.createTime > 0 && typeof tokenDetails.token === 'string' && tokenDetails.token.length > 0 && typeof subscriptionOptions.auth === 'string' && subscriptionOptions.auth.length > 0 && typeof subscriptionOptions.p256dh === 'string' && subscriptionOptions.p256dh.length > 0 && typeof subscriptionOptions.endpoint === 'string' && subscriptionOptions.endpoint.length > 0 && typeof subscriptionOptions.swScope === 'string' && subscriptionOptions.swScope.length > 0 && typeof subscriptionOptions.vapidKey === 'string' && subscriptionOptions.vapidKey.length > 0;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Exported for tests.\n\n\nvar DATABASE_NAME = 'firebase-messaging-database';\nvar DATABASE_VERSION = 1;\nvar OBJECT_STORE_NAME = 'firebase-messaging-store';\nvar dbPromise = null;\n\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDb) {\n      // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n      // because if there are multiple versions between the old version and the current version, we\n      // want ALL the migrations that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDb.oldVersion) {\n        case 0:\n          upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n\n  return dbPromise;\n}\n/** Gets record(s) from the objectStore that match the given key. */\n\n\nfunction dbGet(_x2) {\n  return _dbGet.apply(this, arguments);\n}\n/** Assigns or overwrites the record for the given key with the given value. */\n\n\nfunction _dbGet() {\n  _dbGet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(firebaseDependencies) {\n    var key, db, tokenDetails, oldTokenDetails;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            key = getKey(firebaseDependencies);\n            _context3.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context3.sent;\n            _context3.next = 6;\n            return db.transaction(OBJECT_STORE_NAME).objectStore(OBJECT_STORE_NAME).get(key);\n\n          case 6:\n            tokenDetails = _context3.sent;\n\n            if (!tokenDetails) {\n              _context3.next = 11;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", tokenDetails);\n\n          case 11:\n            _context3.next = 13;\n            return migrateOldDatabase(firebaseDependencies.appConfig.senderId);\n\n          case 13:\n            oldTokenDetails = _context3.sent;\n\n            if (!oldTokenDetails) {\n              _context3.next = 18;\n              break;\n            }\n\n            _context3.next = 17;\n            return dbSet(firebaseDependencies, oldTokenDetails);\n\n          case 17:\n            return _context3.abrupt(\"return\", oldTokenDetails);\n\n          case 18:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _dbGet.apply(this, arguments);\n}\n\nfunction dbSet(_x3, _x4) {\n  return _dbSet.apply(this, arguments);\n}\n/** Removes record(s) from the objectStore that match the given key. */\n\n\nfunction _dbSet() {\n  _dbSet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(firebaseDependencies, tokenDetails) {\n    var key, db, tx;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            key = getKey(firebaseDependencies);\n            _context4.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context4.sent;\n            tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n            _context4.next = 7;\n            return tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n\n          case 7:\n            _context4.next = 9;\n            return tx.complete;\n\n          case 9:\n            return _context4.abrupt(\"return\", tokenDetails);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _dbSet.apply(this, arguments);\n}\n\nfunction dbRemove(_x5) {\n  return _dbRemove.apply(this, arguments);\n}\n\nfunction _dbRemove() {\n  _dbRemove = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(firebaseDependencies) {\n    var key, db, tx;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            key = getKey(firebaseDependencies);\n            _context5.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context5.sent;\n            tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n            _context5.next = 7;\n            return tx.objectStore(OBJECT_STORE_NAME).delete(key);\n\n          case 7:\n            _context5.next = 9;\n            return tx.complete;\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _dbRemove.apply(this, arguments);\n}\n\nfunction getKey(_ref) {\n  var appConfig = _ref.appConfig;\n  return appConfig.appId;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ERROR_MAP = (_ERROR_MAP = {}, _defineProperty(_ERROR_MAP, \"missing-app-config-values\"\n/* MISSING_APP_CONFIG_VALUES */\n, 'Missing App configuration value: \"{$valueName}\"'), _defineProperty(_ERROR_MAP, \"only-available-in-window\"\n/* AVAILABLE_IN_WINDOW */\n, 'This method is available in a Window context.'), _defineProperty(_ERROR_MAP, \"only-available-in-sw\"\n/* AVAILABLE_IN_SW */\n, 'This method is available in a service worker context.'), _defineProperty(_ERROR_MAP, \"permission-default\"\n/* PERMISSION_DEFAULT */\n, 'The notification permission was not granted and dismissed instead.'), _defineProperty(_ERROR_MAP, \"permission-blocked\"\n/* PERMISSION_BLOCKED */\n, 'The notification permission was not granted and blocked instead.'), _defineProperty(_ERROR_MAP, \"unsupported-browser\"\n/* UNSUPPORTED_BROWSER */\n, \"This browser doesn't support the API's required to use the firebase SDK.\"), _defineProperty(_ERROR_MAP, \"indexed-db-unsupported\"\n/* INDEXED_DB_UNSUPPORTED */\n, \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\"), _defineProperty(_ERROR_MAP, \"failed-service-worker-registration\"\n/* FAILED_DEFAULT_REGISTRATION */\n, 'We are unable to register the default service worker. {$browserErrorMessage}'), _defineProperty(_ERROR_MAP, \"token-subscribe-failed\"\n/* TOKEN_SUBSCRIBE_FAILED */\n, 'A problem occurred while subscribing the user to FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-subscribe-no-token\"\n/* TOKEN_SUBSCRIBE_NO_TOKEN */\n, 'FCM returned no token when subscribing the user to push.'), _defineProperty(_ERROR_MAP, \"token-unsubscribe-failed\"\n/* TOKEN_UNSUBSCRIBE_FAILED */\n, 'A problem occurred while unsubscribing the ' + 'user from FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-update-failed\"\n/* TOKEN_UPDATE_FAILED */\n, 'A problem occurred while updating the user from FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-update-no-token\"\n/* TOKEN_UPDATE_NO_TOKEN */\n, 'FCM returned no token when updating the user to push.'), _defineProperty(_ERROR_MAP, \"use-sw-after-get-token\"\n/* USE_SW_AFTER_GET_TOKEN */\n, 'The useServiceWorker() method may only be called once and must be ' + 'called before calling getToken() to ensure your service worker is used.'), _defineProperty(_ERROR_MAP, \"invalid-sw-registration\"\n/* INVALID_SW_REGISTRATION */\n, 'The input to useServiceWorker() must be a ServiceWorkerRegistration.'), _defineProperty(_ERROR_MAP, \"invalid-bg-handler\"\n/* INVALID_BG_HANDLER */\n, 'The input to setBackgroundMessageHandler() must be a function.'), _defineProperty(_ERROR_MAP, \"invalid-vapid-key\"\n/* INVALID_VAPID_KEY */\n, 'The public VAPID key must be a string.'), _defineProperty(_ERROR_MAP, \"use-vapid-key-after-get-token\"\n/* USE_VAPID_KEY_AFTER_GET_TOKEN */\n, 'The usePublicVapidKey() method may only be called once and must be ' + 'called before calling getToken() to ensure your VAPID key is used.'), _ERROR_MAP);\nvar ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction requestGetToken(_x6, _x7) {\n  return _requestGetToken.apply(this, arguments);\n}\n\nfunction _requestGetToken() {\n  _requestGetToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(firebaseDependencies, subscriptionOptions) {\n    var headers, body, subscribeOptions, responseData, response, message;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return getHeaders(firebaseDependencies);\n\n          case 2:\n            headers = _context6.sent;\n            body = getBody(subscriptionOptions);\n            subscribeOptions = {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(body)\n            };\n            _context6.prev = 5;\n            _context6.next = 8;\n            return fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions);\n\n          case 8:\n            response = _context6.sent;\n            _context6.next = 11;\n            return response.json();\n\n          case 11:\n            responseData = _context6.sent;\n            _context6.next = 17;\n            break;\n\n          case 14:\n            _context6.prev = 14;\n            _context6.t0 = _context6[\"catch\"](5);\n            throw ERROR_FACTORY.create(\"token-subscribe-failed\"\n            /* TOKEN_SUBSCRIBE_FAILED */\n            , {\n              errorInfo: _context6.t0\n            });\n\n          case 17:\n            if (!responseData.error) {\n              _context6.next = 20;\n              break;\n            }\n\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-subscribe-failed\"\n            /* TOKEN_SUBSCRIBE_FAILED */\n            , {\n              errorInfo: message\n            });\n\n          case 20:\n            if (responseData.token) {\n              _context6.next = 22;\n              break;\n            }\n\n            throw ERROR_FACTORY.create(\"token-subscribe-no-token\"\n            /* TOKEN_SUBSCRIBE_NO_TOKEN */\n            );\n\n          case 22:\n            return _context6.abrupt(\"return\", responseData.token);\n\n          case 23:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[5, 14]]);\n  }));\n  return _requestGetToken.apply(this, arguments);\n}\n\nfunction requestUpdateToken(_x8, _x9) {\n  return _requestUpdateToken.apply(this, arguments);\n}\n\nfunction _requestUpdateToken() {\n  _requestUpdateToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(firebaseDependencies, tokenDetails) {\n    var headers, body, updateOptions, responseData, response, message;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return getHeaders(firebaseDependencies);\n\n          case 2:\n            headers = _context7.sent;\n            body = getBody(tokenDetails.subscriptionOptions);\n            updateOptions = {\n              method: 'PATCH',\n              headers: headers,\n              body: JSON.stringify(body)\n            };\n            _context7.prev = 5;\n            _context7.next = 8;\n            return fetch(\"\".concat(getEndpoint(firebaseDependencies.appConfig), \"/\").concat(tokenDetails.token), updateOptions);\n\n          case 8:\n            response = _context7.sent;\n            _context7.next = 11;\n            return response.json();\n\n          case 11:\n            responseData = _context7.sent;\n            _context7.next = 17;\n            break;\n\n          case 14:\n            _context7.prev = 14;\n            _context7.t0 = _context7[\"catch\"](5);\n            throw ERROR_FACTORY.create(\"token-update-failed\"\n            /* TOKEN_UPDATE_FAILED */\n            , {\n              errorInfo: _context7.t0\n            });\n\n          case 17:\n            if (!responseData.error) {\n              _context7.next = 20;\n              break;\n            }\n\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-update-failed\"\n            /* TOKEN_UPDATE_FAILED */\n            , {\n              errorInfo: message\n            });\n\n          case 20:\n            if (responseData.token) {\n              _context7.next = 22;\n              break;\n            }\n\n            throw ERROR_FACTORY.create(\"token-update-no-token\"\n            /* TOKEN_UPDATE_NO_TOKEN */\n            );\n\n          case 22:\n            return _context7.abrupt(\"return\", responseData.token);\n\n          case 23:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[5, 14]]);\n  }));\n  return _requestUpdateToken.apply(this, arguments);\n}\n\nfunction requestDeleteToken(_x10, _x11) {\n  return _requestDeleteToken.apply(this, arguments);\n}\n\nfunction _requestDeleteToken() {\n  _requestDeleteToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(firebaseDependencies, token) {\n    var headers, unsubscribeOptions, response, responseData, message;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return getHeaders(firebaseDependencies);\n\n          case 2:\n            headers = _context8.sent;\n            unsubscribeOptions = {\n              method: 'DELETE',\n              headers: headers\n            };\n            _context8.prev = 4;\n            _context8.next = 7;\n            return fetch(\"\".concat(getEndpoint(firebaseDependencies.appConfig), \"/\").concat(token), unsubscribeOptions);\n\n          case 7:\n            response = _context8.sent;\n            _context8.next = 10;\n            return response.json();\n\n          case 10:\n            responseData = _context8.sent;\n\n            if (!responseData.error) {\n              _context8.next = 14;\n              break;\n            }\n\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\"\n            /* TOKEN_UNSUBSCRIBE_FAILED */\n            , {\n              errorInfo: message\n            });\n\n          case 14:\n            _context8.next = 19;\n            break;\n\n          case 16:\n            _context8.prev = 16;\n            _context8.t0 = _context8[\"catch\"](4);\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\"\n            /* TOKEN_UNSUBSCRIBE_FAILED */\n            , {\n              errorInfo: _context8.t0\n            });\n\n          case 19:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[4, 16]]);\n  }));\n  return _requestDeleteToken.apply(this, arguments);\n}\n\nfunction getEndpoint(_ref2) {\n  var projectId = _ref2.projectId;\n  return \"\".concat(ENDPOINT, \"/projects/\").concat(projectId, \"/registrations\");\n}\n\nfunction getHeaders(_x12) {\n  return _getHeaders.apply(this, arguments);\n}\n\nfunction _getHeaders() {\n  _getHeaders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(_ref3) {\n    var appConfig, installations, authToken;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            appConfig = _ref3.appConfig, installations = _ref3.installations;\n            _context9.next = 3;\n            return installations.getToken();\n\n          case 3:\n            authToken = _context9.sent;\n            return _context9.abrupt(\"return\", new Headers({\n              'Content-Type': 'application/json',\n              Accept: 'application/json',\n              'x-goog-api-key': appConfig.apiKey,\n              'x-goog-firebase-installations-auth': \"FIS \".concat(authToken)\n            }));\n\n          case 5:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _getHeaders.apply(this, arguments);\n}\n\nfunction getBody(_ref4) {\n  var p256dh = _ref4.p256dh,\n      auth = _ref4.auth,\n      endpoint = _ref4.endpoint,\n      vapidKey = _ref4.vapidKey;\n  var body = {\n    web: {\n      endpoint: endpoint,\n      auth: auth,\n      p256dh: p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// UpdateRegistration will be called once every week.\n\n\nvar TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nfunction getTokenInternal(_x13) {\n  return _getTokenInternal.apply(this, arguments);\n}\n/**\r\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\r\n * the push subscription if it exists.\r\n */\n\n\nfunction _getTokenInternal() {\n  _getTokenInternal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(messaging) {\n    var pushSubscription, subscriptionOptions, tokenDetails;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return getPushSubscription(messaging.swRegistration, messaging.vapidKey);\n\n          case 2:\n            pushSubscription = _context10.sent;\n            subscriptionOptions = {\n              vapidKey: messaging.vapidKey,\n              swScope: messaging.swRegistration.scope,\n              endpoint: pushSubscription.endpoint,\n              auth: arrayToBase64(pushSubscription.getKey('auth')),\n              p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\n            };\n            _context10.next = 6;\n            return dbGet(messaging.firebaseDependencies);\n\n          case 6:\n            tokenDetails = _context10.sent;\n\n            if (tokenDetails) {\n              _context10.next = 11;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", getNewToken(messaging.firebaseDependencies, subscriptionOptions));\n\n          case 11:\n            if (isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) {\n              _context10.next = 23;\n              break;\n            }\n\n            _context10.prev = 12;\n            _context10.next = 15;\n            return requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n\n          case 15:\n            _context10.next = 20;\n            break;\n\n          case 17:\n            _context10.prev = 17;\n            _context10.t0 = _context10[\"catch\"](12);\n            // Suppress errors because of #2364\n            console.warn(_context10.t0);\n\n          case 20:\n            return _context10.abrupt(\"return\", getNewToken(messaging.firebaseDependencies, subscriptionOptions));\n\n          case 23:\n            if (!(Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS)) {\n              _context10.next = 27;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", updateToken(messaging, {\n              token: tokenDetails.token,\n              createTime: Date.now(),\n              subscriptionOptions: subscriptionOptions\n            }));\n\n          case 27:\n            return _context10.abrupt(\"return\", tokenDetails.token);\n\n          case 28:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[12, 17]]);\n  }));\n  return _getTokenInternal.apply(this, arguments);\n}\n\nfunction deleteTokenInternal(_x14) {\n  return _deleteTokenInternal.apply(this, arguments);\n}\n\nfunction _deleteTokenInternal() {\n  _deleteTokenInternal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(messaging) {\n    var tokenDetails, pushSubscription;\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return dbGet(messaging.firebaseDependencies);\n\n          case 2:\n            tokenDetails = _context11.sent;\n\n            if (!tokenDetails) {\n              _context11.next = 8;\n              break;\n            }\n\n            _context11.next = 6;\n            return requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n\n          case 6:\n            _context11.next = 8;\n            return dbRemove(messaging.firebaseDependencies);\n\n          case 8:\n            _context11.next = 10;\n            return messaging.swRegistration.pushManager.getSubscription();\n\n          case 10:\n            pushSubscription = _context11.sent;\n\n            if (!pushSubscription) {\n              _context11.next = 13;\n              break;\n            }\n\n            return _context11.abrupt(\"return\", pushSubscription.unsubscribe());\n\n          case 13:\n            return _context11.abrupt(\"return\", true);\n\n          case 14:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _deleteTokenInternal.apply(this, arguments);\n}\n\nfunction updateToken(_x15, _x16) {\n  return _updateToken.apply(this, arguments);\n}\n\nfunction _updateToken() {\n  _updateToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(messaging, tokenDetails) {\n    var updatedToken, updatedTokenDetails;\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            _context12.next = 3;\n            return requestUpdateToken(messaging.firebaseDependencies, tokenDetails);\n\n          case 3:\n            updatedToken = _context12.sent;\n            updatedTokenDetails = Object.assign(Object.assign({}, tokenDetails), {\n              token: updatedToken,\n              createTime: Date.now()\n            });\n            _context12.next = 7;\n            return dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n\n          case 7:\n            return _context12.abrupt(\"return\", updatedToken);\n\n          case 10:\n            _context12.prev = 10;\n            _context12.t0 = _context12[\"catch\"](0);\n            _context12.next = 14;\n            return deleteTokenInternal(messaging);\n\n          case 14:\n            throw _context12.t0;\n\n          case 15:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[0, 10]]);\n  }));\n  return _updateToken.apply(this, arguments);\n}\n\nfunction getNewToken(_x17, _x18) {\n  return _getNewToken.apply(this, arguments);\n}\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\n\n\nfunction _getNewToken() {\n  _getNewToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(firebaseDependencies, subscriptionOptions) {\n    var token, tokenDetails;\n    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return requestGetToken(firebaseDependencies, subscriptionOptions);\n\n          case 2:\n            token = _context13.sent;\n            tokenDetails = {\n              token: token,\n              createTime: Date.now(),\n              subscriptionOptions: subscriptionOptions\n            };\n            _context13.next = 6;\n            return dbSet(firebaseDependencies, tokenDetails);\n\n          case 6:\n            return _context13.abrupt(\"return\", tokenDetails.token);\n\n          case 7:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _getNewToken.apply(this, arguments);\n}\n\nfunction getPushSubscription(_x19, _x20) {\n  return _getPushSubscription.apply(this, arguments);\n}\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\n\n\nfunction _getPushSubscription() {\n  _getPushSubscription = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(swRegistration, vapidKey) {\n    var subscription;\n    return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return swRegistration.pushManager.getSubscription();\n\n          case 2:\n            subscription = _context14.sent;\n\n            if (!subscription) {\n              _context14.next = 5;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", subscription);\n\n          case 5:\n            return _context14.abrupt(\"return\", swRegistration.pushManager.subscribe({\n              userVisibleOnly: true,\n              // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n              // submitted to pushManager#subscribe must be of type Uint8Array.\n              applicationServerKey: base64ToArray(vapidKey)\n            }));\n\n          case 6:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _getPushSubscription.apply(this, arguments);\n}\n\nfunction isTokenValid(dbOptions, currentOptions) {\n  var isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  var isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  var isAuthEqual = currentOptions.auth === dbOptions.auth;\n  var isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction externalizePayload(internalPayload) {\n  var payload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcm_message_id\n  };\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n  return payload;\n}\n\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n  var title = messagePayloadInternal.notification.title;\n\n  if (!!title) {\n    payload.notification.title = title;\n  }\n\n  var body = messagePayloadInternal.notification.body;\n\n  if (!!body) {\n    payload.notification.body = body;\n  }\n\n  var image = messagePayloadInternal.notification.image;\n\n  if (!!image) {\n    payload.notification.image = image;\n  }\n}\n\nfunction propagateDataPayload(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data;\n}\n\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.fcmOptions) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n  var link = messagePayloadInternal.fcmOptions.link;\n\n  if (!!link) {\n    payload.fcmOptions.link = link;\n  } // eslint-disable-next-line camelcase\n\n\n  var analyticsLabel = messagePayloadInternal.fcmOptions.analytics_label;\n\n  if (!!analyticsLabel) {\n    payload.fcmOptions.analyticsLabel = analyticsLabel;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isConsoleMessage(data) {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Returns a promise that resolves after given time passes. */\n\n\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n_mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\n\n_mergeStrings('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');\n\nfunction stageLog(_x21, _x22) {\n  return _stageLog.apply(this, arguments);\n}\n\nfunction _stageLog() {\n  _stageLog = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(messaging, internalPayload) {\n    var fcmEvent;\n    return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.t0 = createFcmEvent;\n            _context15.t1 = internalPayload;\n            _context15.next = 4;\n            return messaging.firebaseDependencies.installations.getId();\n\n          case 4:\n            _context15.t2 = _context15.sent;\n            fcmEvent = (0, _context15.t0)(_context15.t1, _context15.t2);\n            createAndEnqueueLogEvent(messaging, fcmEvent);\n\n          case 7:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _stageLog.apply(this, arguments);\n}\n\nfunction createFcmEvent(internalPayload, fid) {\n  var _a, _b;\n\n  var fcmEvent = {};\n  /* eslint-disable camelcase */\n  // some fields should always be non-null. Still check to ensure.\n\n  if (!!internalPayload.from) {\n    fcmEvent.project_number = internalPayload.from;\n  }\n\n  if (!!internalPayload.fcm_message_id) {\n    fcmEvent.message_id = internalPayload.fcm_message_id;\n  }\n\n  fcmEvent.instance_id = fid;\n\n  if (!!internalPayload.notification) {\n    fcmEvent.message_type = MessageType$1.DISPLAY_NOTIFICATION.toString();\n  } else {\n    fcmEvent.message_type = MessageType$1.DATA_MESSAGE.toString();\n  }\n\n  fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\n  fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\n\n  if (!!internalPayload.collapse_key) {\n    fcmEvent.collapse_key = internalPayload.collapse_key;\n  }\n\n  fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\n\n  if (!!((_a = internalPayload.fcmOptions) === null || _a === void 0 ? void 0 : _a.analytics_label)) {\n    fcmEvent.analytics_label = (_b = internalPayload.fcmOptions) === null || _b === void 0 ? void 0 : _b.analytics_label;\n  }\n  /* eslint-enable camelcase */\n\n\n  return fcmEvent;\n}\n\nfunction createAndEnqueueLogEvent(messaging, fcmEvent) {\n  var logEvent = {};\n  /* eslint-disable camelcase */\n\n  logEvent.event_time_ms = Math.floor(Date.now()).toString();\n  logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent); // eslint-disable-next-line camelcase\n\n  messaging.logEvents.push(logEvent);\n}\n\nfunction _mergeStrings(s1, s2) {\n  var resultArray = [];\n\n  for (var i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction onSubChange(_x23, _x24) {\n  return _onSubChange.apply(this, arguments);\n}\n\nfunction _onSubChange() {\n  _onSubChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(event, messaging) {\n    var _a, _b, newSubscription, tokenDetails;\n\n    return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            newSubscription = event.newSubscription;\n\n            if (newSubscription) {\n              _context16.next = 5;\n              break;\n            }\n\n            _context16.next = 4;\n            return deleteTokenInternal(messaging);\n\n          case 4:\n            return _context16.abrupt(\"return\");\n\n          case 5:\n            _context16.next = 7;\n            return dbGet(messaging.firebaseDependencies);\n\n          case 7:\n            tokenDetails = _context16.sent;\n            _context16.next = 10;\n            return deleteTokenInternal(messaging);\n\n          case 10:\n            messaging.vapidKey = (_b = (_a = tokenDetails === null || tokenDetails === void 0 ? void 0 : tokenDetails.subscriptionOptions) === null || _a === void 0 ? void 0 : _a.vapidKey) !== null && _b !== void 0 ? _b : DEFAULT_VAPID_KEY;\n            _context16.next = 13;\n            return getTokenInternal(messaging);\n\n          case 13:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16);\n  }));\n  return _onSubChange.apply(this, arguments);\n}\n\nfunction onPush(_x25, _x26) {\n  return _onPush.apply(this, arguments);\n}\n\nfunction _onPush() {\n  _onPush = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(event, messaging) {\n    var internalPayload, clientList, payload;\n    return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            internalPayload = getMessagePayloadInternal(event);\n\n            if (internalPayload) {\n              _context17.next = 3;\n              break;\n            }\n\n            return _context17.abrupt(\"return\");\n\n          case 3:\n            if (!messaging.deliveryMetricsExportedToBigQueryEnabled) {\n              _context17.next = 6;\n              break;\n            }\n\n            _context17.next = 6;\n            return stageLog(messaging, internalPayload);\n\n          case 6:\n            _context17.next = 8;\n            return getClientList();\n\n          case 8:\n            clientList = _context17.sent;\n\n            if (!hasVisibleClients(clientList)) {\n              _context17.next = 11;\n              break;\n            }\n\n            return _context17.abrupt(\"return\", sendMessagePayloadInternalToWindows(clientList, internalPayload));\n\n          case 11:\n            if (!internalPayload.notification) {\n              _context17.next = 14;\n              break;\n            }\n\n            _context17.next = 14;\n            return showNotification(wrapInternalPayload(internalPayload));\n\n          case 14:\n            if (messaging) {\n              _context17.next = 16;\n              break;\n            }\n\n            return _context17.abrupt(\"return\");\n\n          case 16:\n            if (!!messaging.onBackgroundMessageHandler) {\n              payload = externalizePayload(internalPayload);\n\n              if (typeof messaging.onBackgroundMessageHandler === 'function') {\n                messaging.onBackgroundMessageHandler(payload);\n              } else {\n                messaging.onBackgroundMessageHandler.next(payload);\n              }\n            }\n\n          case 17:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17);\n  }));\n  return _onPush.apply(this, arguments);\n}\n\nfunction onNotificationClick(_x27) {\n  return _onNotificationClick.apply(this, arguments);\n}\n\nfunction _onNotificationClick() {\n  _onNotificationClick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(event) {\n    var _a, _b, internalPayload, link, url, originUrl, client;\n\n    return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            internalPayload = (_b = (_a = event.notification) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[FCM_MSG];\n\n            if (internalPayload) {\n              _context18.next = 5;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 5:\n            if (!event.action) {\n              _context18.next = 7;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 7:\n            // Prevent other listeners from receiving the event\n            event.stopImmediatePropagation();\n            event.notification.close(); // Note clicking on a notification with no link set will focus the Chrome's current tab.\n\n            link = getLink(internalPayload);\n\n            if (link) {\n              _context18.next = 12;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 12:\n            // FM should only open/focus links from app's origin.\n            url = new URL(link, self.location.href);\n            originUrl = new URL(self.location.origin);\n\n            if (!(url.host !== originUrl.host)) {\n              _context18.next = 16;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 16:\n            _context18.next = 18;\n            return getWindowClient(url);\n\n          case 18:\n            client = _context18.sent;\n\n            if (client) {\n              _context18.next = 27;\n              break;\n            }\n\n            _context18.next = 22;\n            return self.clients.openWindow(link);\n\n          case 22:\n            client = _context18.sent;\n            _context18.next = 25;\n            return sleep(3000);\n\n          case 25:\n            _context18.next = 30;\n            break;\n\n          case 27:\n            _context18.next = 29;\n            return client.focus();\n\n          case 29:\n            client = _context18.sent;\n\n          case 30:\n            if (client) {\n              _context18.next = 32;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 32:\n            internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\n            internalPayload.isFirebaseMessaging = true;\n            return _context18.abrupt(\"return\", client.postMessage(internalPayload));\n\n          case 35:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18);\n  }));\n  return _onNotificationClick.apply(this, arguments);\n}\n\nfunction wrapInternalPayload(internalPayload) {\n  var wrappedInternalPayload = Object.assign({}, internalPayload.notification); // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\n  // notification vs a notification from somewhere else (i.e. normal web push or developer generated\n  // notification).\n\n  wrappedInternalPayload.data = _defineProperty({}, FCM_MSG, internalPayload);\n  return wrappedInternalPayload;\n}\n\nfunction getMessagePayloadInternal(_ref5) {\n  var data = _ref5.data;\n\n  if (!data) {\n    return null;\n  }\n\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\n/**\r\n * @param url The URL to look for when focusing a client.\r\n * @return Returns an existing window client or a newly opened WindowClient.\r\n */\n\n\nfunction getWindowClient(_x28) {\n  return _getWindowClient.apply(this, arguments);\n}\n/**\r\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\r\n * otherwise false.\r\n */\n\n\nfunction _getWindowClient() {\n  _getWindowClient = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(url) {\n    var clientList, _iterator2, _step2, client, clientUrl;\n\n    return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _context19.next = 2;\n            return getClientList();\n\n          case 2:\n            clientList = _context19.sent;\n            _iterator2 = _createForOfIteratorHelper(clientList);\n            _context19.prev = 4;\n\n            _iterator2.s();\n\n          case 6:\n            if ((_step2 = _iterator2.n()).done) {\n              _context19.next = 13;\n              break;\n            }\n\n            client = _step2.value;\n            clientUrl = new URL(client.url, self.location.href);\n\n            if (!(url.host === clientUrl.host)) {\n              _context19.next = 11;\n              break;\n            }\n\n            return _context19.abrupt(\"return\", client);\n\n          case 11:\n            _context19.next = 6;\n            break;\n\n          case 13:\n            _context19.next = 18;\n            break;\n\n          case 15:\n            _context19.prev = 15;\n            _context19.t0 = _context19[\"catch\"](4);\n\n            _iterator2.e(_context19.t0);\n\n          case 18:\n            _context19.prev = 18;\n\n            _iterator2.f();\n\n            return _context19.finish(18);\n\n          case 21:\n            return _context19.abrupt(\"return\", null);\n\n          case 22:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19, null, [[4, 15, 18, 21]]);\n  }));\n  return _getWindowClient.apply(this, arguments);\n}\n\nfunction hasVisibleClients(clientList) {\n  return clientList.some(function (client) {\n    return client.visibilityState === 'visible' && // Ignore chrome-extension clients as that matches the background pages of extensions, which\n    // are always considered visible for some reason.\n    !client.url.startsWith('chrome-extension://');\n  });\n}\n\nfunction sendMessagePayloadInternalToWindows(clientList, internalPayload) {\n  internalPayload.isFirebaseMessaging = true;\n  internalPayload.messageType = MessageType.PUSH_RECEIVED;\n\n  var _iterator = _createForOfIteratorHelper(clientList),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var client = _step.value;\n      client.postMessage(internalPayload);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction getClientList() {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n\n  });\n}\n\nfunction showNotification(notificationPayloadInternal) {\n  var _a; // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n\n\n  var actions = notificationPayloadInternal.actions;\n  var _Notification = Notification,\n      maxActions = _Notification.maxActions;\n\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\"This browser only supports \".concat(maxActions, \" actions. The remaining actions will not be displayed.\"));\n  }\n\n  return self.registration.showNotification(\n  /* title= */\n  (_a = notificationPayloadInternal.title) !== null && _a !== void 0 ? _a : '', notificationPayloadInternal);\n}\n\nfunction getLink(payload) {\n  var _a, _b, _c; // eslint-disable-next-line camelcase\n\n\n  var link = (_b = (_a = payload.fcmOptions) === null || _a === void 0 ? void 0 : _a.link) !== null && _b !== void 0 ? _b : (_c = payload.notification) === null || _c === void 0 ? void 0 : _c.click_action;\n\n  if (link) {\n    return link;\n  }\n\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction extractAppConfig(app) {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  } // Required app config keys\n\n\n  var configKeys = ['projectId', 'apiKey', 'appId', 'messagingSenderId'];\n  var options = app.options;\n\n  for (var _i = 0, _configKeys = configKeys; _i < _configKeys.length; _i++) {\n    var keyName = _configKeys[_i];\n\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId,\n    apiKey: options.apiKey,\n    appId: options.appId,\n    senderId: options.messagingSenderId\n  };\n}\n\nfunction getMissingValueError(valueName) {\n  return ERROR_FACTORY.create(\"missing-app-config-values\"\n  /* MISSING_APP_CONFIG_VALUES */\n  , {\n    valueName: valueName\n  });\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MessagingService = /*#__PURE__*/function () {\n  function MessagingService(app, installations, analyticsProvider) {\n    _classCallCheck(this, MessagingService);\n\n    // logging is only done with end user consent. Default to false.\n    this.deliveryMetricsExportedToBigQueryEnabled = false;\n    this.onBackgroundMessageHandler = null;\n    this.onMessageHandler = null;\n    this.logEvents = [];\n    this.isLogServiceStarted = false;\n    var appConfig = extractAppConfig(app);\n    this.firebaseDependencies = {\n      app: app,\n      appConfig: appConfig,\n      installations: installations,\n      analyticsProvider: analyticsProvider\n    };\n  }\n\n  _createClass(MessagingService, [{\n    key: \"_delete\",\n    value: function _delete() {\n      return Promise.resolve();\n    }\n  }]);\n\n  return MessagingService;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar SwMessagingFactory = function SwMessagingFactory(container) {\n  var messaging = new MessagingService(container.getProvider('app').getImmediate(), container.getProvider('installations-internal').getImmediate(), container.getProvider('analytics-internal'));\n  self.addEventListener('push', function (e) {\n    e.waitUntil(onPush(e, messaging));\n  });\n  self.addEventListener('pushsubscriptionchange', function (e) {\n    e.waitUntil(onSubChange(e, messaging));\n  });\n  self.addEventListener('notificationclick', function (e) {\n    e.waitUntil(onNotificationClick(e));\n  });\n  return messaging;\n};\n/**\r\n * The messaging instance registered in sw is named differently than that of in client. This is\r\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\r\n * `messaging-compat` and component with the same name can only be registered once.\r\n */\n\n\nfunction registerMessagingInSw() {\n  _registerComponent(new Component('messaging-sw', SwMessagingFactory, \"PUBLIC\"\n  /* PUBLIC */\n  ));\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Checks whether all required APIs exist within SW Context\r\n * @returns a Promise that resolves to a boolean.\r\n *\r\n * @public\r\n */\n\n\nfunction isSwSupported() {\n  return _isSwSupported.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _isSwSupported() {\n  _isSwSupported = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20() {\n    return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            _context20.t4 = isIndexedDBAvailable();\n\n            if (!_context20.t4) {\n              _context20.next = 5;\n              break;\n            }\n\n            _context20.next = 4;\n            return validateIndexedDBOpenable();\n\n          case 4:\n            _context20.t4 = _context20.sent;\n\n          case 5:\n            _context20.t3 = _context20.t4;\n\n            if (!_context20.t3) {\n              _context20.next = 8;\n              break;\n            }\n\n            _context20.t3 = 'PushManager' in self;\n\n          case 8:\n            _context20.t2 = _context20.t3;\n\n            if (!_context20.t2) {\n              _context20.next = 11;\n              break;\n            }\n\n            _context20.t2 = 'Notification' in self;\n\n          case 11:\n            _context20.t1 = _context20.t2;\n\n            if (!_context20.t1) {\n              _context20.next = 14;\n              break;\n            }\n\n            _context20.t1 = ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification');\n\n          case 14:\n            _context20.t0 = _context20.t1;\n\n            if (!_context20.t0) {\n              _context20.next = 17;\n              break;\n            }\n\n            _context20.t0 = PushSubscription.prototype.hasOwnProperty('getKey');\n\n          case 17:\n            return _context20.abrupt(\"return\", _context20.t0);\n\n          case 18:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20);\n  }));\n  return _isSwSupported.apply(this, arguments);\n}\n\nfunction onBackgroundMessage$1(messaging, nextOrObserver) {\n  if (self.document !== undefined) {\n    throw ERROR_FACTORY.create(\"only-available-in-sw\"\n    /* AVAILABLE_IN_SW */\n    );\n  }\n\n  messaging.onBackgroundMessageHandler = nextOrObserver;\n  return function () {\n    messaging.onBackgroundMessageHandler = null;\n  };\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable) {\n  messaging.deliveryMetricsExportedToBigQueryEnabled = enable;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Retrieves a Firebase Cloud Messaging instance.\r\n *\r\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\r\n *\r\n * @public\r\n */\n\n\nfunction getMessagingInSw() {\n  var app = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getApp();\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported().then(function (isSupported) {\n    // If `isSwSupported()` resolved, but returned false.\n    if (!isSupported) {\n      throw ERROR_FACTORY.create(\"unsupported-browser\"\n      /* UNSUPPORTED_BROWSER */\n      );\n    }\n  }, function (_) {\n    // If `isSwSupported()` rejected.\n    throw ERROR_FACTORY.create(\"indexed-db-unsupported\"\n    /* INDEXED_DB_UNSUPPORTED */\n    );\n  });\n  return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\n}\n/**\r\n * Called when a message is received while the app is in the background. An app is considered to be\r\n * in the background if no active window is displayed.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\r\n * message is received and the app is currently in the background.\r\n *\r\n * @returns To stop listening for messages execute this returned function\r\n *\r\n * @public\r\n */\n\n\nfunction onBackgroundMessage(messaging, nextOrObserver) {\n  messaging = getModularInstance(messaging);\n  return onBackgroundMessage$1(messaging, nextOrObserver);\n}\n/**\r\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\r\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\r\n * disable the export at runtime.\r\n *\r\n * @param messaging - The `FirebaseMessaging` instance.\r\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\r\n * BigQuery.\r\n *\r\n * @public\r\n */\n\n\nfunction experimentalSetDeliveryMetricsExportedToBigQueryEnabled(messaging, enable) {\n  messaging = getModularInstance(messaging);\n  return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nregisterMessagingInSw();\nexport { experimentalSetDeliveryMetricsExportedToBigQueryEnabled, getMessagingInSw as getMessaging, isSwSupported as isSupported, onBackgroundMessage };","map":{"version":3,"sources":["../src/util/constants.ts","../src/interfaces/internal-message-payload.ts","../src/helpers/array-base64-translator.ts","../src/helpers/migrate-old-database.ts","../src/internals/idb-manager.ts","../src/util/errors.ts","../src/internals/requests.ts","../src/internals/token-manager.ts","../src/helpers/externalizePayload.ts","../src/helpers/is-console-message.ts","../src/helpers/sleep.ts","../src/helpers/logToFirelog.ts","../src/listeners/sw-listeners.ts","../src/helpers/extract-app-config.ts","../src/messaging-service.ts","../src/helpers/register.ts","../src/api/isSupported.ts","../src/api/onBackgroundMessage.ts","../src/api/setDeliveryMetricsExportedToBigQueryEnabled.ts","../src/api.ts","../src/index.sw.ts"],"names":["MessageType","onBackgroundMessage","_onBackgroundMessage"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const TAG = 'FirebaseMessaging: ';\nexport const MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST = 1000;\nexport const MAX_RETRIES = 3;\nexport const LOG_INTERVAL_IN_MS = 86400000; //24 hour\nexport const DEFAULT_BACKOFF_TIME_MS = 5000;\n\n// FCM log source name registered at Firelog: 'FCM_CLIENT_EVENT_LOGGING'. It uniquely identifies\n// FCM's logging configuration.\nexport const FCM_LOG_SOURCE = 1249;\n\n// Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\nexport const SDK_PLATFORM_WEB = 3;\nexport const EVENT_MESSAGE_DELIVERED = 1;\n\nexport enum MessageType {\n  DATA_MESSAGE = 1,\n  DISPLAY_NOTIFICATION = 3\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n  // eslint-disable-next-line camelcase\n  fcm_message_id: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDb, openDb } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (\n      indexedDB as {\n        databases(): Promise<Array<{ name: string; version: number }>>;\n      }\n    ).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDb(OLD_DB_NAME, OLD_DB_VERSION, async db => {\n    if (db.oldVersion < 2) {\n      // Database too old, skip migration.\n      return;\n    }\n\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n      // Database did not exist. Nothing to do.\n      return;\n    }\n\n    const objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\n    const value = await objectStore.index('fcmSenderId').get(senderId);\n    await objectStore.clear();\n\n    if (!value) {\n      // No entry in the database, nothing to migrate.\n      return;\n    }\n\n    if (db.oldVersion === 2) {\n      const oldDetails = value as V2TokenDetails;\n\n      if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n        return;\n      }\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime ?? Date.now(),\n        subscriptionOptions: {\n          auth: oldDetails.auth,\n          p256dh: oldDetails.p256dh,\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey:\n            typeof oldDetails.vapidKey === 'string'\n              ? oldDetails.vapidKey\n              : arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 3) {\n      const oldDetails = value as V3TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 4) {\n      const oldDetails = value as V4TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDb(OLD_DB_NAME);\n  await deleteDb('fcm_vapid_details_db');\n  await deleteDb('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, deleteDb, openDb } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from '../helpers/migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDb => {\n      // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n      // because if there are multiple versions between the old version and the current version, we\n      // want ALL the migrations that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDb.oldVersion) {\n        case 0:\n          upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.complete;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDb(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  INDEXED_DB_UNSUPPORTED = 'indexed-db-unsupported',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the firebase SDK.\",\n  [ErrorCode.INDEXED_DB_UNSUPPORTED]:\n    \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from './idb-manager';\nimport {\n  requestDeleteToken,\n  requestGetToken,\n  requestUpdateToken\n} from './requests';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { MessagingService } from '../messaging-service';\n\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getTokenInternal(\n  messaging: MessagingService\n): Promise<string> {\n  const pushSubscription = await getPushSubscription(\n    messaging.swRegistration!,\n    messaging.vapidKey!\n  );\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey: messaging.vapidKey!,\n    swScope: messaging.swRegistration!.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(\n        messaging.firebaseDependencies!,\n        tokenDetails.token\n      );\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(messaging.firebaseDependencies!, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(messaging, {\n      token: tokenDetails.token,\n      createTime: Date.now(),\n      subscriptionOptions\n    });\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteTokenInternal(\n  messaging: MessagingService\n): Promise<boolean> {\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(\n      messaging.firebaseDependencies,\n      tokenDetails.token\n    );\n    await dbRemove(messaging.firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription =\n    await messaging.swRegistration!.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  messaging: MessagingService,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      messaging.firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteTokenInternal(messaging);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '../interfaces/public-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcm_message_id\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.fcmOptions) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link = messagePayloadInternal.fcmOptions!.link;\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions!.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_BACKOFF_TIME_MS,\n  EVENT_MESSAGE_DELIVERED,\n  FCM_LOG_SOURCE,\n  LOG_INTERVAL_IN_MS,\n  MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST,\n  MAX_RETRIES,\n  MessageType,\n  SDK_PLATFORM_WEB\n} from '../util/constants';\nimport {\n  FcmEvent,\n  LogEvent,\n  LogRequest,\n  LogResponse\n} from '../interfaces/logging-types';\n\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\nimport { MessagingService } from '../messaging-service';\n\nconst FIRELOG_ENDPOINT = _mergeStrings(\n  'hts/frbslgigp.ogepscmv/ieo/eaylg',\n  'tp:/ieaeogn-agolai.o/1frlglgc/o'\n);\n\nconst FCM_TRANSPORT_KEY = _mergeStrings(\n  'AzSCbw63g1R0nCw85jG8',\n  'Iaya3yLKwmgvh7cF0q4'\n);\n\nexport function startLoggingService(messaging: MessagingService): void {\n  if (!messaging.isLogServiceStarted) {\n    _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    messaging.isLogServiceStarted = true;\n  }\n}\n\n/**\n *\n * @param messaging the messaging instance.\n * @param offsetInMs this method execute after `offsetInMs` elapsed .\n */\nexport function _processQueue(\n  messaging: MessagingService,\n  offsetInMs: number\n): void {\n  setTimeout(async () => {\n    if (!messaging.deliveryMetricsExportedToBigQueryEnabled) {\n      // flush events and terminate logging service\n      messaging.logEvents = [];\n      messaging.isLogServiceStarted = false;\n\n      return;\n    }\n\n    if (!messaging.logEvents.length) {\n      return _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    }\n\n    await _dispatchLogEvents(messaging);\n  }, offsetInMs);\n}\n\nexport async function _dispatchLogEvents(\n  messaging: MessagingService\n): Promise<void> {\n  for (\n    let i = 0, n = messaging.logEvents.length;\n    i < n;\n    i += MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST\n  ) {\n    const logRequest = _createLogRequest(\n      messaging.logEvents.slice(i, i + MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST)\n    );\n\n    let retryCount = 0,\n      response = {} as Response;\n\n    do {\n      try {\n        response = await fetch(\n          FIRELOG_ENDPOINT.concat('?key=', FCM_TRANSPORT_KEY),\n          {\n            method: 'POST',\n            body: JSON.stringify(logRequest)\n          }\n        );\n\n        // don't retry on 200s or non retriable errors\n        if (response.ok || (!response.ok && !isRetriableError(response))) {\n          break;\n        }\n\n        if (!response.ok && isRetriableError(response)) {\n          // rethrow to retry with quota\n          throw new Error(\n            'a retriable Non-200 code is returned in fetch to Firelog endpoint. Retry'\n          );\n        }\n      } catch (error) {\n        const isLastAttempt = retryCount === MAX_RETRIES;\n        if (isLastAttempt) {\n          // existing the do-while interactive retry logic because retry quota has reached.\n          break;\n        }\n      }\n\n      let delayInMs: number;\n      try {\n        delayInMs = Number(\n          ((await response.json()) as LogResponse).nextRequestWaitMillis\n        );\n      } catch (e) {\n        delayInMs = DEFAULT_BACKOFF_TIME_MS;\n      }\n\n      await new Promise(resolve => setTimeout(resolve, delayInMs));\n\n      retryCount++;\n    } while (retryCount < MAX_RETRIES);\n  }\n\n  messaging.logEvents = [];\n  // schedule for next logging\n  _processQueue(messaging, LOG_INTERVAL_IN_MS);\n}\n\nfunction isRetriableError(response: Response): boolean {\n  const httpStatus = response.status;\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\nexport async function stageLog(\n  messaging: MessagingService,\n  internalPayload: MessagePayloadInternal\n): Promise<void> {\n  const fcmEvent = createFcmEvent(\n    internalPayload,\n    await messaging.firebaseDependencies.installations.getId()\n  );\n\n  createAndEnqueueLogEvent(messaging, fcmEvent);\n}\n\nfunction createFcmEvent(\n  internalPayload: MessagePayloadInternal,\n  fid: string\n): FcmEvent {\n  const fcmEvent = {} as FcmEvent;\n\n  /* eslint-disable camelcase */\n  // some fields should always be non-null. Still check to ensure.\n  if (!!internalPayload.from) {\n    fcmEvent.project_number = internalPayload.from;\n  }\n\n  if (!!internalPayload.fcm_message_id) {\n    fcmEvent.message_id = internalPayload.fcm_message_id;\n  }\n\n  fcmEvent.instance_id = fid;\n\n  if (!!internalPayload.notification) {\n    fcmEvent.message_type = MessageType.DISPLAY_NOTIFICATION.toString();\n  } else {\n    fcmEvent.message_type = MessageType.DATA_MESSAGE.toString();\n  }\n\n  fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\n  fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\n\n  if (!!internalPayload.collapse_key) {\n    fcmEvent.collapse_key = internalPayload.collapse_key;\n  }\n\n  fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\n\n  if (!!internalPayload.fcmOptions?.analytics_label) {\n    fcmEvent.analytics_label = internalPayload.fcmOptions?.analytics_label;\n  }\n\n  /* eslint-enable camelcase */\n  return fcmEvent;\n}\n\nfunction createAndEnqueueLogEvent(\n  messaging: MessagingService,\n  fcmEvent: FcmEvent\n): void {\n  const logEvent = {} as LogEvent;\n\n  /* eslint-disable camelcase */\n  logEvent.event_time_ms = Math.floor(Date.now()).toString();\n  logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent);\n  // eslint-disable-next-line camelcase\n\n  messaging.logEvents.push(logEvent);\n}\n\nexport function _createLogRequest(logEventQueue: LogEvent[]): LogRequest {\n  const logRequest = {} as LogRequest;\n\n  /* eslint-disable camelcase */\n  logRequest.log_source = FCM_LOG_SOURCE.toString();\n  logRequest.log_event = logEventQueue;\n  /* eslint-enable camelcase */\n\n  return logRequest;\n}\n\nexport function _mergeStrings(s1: string, s2: string): string {\n  const resultArray = [];\n  for (let i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, FCM_MSG } from '../util/constants';\nimport {\n  MessagePayloadInternal,\n  MessageType,\n  NotificationPayloadInternal\n} from '../interfaces/internal-message-payload';\nimport {\n  NotificationEvent,\n  PushEvent,\n  PushSubscriptionChangeEvent,\n  ServiceWorkerGlobalScope,\n  WindowClient\n} from '../util/sw-types';\nimport {\n  deleteTokenInternal,\n  getTokenInternal\n} from '../internals/token-manager';\n\nimport { MessagingService } from '../messaging-service';\nimport { dbGet } from '../internals/idb-manager';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { sleep } from '../helpers/sleep';\nimport { stageLog } from '../helpers/logToFirelog';\n\n// Let TS know that this is a service worker\ndeclare const self: ServiceWorkerGlobalScope;\n\nexport async function onSubChange(\n  event: PushSubscriptionChangeEvent,\n  messaging: MessagingService\n): Promise<void> {\n  const { newSubscription } = event;\n  if (!newSubscription) {\n    // Subscription revoked, delete token\n    await deleteTokenInternal(messaging);\n    return;\n  }\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  await deleteTokenInternal(messaging);\n\n  messaging.vapidKey =\n    tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY;\n  await getTokenInternal(messaging);\n}\n\nexport async function onPush(\n  event: PushEvent,\n  messaging: MessagingService\n): Promise<void> {\n  const internalPayload = getMessagePayloadInternal(event);\n  if (!internalPayload) {\n    // Failed to get parsed MessagePayload from the PushEvent. Skip handling the push.\n    return;\n  }\n\n  // log to Firelog with user consent\n  if (messaging.deliveryMetricsExportedToBigQueryEnabled) {\n    await stageLog(messaging, internalPayload);\n  }\n\n  // foreground handling: eventually passed to onMessage hook\n  const clientList = await getClientList();\n  if (hasVisibleClients(clientList)) {\n    return sendMessagePayloadInternalToWindows(clientList, internalPayload);\n  }\n\n  // background handling: display if possible and pass to onBackgroundMessage hook\n  if (!!internalPayload.notification) {\n    await showNotification(wrapInternalPayload(internalPayload));\n  }\n\n  if (!messaging) {\n    return;\n  }\n\n  if (!!messaging.onBackgroundMessageHandler) {\n    const payload = externalizePayload(internalPayload);\n\n    if (typeof messaging.onBackgroundMessageHandler === 'function') {\n      messaging.onBackgroundMessageHandler(payload);\n    } else {\n      messaging.onBackgroundMessageHandler.next(payload);\n    }\n  }\n}\n\nexport async function onNotificationClick(\n  event: NotificationEvent\n): Promise<void> {\n  const internalPayload: MessagePayloadInternal =\n    event.notification?.data?.[FCM_MSG];\n\n  if (!internalPayload) {\n    return;\n  } else if (event.action) {\n    // User clicked on an action button. This will allow developers to act on action button clicks\n    // by using a custom onNotificationClick listener that they define.\n    return;\n  }\n\n  // Prevent other listeners from receiving the event\n  event.stopImmediatePropagation();\n  event.notification.close();\n\n  // Note clicking on a notification with no link set will focus the Chrome's current tab.\n  const link = getLink(internalPayload);\n  if (!link) {\n    return;\n  }\n\n  // FM should only open/focus links from app's origin.\n  const url = new URL(link, self.location.href);\n  const originUrl = new URL(self.location.origin);\n\n  if (url.host !== originUrl.host) {\n    return;\n  }\n\n  let client = await getWindowClient(url);\n\n  if (!client) {\n    client = await self.clients.openWindow(link);\n\n    // Wait three seconds for the client to initialize and set up the message handler so that it\n    // can receive the message.\n    await sleep(3000);\n  } else {\n    client = await client.focus();\n  }\n\n  if (!client) {\n    // Window Client will not be returned if it's for a third party origin.\n    return;\n  }\n\n  internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\n  internalPayload.isFirebaseMessaging = true;\n  return client.postMessage(internalPayload);\n}\n\nfunction wrapInternalPayload(\n  internalPayload: MessagePayloadInternal\n): NotificationPayloadInternal {\n  const wrappedInternalPayload: NotificationPayloadInternal = {\n    ...(internalPayload.notification as unknown as NotificationPayloadInternal)\n  };\n\n  // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\n  // notification vs a notification from somewhere else (i.e. normal web push or developer generated\n  // notification).\n  wrappedInternalPayload.data = {\n    [FCM_MSG]: internalPayload\n  };\n\n  return wrappedInternalPayload;\n}\n\nfunction getMessagePayloadInternal({\n  data\n}: PushEvent): MessagePayloadInternal | null {\n  if (!data) {\n    return null;\n  }\n\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\n\n/**\n * @param url The URL to look for when focusing a client.\n * @return Returns an existing window client or a newly opened WindowClient.\n */\nasync function getWindowClient(url: URL): Promise<WindowClient | null> {\n  const clientList = await getClientList();\n\n  for (const client of clientList) {\n    const clientUrl = new URL(client.url, self.location.href);\n\n    if (url.host === clientUrl.host) {\n      return client;\n    }\n  }\n\n  return null;\n}\n\n/**\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\n * otherwise false.\n */\nfunction hasVisibleClients(clientList: WindowClient[]): boolean {\n  return clientList.some(\n    client =>\n      client.visibilityState === 'visible' &&\n      // Ignore chrome-extension clients as that matches the background pages of extensions, which\n      // are always considered visible for some reason.\n      !client.url.startsWith('chrome-extension://')\n  );\n}\n\nfunction sendMessagePayloadInternalToWindows(\n  clientList: WindowClient[],\n  internalPayload: MessagePayloadInternal\n): void {\n  internalPayload.isFirebaseMessaging = true;\n  internalPayload.messageType = MessageType.PUSH_RECEIVED;\n\n  for (const client of clientList) {\n    client.postMessage(internalPayload);\n  }\n}\n\nfunction getClientList(): Promise<WindowClient[]> {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true\n    // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n  }) as Promise<WindowClient[]>;\n}\n\nfunction showNotification(\n  notificationPayloadInternal: NotificationPayloadInternal\n): Promise<void> {\n  // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n  const { actions } = notificationPayloadInternal;\n  const { maxActions } = Notification;\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\n      `This browser only supports ${maxActions} actions. The remaining actions will not be displayed.`\n    );\n  }\n\n  return self.registration.showNotification(\n    /* title= */ notificationPayloadInternal.title ?? '',\n    notificationPayloadInternal\n  );\n}\n\nfunction getLink(payload: MessagePayloadInternal): string | null {\n  // eslint-disable-next-line camelcase\n  const link = payload.fcmOptions?.link ?? payload.notification?.click_action;\n  if (link) {\n    return link;\n  }\n\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport { MessagePayload, NextFn, Observer } from './interfaces/public-types';\n\nimport { FirebaseAnalyticsInternalName } from '@firebase/analytics-interop-types';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { LogEvent } from './interfaces/logging-types';\nimport { Provider } from '@firebase/component';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport class MessagingService implements _FirebaseService {\n  readonly app!: FirebaseApp;\n  readonly firebaseDependencies!: FirebaseInternalDependencies;\n\n  swRegistration?: ServiceWorkerRegistration;\n  vapidKey?: string;\n  // logging is only done with end user consent. Default to false.\n  deliveryMetricsExportedToBigQueryEnabled: boolean = false;\n\n  onBackgroundMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  onMessageHandler: NextFn<MessagePayload> | Observer<MessagePayload> | null =\n    null;\n\n  logEvents: LogEvent[] = [];\n  isLogServiceStarted: boolean = false;\n\n  constructor(\n    app: FirebaseApp,\n    installations: _FirebaseInstallationsInternal,\n    analyticsProvider: Provider<FirebaseAnalyticsInternalName>\n  ) {\n    const appConfig = extractAppConfig(app);\n\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n\n  _delete(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport {\n  onNotificationClick,\n  onPush,\n  onSubChange\n} from '../listeners/sw-listeners';\n\nimport { GetTokenOptions } from '../interfaces/public-types';\nimport { MessagingInternal } from '@firebase/messaging-interop-types';\nimport { MessagingService } from '../messaging-service';\nimport { ServiceWorkerGlobalScope } from '../util/sw-types';\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport { getToken } from '../api/getToken';\nimport { messageEventListener } from '../listeners/window-listener';\n\nimport { name, version } from '../../package.json';\n\nconst WindowMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  navigator.serviceWorker.addEventListener('message', e =>\n    messageEventListener(messaging as MessagingService, e)\n  );\n\n  return messaging;\n};\n\nconst WindowMessagingInternalFactory: InstanceFactory<'messaging-internal'> = (\n  container: ComponentContainer\n) => {\n  const messaging = container\n    .getProvider('messaging')\n    .getImmediate() as MessagingService;\n\n  const messagingInternal: MessagingInternal = {\n    getToken: (options?: GetTokenOptions) => getToken(messaging, options)\n  };\n\n  return messagingInternal;\n};\n\ndeclare const self: ServiceWorkerGlobalScope;\nconst SwMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  self.addEventListener('push', e => {\n    e.waitUntil(onPush(e, messaging as MessagingService));\n  });\n  self.addEventListener('pushsubscriptionchange', e => {\n    e.waitUntil(onSubChange(e, messaging as MessagingService));\n  });\n  self.addEventListener('notificationclick', e => {\n    e.waitUntil(onNotificationClick(e));\n  });\n\n  return messaging;\n};\n\nexport function registerMessagingInWindow(): void {\n  _registerComponent(\n    new Component('messaging', WindowMessagingFactory, ComponentType.PUBLIC)\n  );\n\n  _registerComponent(\n    new Component(\n      'messaging-internal',\n      WindowMessagingInternalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\n/**\n * The messaging instance registered in sw is named differently than that of in client. This is\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\n * `messaging-compat` and component with the same name can only be registered once.\n */\nexport function registerMessagingInSw(): void {\n  _registerComponent(\n    new Component('messaging-sw', SwMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  areCookiesEnabled,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\n\n/**\n * Checks if all required APIs exist in the browser.\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isWindowSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    typeof window !== 'undefined' &&\n    isIndexedDBAvailable() &&\n    (await validateIndexedDBOpenable()) &&\n    areCookiesEnabled() &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks whether all required APIs exist within SW Context\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isSwSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    isIndexedDBAvailable() &&\n    (await validateIndexedDBOpenable()) &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onBackgroundMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (self.document !== undefined) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  messaging.onBackgroundMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onBackgroundMessageHandler = null;\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Messaging } from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function _setDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  (messaging as MessagingService).deliveryMetricsExportedToBigQueryEnabled =\n    enable;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\nimport { FirebaseApp, _getProvider, getApp } from '@firebase/app';\nimport {\n  GetTokenOptions,\n  MessagePayload,\n  Messaging\n} from './interfaces/public-types';\nimport {\n  NextFn,\n  Observer,\n  Unsubscribe,\n  getModularInstance\n} from '@firebase/util';\nimport { isSwSupported, isWindowSupported } from './api/isSupported';\n\nimport { MessagingService } from './messaging-service';\nimport { deleteToken as _deleteToken } from './api/deleteToken';\nimport { getToken as _getToken } from './api/getToken';\nimport { onBackgroundMessage as _onBackgroundMessage } from './api/onBackgroundMessage';\nimport { onMessage as _onMessage } from './api/onMessage';\nimport { _setDeliveryMetricsExportedToBigQueryEnabled } from './api/setDeliveryMetricsExportedToBigQueryEnabled';\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInWindow(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(\n    isSupported => {\n      // If `isWindowSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isWindowSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInSw(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported().then(\n    isSupported => {\n      // If `isSwSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isSwSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\n}\n\n/**\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\n * instance.\n *\n * If a notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param options - Provides an optional vapid key and an optinoal service worker registration\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nexport async function getToken(\n  messaging: Messaging,\n  options?: GetTokenOptions\n): Promise<string> {\n  messaging = getModularInstance(messaging);\n  return _getToken(messaging as MessagingService, options);\n}\n\n/**\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\n * the {@link Messaging} instance from the push subscription.\n *\n * @param messaging - The {@link Messaging} instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nexport function deleteToken(messaging: Messaging): Promise<boolean> {\n  messaging = getModularInstance(messaging);\n  return _deleteToken(messaging as MessagingService);\n}\n\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nexport function onMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Called when a message is received while the app is in the background. An app is considered to be\n * in the background if no active window is displayed.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\n * message is received and the app is currently in the background.\n *\n * @returns To stop listening for messages execute this returned function\n *\n * @public\n */\nexport function onBackgroundMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onBackgroundMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\n * disable the export at runtime.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\n * BigQuery.\n *\n * @public\n */\nexport function experimentalSetDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  messaging = getModularInstance(messaging);\n  return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '@firebase/installations';\n\nimport { Messaging } from './interfaces/public-types';\nimport { registerMessagingInSw } from './helpers/register';\n\nexport * from './interfaces/public-types';\nexport {\n  onBackgroundMessage,\n  getMessagingInSw as getMessaging,\n  experimentalSetDeliveryMetricsExportedToBigQueryEnabled\n} from './api';\nexport { isSwSupported as isSupported } from './api/isSupported';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'messaging-sw': Messaging;\n  }\n}\n\nregisterMessagingInSw();\n"]},"metadata":{},"sourceType":"module"}