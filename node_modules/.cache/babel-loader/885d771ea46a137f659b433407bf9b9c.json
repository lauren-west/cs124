{"ast":null,"code":"var _jsxFileName = \"/Users/laurenwest/code/cs124/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './AlertApp.css';\nimport React, { useState } from \"react\";\nimport MainPage from './MainPage';\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [showEditAlert, setShowEditAlert] = useState(false);\n  let [currentTask, setCurrentTask] = useState(\"\");\n  let [data, setData] = useState(DATA);\n  let [listId, setListId] = useState(0);\n  let [selectedPage, setPage] = useState({\n    type: \"home\"\n  });\n  const pageRenderLookup = {\n    \"home\": /*#__PURE__*/_jsxDEV(MainPage, {\n      setData: setData,\n      data: data,\n      onListClick: n => setPage({\n        type: \"list\",\n        selectedId: n\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this),\n    \"list\": /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => setPage({\n          type: \"home\"\n        }),\n        src: \"long-arrow-alt-left-solid.svg\",\n        className: \"back-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Lists, {\n        setData: setData,\n        data: data,\n        list: data[selectedPage.selectedId]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  };\n  return pageRenderLookup[selectedPage.type];\n}\n\n_s(App, \"/3ccOCWU3DfJAOAYjKwebIQZiu4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/laurenwest/code/cs124/src/App.js"],"names":["React","useState","MainPage","Lists","DATA","App","showAlert","setShowAlert","showEditAlert","setShowEditAlert","currentTask","setCurrentTask","data","setData","listId","setListId","selectedPage","setPage","type","pageRenderLookup","n","selectedId"],"mappings":";;;;AACA,OAAO,gBAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD;AACA,MAAI,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAI,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACG,IAAD,CAA9B;AACA,MAAI,CAACU,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAI,CAACe,YAAD,EAAeC,OAAf,IAA0BhB,QAAQ,CAAC;AACnCiB,IAAAA,IAAI,EAAE;AAD6B,GAAD,CAAtC;AAIA,QAAMC,gBAAgB,GAAG;AACrB,yBACQ,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEN,OAAnB;AAA4B,MAAA,IAAI,EAAED,IAAlC;AAAwC,MAAA,WAAW,EAAGQ,CAAD,IAAOH,OAAO,CAAC;AAChEC,QAAAA,IAAI,EAAE,MAD0D;AAEhEG,QAAAA,UAAU,EAAED;AAFoD,OAAD;AAAnE;AAAA;AAAA;AAAA;AAAA,YAFa;AAOrB,yBACI;AAAA,8BACI;AAAK,QAAA,OAAO,EAAE,MAAMH,OAAO,CAAC;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAD,CAA3B;AAA6C,QAAA,GAAG,EAAE,+BAAlD;AAAmF,QAAA,SAAS,EAAE;AAA9F;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEL,OAAhB;AAAyB,QAAA,IAAI,EAAED,IAA/B;AAAqC,QAAA,IAAI,EAAEA,IAAI,CAACI,YAAY,CAACK,UAAd;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AARiB,GAAzB;AAcA,SAAOF,gBAAgB,CAACH,YAAY,CAACE,IAAd,CAAvB;AACH;;GAzBQb,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './AlertApp.css';\nimport React, {useState} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\n\nfunction App() {\n    const [showAlert, setShowAlert] = useState(false);\n    const [showEditAlert, setShowEditAlert] = useState(false);\n    let [currentTask, setCurrentTask] = useState(\"\");\n    let [data, setData] = useState(DATA);\n    let [listId, setListId] = useState(0);\n    let [selectedPage, setPage] = useState({\n        type: \"home\"\n    })\n\n    const pageRenderLookup = {\n        \"home\": (\n                <MainPage setData={setData} data={data} onListClick={(n) => setPage({\n                    type: \"list\",\n                    selectedId: n\n                })}/>\n        ),\n        \"list\": (\n            <>\n                <img onClick={() => setPage({type: \"home\"})} src={\"long-arrow-alt-left-solid.svg\"} className={\"back-arrow\"}/>\n                <Lists setData={setData} data={data} list={data[selectedPage.selectedId]}/>\n            </>\n        )\n    }\n    return pageRenderLookup[selectedPage.type]\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}