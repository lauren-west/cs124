{"ast":null,"code":"var _jsxFileName = \"/Users/laurenwest/code/cs124/lab2R/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport './AlertApp.css';\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport MainPage from './MainPage';\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\nimport Alert from './Alert';\nimport AlertEdit from './AlertEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [showEditAlert, setShowEditAlert] = useState(false);\n  let [data, setData] = useState(DATA);\n  let [selectedPage, setPage] = useState({\n    type: \"home\"\n  });\n\n  function handleAlertOK(listName) {\n    setData([...data, {\n      id: data.length,\n      title: listName,\n      listItems: []\n    }]);\n  }\n\n  function updateListItems(newListItems) {\n    setData(data.map(list => {\n      if (selectedPage.selectedId === list.id) {\n        list.listItems = newListItems;\n      }\n\n      return list;\n    }));\n  }\n\n  function handleAlertOKListItem(listItemName) {\n    updateListItems([...data[selectedPage.selectedId].listItems, {\n      id: data[selectedPage.selectedId].listItems.length,\n      text: listItemName,\n      completed: false\n    }]);\n  }\n\n  function handleEditTask(listItemName) {\n    updateListItems([...data[selectedPage.selectedId].listItems, {\n      id: data[selectedPage.selectedId].listItems.length,\n      text: listItemName,\n      completed: false\n    }]);\n  }\n\n  function toggleModal() {\n    setShowAlert(false);\n  }\n\n  function renderAlert(showAlert, cancelName, okName, handleOk) {\n    if (!showAlert) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: toggleModal,\n      onOk: handleOk,\n      cancelName: cancelName,\n      okName: okName,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [okName, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n  function renderEditAlert(showEditAlert, deleteItem, cancelEdit, acceptEdit, handleOk) {\n    if (!showEditAlert) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(AlertEdit, {\n      onClose: toggleModal,\n      onOk: handleOk,\n      deleteItem: deleteItem,\n      cancelName: cancelEdit,\n      okName: acceptEdit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [acceptEdit, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n  const pageRenderLookup = {\n    \"home\": /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainPage, {\n        setShowEditAlert: setShowEditAlert,\n        setShowAlert: setShowAlert,\n        setData: setData,\n        data: data,\n        onListClick: n => setPage({\n          type: \"list\",\n          selectedId: n\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), renderAlert(showAlert, \"Don't Add List\", \"Add List\", handleAlertOK), renderEditAlert(showEditAlert, \"Delete Task\", \"Don't Edit Task\", \"Edit Task\", handleEditTask)]\n    }, void 0, true),\n    \"list\": /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => setPage({\n          type: \"home\"\n        }),\n        src: \"long-arrow-alt-left-solid.svg\",\n        className: \"back-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Lists, {\n        handleDelete: updateListItems,\n        setShowEditAlert: setShowEditAlert,\n        setShowAlert: setShowAlert,\n        setData: setData,\n        data: data,\n        selectedId: selectedPage.selectedId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), renderAlert(showAlert, \"Don't Add Task\", \"Add Task\", handleAlertOKListItem), renderEditAlert(showEditAlert, \"Delete Task\", \"Don't Edit Task\", \"Edit Task\", handleEditTask)]\n    }, void 0, true)\n  };\n  return pageRenderLookup[selectedPage.type];\n}\n\n_s(App, \"zFRkPnZf+kM0uZKpcZTAigZ5R7o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/laurenwest/code/cs124/lab2R/src/App.js"],"names":["React","useEffect","useState","useMemo","MainPage","Lists","DATA","Alert","AlertEdit","App","showAlert","setShowAlert","showEditAlert","setShowEditAlert","data","setData","selectedPage","setPage","type","handleAlertOK","listName","id","length","title","listItems","updateListItems","newListItems","map","list","selectedId","handleAlertOKListItem","listItemName","text","completed","handleEditTask","toggleModal","renderAlert","cancelName","okName","handleOk","renderEditAlert","deleteItem","cancelEdit","acceptEdit","pageRenderLookup","n"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport './AlertApp.css';\nimport React, {useEffect, useState, useMemo} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\nimport Alert from './Alert';\nimport AlertEdit from './AlertEdit'\n\nfunction App() {\n    const [showAlert, setShowAlert] = useState(false);\n    const [showEditAlert, setShowEditAlert] = useState(false);\n    let [data, setData] = useState(DATA);\n    let [selectedPage, setPage] = useState({\n        type: \"home\"\n    })\n\n    function handleAlertOK(listName) {\n        setData([...data, {\n                id: data.length,\n                title: listName,\n                listItems: []\n                }\n            ]\n        )\n    }\n\n    function updateListItems(newListItems){\n        setData(data.map(list => {\n            if (selectedPage.selectedId === list.id) {\n                list.listItems = newListItems\n            }\n            return list;\n        }))\n    }\n\n    function handleAlertOKListItem(listItemName) {\n        updateListItems([...data[selectedPage.selectedId].listItems,\n            {\n                id: data[selectedPage.selectedId].listItems.length,\n                text: listItemName,\n                completed: false\n            }\n        ]);\n    }\n\n    function handleEditTask(listItemName){\n        updateListItems([...data[selectedPage.selectedId].listItems,\n            {\n                id: data[selectedPage.selectedId].listItems.length,\n                text: listItemName,\n                completed: false\n            }\n        ]);\n    }\n\n\n    function toggleModal() {\n        setShowAlert(false);\n    }\n\n    function renderAlert(showAlert, cancelName, okName, handleOk){\n        if (!showAlert){\n            return null\n        }\n        return (\n            <Alert onClose={toggleModal} onOk={handleOk} cancelName={cancelName} okName={okName}>\n                <div>{okName}:</div>\n            </Alert>\n        )\n    }\n\n    function renderEditAlert(showEditAlert, deleteItem, cancelEdit, acceptEdit, handleOk){\n        if (!showEditAlert){\n            return null\n        }\n        return (\n            <AlertEdit onClose={toggleModal} onOk={handleOk} deleteItem={deleteItem} cancelName={cancelEdit} okName={acceptEdit}>\n                <div>{acceptEdit}:</div>\n            </AlertEdit>\n        )\n    }\n\n    const pageRenderLookup = {\n        \"home\": (\n            <>\n                <MainPage setShowEditAlert={setShowEditAlert} setShowAlert={setShowAlert} setData={setData} data={data} onListClick={(n) => setPage({\n                    type: \"list\",\n                    selectedId: n\n                })}/>\n                {renderAlert(showAlert, \"Don't Add List\", \"Add List\", handleAlertOK)}\n                {renderEditAlert(showEditAlert, \"Delete Task\", \"Don't Edit Task\", \"Edit Task\", handleEditTask)}\n\n            </>\n        ),\n        \"list\": (\n            <>\n                <img onClick={() => setPage({type: \"home\"})} src={\"long-arrow-alt-left-solid.svg\"} className={\"back-arrow\"}/>\n                <Lists handleDelete={updateListItems} setShowEditAlert={setShowEditAlert} setShowAlert={setShowAlert} setData={setData} data={data} selectedId={selectedPage.selectedId}/>\n                {renderAlert(showAlert, \"Don't Add Task\", \"Add Task\", handleAlertOKListItem)}\n                {renderEditAlert(showEditAlert, \"Delete Task\", \"Don't Edit Task\", \"Edit Task\", handleEditTask)}\n            </>\n        )\n    }\n    return pageRenderLookup[selectedPage.type]\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}