{"ast":null,"code":"import _slicedToArray from\"/Users/laurenwest/code/cs124/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import logo from\"./logo.svg\";import'./App.css';import'./AlertApp.css';import React,{useState}from\"react\";import MainPage from'./MainPage';import Lists from\"./Lists\";import DATA from\"./InMemoryApp\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAlert=_useState2[0],setShowAlert=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showEditAlert=_useState4[0],setShowEditAlert=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),currentTask=_useState6[0],setCurrentTask=_useState6[1];var _useState7=useState(DATA),_useState8=_slicedToArray(_useState7,2),data=_useState8[0],setData=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),listId=_useState10[0],setListId=_useState10[1];var _useState11=useState({type:\"home\"}),_useState12=_slicedToArray(_useState11,2),selectedPage=_useState12[0],setPage=_useState12[1];var pageRenderLookup={\"home\":/*#__PURE__*/_jsx(MainPage,{setData:setData,data:data,onListClick:function onListClick(n){return setPage({type:\"list\",selectedId:n});}}),\"list\":/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return setPage({type:\"home\"});},src:\"long-arrow-alt-left-solid.svg\",className:\"back-arrow\"}),/*#__PURE__*/_jsx(Lists,{setData:setData,data:data,list:data[selectedPage.selectedId]})]})};return pageRenderLookup[selectedPage.type];}export default App;","map":{"version":3,"sources":["/Users/laurenwest/code/cs124/src/App.js"],"names":["React","useState","MainPage","Lists","DATA","App","showAlert","setShowAlert","showEditAlert","setShowEditAlert","currentTask","setCurrentTask","data","setData","listId","setListId","type","selectedPage","setPage","pageRenderLookup","n","selectedId"],"mappings":"gLACA,MAAO,WAAP,CACA,MAAO,gBAAP,CACA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,C,6IAEA,QAASC,CAAAA,GAAT,EAAe,CACX,cAAkCJ,QAAQ,CAAC,KAAD,CAA1C,wCAAOK,SAAP,eAAkBC,YAAlB,eACA,eAA0CN,QAAQ,CAAC,KAAD,CAAlD,yCAAOO,aAAP,eAAsBC,gBAAtB,eACA,eAAoCR,QAAQ,CAAC,EAAD,CAA5C,yCAAKS,WAAL,eAAkBC,cAAlB,eACA,eAAsBV,QAAQ,CAACG,IAAD,CAA9B,yCAAKQ,IAAL,eAAWC,OAAX,eACA,eAA0BZ,QAAQ,CAAC,CAAD,CAAlC,0CAAKa,MAAL,gBAAaC,SAAb,gBACA,gBAA8Bd,QAAQ,CAAC,CACnCe,IAAI,CAAE,MAD6B,CAAD,CAAtC,2CAAKC,YAAL,gBAAmBC,OAAnB,gBAIA,GAAMC,CAAAA,gBAAgB,CAAG,CACrB,oBACQ,KAAC,QAAD,EAAU,OAAO,CAAEN,OAAnB,CAA4B,IAAI,CAAED,IAAlC,CAAwC,WAAW,CAAE,qBAACQ,CAAD,QAAOF,CAAAA,OAAO,CAAC,CAChEF,IAAI,CAAE,MAD0D,CAEhEK,UAAU,CAAED,CAFoD,CAAD,CAAd,EAArD,EAFa,CAOrB,oBACI,wCACI,YAAK,OAAO,CAAE,yBAAMF,CAAAA,OAAO,CAAC,CAACF,IAAI,CAAE,MAAP,CAAD,CAAb,EAAd,CAA6C,GAAG,CAAE,+BAAlD,CAAmF,SAAS,CAAE,YAA9F,EADJ,cAEI,KAAC,KAAD,EAAO,OAAO,CAAEH,OAAhB,CAAyB,IAAI,CAAED,IAA/B,CAAqC,IAAI,CAAEA,IAAI,CAACK,YAAY,CAACI,UAAd,CAA/C,EAFJ,GARiB,CAAzB,CAcA,MAAOF,CAAAA,gBAAgB,CAACF,YAAY,CAACD,IAAd,CAAvB,CACH,CAED,cAAeX,CAAAA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport './AlertApp.css';\nimport React, {useState} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\n\nfunction App() {\n    const [showAlert, setShowAlert] = useState(false);\n    const [showEditAlert, setShowEditAlert] = useState(false);\n    let [currentTask, setCurrentTask] = useState(\"\");\n    let [data, setData] = useState(DATA);\n    let [listId, setListId] = useState(0);\n    let [selectedPage, setPage] = useState({\n        type: \"home\"\n    })\n\n    const pageRenderLookup = {\n        \"home\": (\n                <MainPage setData={setData} data={data} onListClick={(n) => setPage({\n                    type: \"list\",\n                    selectedId: n\n                })}/>\n        ),\n        \"list\": (\n            <>\n                <img onClick={() => setPage({type: \"home\"})} src={\"long-arrow-alt-left-solid.svg\"} className={\"back-arrow\"}/>\n                <Lists setData={setData} data={data} list={data[selectedPage.selectedId]}/>\n            </>\n        )\n    }\n    return pageRenderLookup[selectedPage.type]\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}