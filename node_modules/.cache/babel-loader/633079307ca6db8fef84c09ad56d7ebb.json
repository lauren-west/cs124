{"ast":null,"code":"var _jsxFileName = \"/Users/laurenwest/code/cs124/lab2R/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport './AlertApp.css';\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport MainPage from './MainPage';\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\nimport Alert from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(false);\n  let [selectedList, setList] = useState(-1);\n  let [data, setData] = useState(DATA);\n  let [selectedPage, setPage] = useState({\n    \"type\": \"home\"\n  });\n\n  function handleAlertOK(listName) {\n    setData([...data, {\n      id: data.length,\n      title: listName,\n      listItems: []\n    }]);\n  }\n\n  function handleAlertOKListItem(listItemName) {\n    setData(data.map(list => {\n      if (selectedList === list.id) {\n        list.listItems = [...list.listItems, listItemName];\n      }\n\n      return list;\n    }));\n  }\n\n  function handleDelete(filteredList) {\n    setData(data.map(list => {\n      if (selectedList === list.id) {\n        list.listItems = filteredList;\n      }\n\n      return list;\n    }));\n  }\n\n  function toggleModal() {\n    setShowAlert(false);\n  }\n\n  function renderAlert(showAlert, cancelName, okName, handleOk) {\n    if (!showAlert) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: toggleModal,\n      onOk: handleOk,\n      cancelName: cancelName,\n      okName: okName,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [okName, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n  function renderPage() {\n    if (selectedList >= 0) {}\n  }\n\n  const pageRenderLookup = {\n    \"home\": /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MainPage, {\n        setShowAlert: setShowAlert,\n        setData: setData,\n        data: data,\n        onListClick: n => setList(n)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), renderAlert(showAlert, \"Don't Add List\", \"Add List\", handleAlertOK)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this),\n    \"list\": /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => setList(-1),\n        src: \"long-arrow-alt-left-solid.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Lists, {\n        handleDelete: handleDelete,\n        setShowAlert: setShowAlert,\n        data: data,\n        selectedId: selectedList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), renderAlert(showAlert, \"Don't Add Task\", \"Add Task\", handleAlertOKListItem)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  };\n  return pageRenderLookup[selectedPage.type]; // if (selectedList >= 0) {\n  //     return (\n  //         <div>\n  //             <img onClick={() => setList(-1)} src={\"long-arrow-alt-left-solid.svg\"}></img>\n  //             <Lists handleDelete={handleDelete} setShowAlert={setShowAlert} data={data} selectedId={selectedList}/>\n  //             {renderAlert(showAlert, \"Don't Add Task\", \"Add Task\", handleAlertOKListItem)}\n  //         </div>\n  //     )\n  // } else {\n  //     return (\n  //         <div>\n  //             <MainPage setShowAlert={setShowAlert} setData={setData} data={data} onListClick={(n) => setList(n)}/>\n  //             {renderAlert(showAlert, \"Don't Add List\", \"Add List\", handleAlertOK)}\n  //         </div>)\n  // }\n}\n\n_s(App, \"XseDD2365o9/pqlsGZdNvMwSwYM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/laurenwest/code/cs124/lab2R/src/App.js"],"names":["React","useEffect","useState","useMemo","MainPage","Lists","DATA","Alert","App","showAlert","setShowAlert","selectedList","setList","data","setData","selectedPage","setPage","handleAlertOK","listName","id","length","title","listItems","handleAlertOKListItem","listItemName","map","list","handleDelete","filteredList","toggleModal","renderAlert","cancelName","okName","handleOk","renderPage","pageRenderLookup","n","type"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport './AlertApp.css';\nimport React, {useEffect, useState, useMemo} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\nimport Alert from './Alert';\n\nfunction App() {\n    const [showAlert, setShowAlert] = useState(false);\n    let [selectedList, setList] = useState(-1);\n    let [data, setData] = useState(DATA);\n    let [selectedPage, setPage] = useState({\n        \"type\": \"home\"\n    })\n\n    function handleAlertOK(listName) {\n        setData([...data, {\n                id: data.length,\n                title: listName,\n                listItems: []\n                }\n            ]\n        )\n    }\n\n    function handleAlertOKListItem(listItemName) {\n        setData(data.map(list => {\n            if (selectedList === list.id) {\n                list.listItems = [...list.listItems, listItemName];\n            }\n            return list;\n        }))\n    }\n\n    function handleDelete(filteredList) {\n        setData(data.map(list => {\n            if (selectedList === list.id) {\n                list.listItems = filteredList\n            }\n            return list;\n        }))\n    }\n\n    function toggleModal() {\n        setShowAlert(false);\n    }\n\n    function renderAlert(showAlert, cancelName, okName, handleOk){\n        if (!showAlert){\n            return null\n        }\n        return (\n            <Alert onClose={toggleModal} onOk={handleOk} cancelName={cancelName} okName={okName}>\n                <div>{okName}:</div>\n            </Alert>\n        )\n    }\n\n    function renderPage(){\n        if (selectedList >= 0) {\n\n        }\n    }\n\n\n    const pageRenderLookup = {\n        \"home\": (\n            <div>\n                <MainPage setShowAlert={setShowAlert} setData={setData} data={data} onListClick={(n) => setList(n)}/>\n                {renderAlert(showAlert, \"Don't Add List\", \"Add List\", handleAlertOK)}\n            </div>\n        ),\n        \"list\": (\n            <div>\n                <img onClick={() => setList(-1)} src={\"long-arrow-alt-left-solid.svg\"}></img>\n                <Lists handleDelete={handleDelete} setShowAlert={setShowAlert} data={data} selectedId={selectedList}/>\n                {renderAlert(showAlert, \"Don't Add Task\", \"Add Task\", handleAlertOKListItem)}\n            </div>\n        )\n    }\n\n    return pageRenderLookup[selectedPage.type]\n\n    // if (selectedList >= 0) {\n    //     return (\n    //         <div>\n    //             <img onClick={() => setList(-1)} src={\"long-arrow-alt-left-solid.svg\"}></img>\n    //             <Lists handleDelete={handleDelete} setShowAlert={setShowAlert} data={data} selectedId={selectedList}/>\n    //             {renderAlert(showAlert, \"Don't Add Task\", \"Add Task\", handleAlertOKListItem)}\n    //         </div>\n    //     )\n    // } else {\n    //     return (\n    //         <div>\n    //             <MainPage setShowAlert={setShowAlert} setData={setData} data={data} onListClick={(n) => setList(n)}/>\n    //             {renderAlert(showAlert, \"Don't Add List\", \"Add List\", handleAlertOK)}\n    //         </div>)\n    // }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}