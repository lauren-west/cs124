{"ast":null,"code":"var _jsxFileName = \"/Users/laurenwest/code/cs124/lab2R/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport './AlertApp.css';\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport MainPage from './MainPage';\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\nimport Alert from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //responsible for everyhing\n  // rendering desired information\n  const [showAlert, setShowAlert] = useState(false);\n  let [selectedList, setList] = useState(-1);\n  let [data, setData] = useState(DATA);\n\n  function handleAlertOK() {\n    console.log('the frob should be blitzened here');\n  }\n\n  function handleText() {\n    console.log('the frob should be blitzened here');\n  }\n\n  function toggleModal() {\n    setShowAlert(false);\n  }\n\n  if (selectedList >= 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Lists, {\n          data: data,\n          selectedId: selectedList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: toggleModal,\n        onOk: handleAlertOK,\n        cancelName: \"Don't Add List Item\",\n        okName: \"Add List Item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Add Task?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MainPage, {\n          setShowAlert: setShowAlert,\n          setData: setData,\n          data: data,\n          onListClick: n => setList(n)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: toggleModal,\n        onOk: handleAlertOK,\n        cancelName: \"Don't Add List\",\n        okName: \"Add List\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Add List?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(App, \"A9vCPUO6dpdE+S2AofYekRWHUJo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/laurenwest/code/cs124/lab2R/src/App.js"],"names":["React","useEffect","useState","useMemo","MainPage","Lists","DATA","Alert","App","showAlert","setShowAlert","selectedList","setList","data","setData","handleAlertOK","console","log","handleText","toggleModal","n"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAO,gBAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,OAApC,QAAkD,OAAlD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,MAAI,CAACS,YAAD,EAAeC,OAAf,IAA0BV,QAAQ,CAAC,CAAC,CAAF,CAAtC;AACA,MAAI,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACI,IAAD,CAA9B;;AAEA,WAASS,aAAT,GAAyB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH;;AACD,WAASC,UAAT,GAAqB;AACjBF,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH;;AACD,WAASE,WAAT,GAAsB;AAClBT,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AACD,MAAIC,YAAY,IAAI,CAApB,EAAsB;AAClB,wBACI;AAAA,8BACI;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEE,IAAb;AAAmB,UAAA,UAAU,EAAEF;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKF,SAAS,iBAAI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEU,WAAhB;AAA6B,QAAA,IAAI,EAAEJ,aAAnC;AAAkD,QAAA,UAAU,EAAE,qBAA9D;AAAqF,QAAA,MAAM,EAAE,eAA7F;AAAA,+BACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADU;AAAA;AAAA;AAAA;AAAA,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH,GAbD,MAaO;AACH,wBACI;AAAA,8BACI;AAAA,+BACA,QAAC,QAAD;AAAU,UAAA,YAAY,EAAEL,YAAxB;AAAsC,UAAA,OAAO,EAAEI,OAA/C;AAAwD,UAAA,IAAI,EAAED,IAA9D;AAAoE,UAAA,WAAW,EAAGO,CAAD,IAAOR,OAAO,CAACQ,CAAD;AAA/F;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKX,SAAS,iBAAI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEU,WAAhB;AAA6B,QAAA,IAAI,EAAEJ,aAAnC;AAAkD,QAAA,UAAU,EAAE,gBAA9D;AAAgF,QAAA,MAAM,EAAE,UAAxF;AAAA,+BACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADc;AAAA;AAAA;AAAA;AAAA,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;AACJ;;GA1CQP,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport './AlertApp.css';\nimport React, {useEffect, useState, useMemo} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\nimport Alert from './Alert'\n\n\n\nfunction App() {\n  //responsible for everyhing\n  // rendering desired information\n    const [showAlert, setShowAlert] = useState(false);\n    let [selectedList, setList] = useState(-1);\n    let [data, setData] = useState(DATA);\n\n    function handleAlertOK() {\n        console.log('the frob should be blitzened here');\n    }\n    function handleText(){\n        console.log('the frob should be blitzened here');\n    }\n    function toggleModal(){\n        setShowAlert(false);\n    }\n    if (selectedList >= 0){\n        return (\n            <div>\n                <div>\n                    <Lists data={data} selectedId={selectedList}/>\n                </div>\n                {showAlert && <Alert onClose={toggleModal} onOk={handleAlertOK} cancelName={\"Don't Add List Item\"} okName={\"Add List Item\"}>\n                    <div>\n                    Add Task?\n                    </div>\n                </Alert>}\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <div>\n                <MainPage setShowAlert={setShowAlert} setData={setData} data={data} onListClick={(n) => setList(n)}/>\n                </div>\n                {showAlert && <Alert onClose={toggleModal} onOk={handleAlertOK} cancelName={\"Don't Add List\"} okName={\"Add List\"}>\n                <div>\n                    Add List?\n                </div>\n            </Alert>}\n            </div>)\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}