{"ast":null,"code":"var _jsxFileName = \"/Users/laurenwest/code/cs124/src/Lists.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./main.css\";\nimport { Data } from \"./InMemoryApp\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport Alert from \"./Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ShowEditAlert(props) {\n  props.setCurrentTask(props.listitem.id);\n  props.setShowEditAlert(true);\n}\n\n_c = ShowEditAlert;\n\nfunction ListsItemDisplay(props) {\n  _s();\n\n  const [checked, setChecked] = useState(props.listitem.completed);\n  const [showAlert, setShowAlert] = useState(false);\n\n  function handleAlertOKListItem(listItemText) {\n    console.log(listItemText);\n    props.listitem.text = listItemText;\n    props.setData(Object.assign([], props.data));\n  } // function handleDelete(e) {\n  //     e.stopPropagation()\n  //     props.list.listItems = props.list.listItems.filter((item) => item.id !== props.listitem.id)\n  //     props.setData(Object.assign([], props.data))\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"box1\",\n    className: \"boxes boxes-blue\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      checked: checked,\n      type: \"checkbox\",\n      onChange: () => {\n        props.listitem.completed = !props.listitem.completed;\n        setChecked(props.listitem.completed);\n        props.setData(Object.assign([], props.data));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: props.listitem.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-delete-button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"edit-delete-button\",\n        onClick: () => setShowAlert(true),\n        src: \"edit-solid.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"edit-delete-button\",\n        onClick: e => props.handleTaskDelete(e),\n        src: \"times-solid.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      visible: showAlert,\n      inputValue: props.listitem.text,\n      onClose: () => setShowAlert(false),\n      onOk: handleAlertOKListItem,\n      cancelName: \"Don't Edit Task\",\n      okName: \"Edit Task\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Edit Task:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListsItemDisplay, \"mdmEPfHQzJ28csWcP9IiPw/fVz4=\");\n\n_c2 = ListsItemDisplay;\n\nfunction Lists(props) {\n  _s2();\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  function handleAlertOKListItem(listItemName) {\n    updateListItems([...props.list.listItems, {\n      id: props.list.listItems.length,\n      text: listItemName,\n      completed: false\n    }]);\n  }\n\n  function updateListItems(newListItems) {\n    props.setData(props.data.map(list => {\n      if (list.id === props.list.id) {\n        list.listItems = newListItems;\n      }\n\n      return list;\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(props.list), console.log(props.list.title), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.data[0].title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"button1\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowAlert(true);\n        },\n        className: \"addTask\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"plus-solid.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      visible: showAlert,\n      onClose: () => setShowAlert(false),\n      onOk: handleAlertOKListItem,\n      cancelName: \"Don't Add Task\",\n      okName: \"Add Task\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Add Task:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Lists, \"10vQU8F2+7kcs4/9wLfMdWKVXrU=\");\n\n_c3 = Lists;\nexport default Lists;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ShowEditAlert\");\n$RefreshReg$(_c2, \"ListsItemDisplay\");\n$RefreshReg$(_c3, \"Lists\");","map":{"version":3,"sources":["/Users/laurenwest/code/cs124/src/Lists.js"],"names":["Data","React","useEffect","useState","useMemo","Alert","ShowEditAlert","props","setCurrentTask","listitem","id","setShowEditAlert","ListsItemDisplay","checked","setChecked","completed","showAlert","setShowAlert","handleAlertOKListItem","listItemText","console","log","text","setData","Object","assign","data","e","handleTaskDelete","Lists","listItemName","updateListItems","list","listItems","length","newListItems","map","title"],"mappings":"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","sourcesContent":["import \"./main.css\"\nimport {Data} from \"./InMemoryApp\"\nimport React, {useEffect, useState, useMemo} from \"react\";\nimport Alert from \"./Alert\";\n\nfunction ShowEditAlert(props) {\n    props.setCurrentTask(props.listitem.id)\n    props.setShowEditAlert(true)\n}\n\nfunction ListsItemDisplay(props){\n    const [checked, setChecked] = useState(props.listitem.completed)\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOKListItem(listItemText) {\n        console.log(listItemText)\n        props.listitem.text = listItemText;\n        props.setData(Object.assign([], props.data))\n    }\n    // function handleDelete(e) {\n    //     e.stopPropagation()\n    //     props.list.listItems = props.list.listItems.filter((item) => item.id !== props.listitem.id)\n    //     props.setData(Object.assign([], props.data))\n    // }\n\n    return (\n        <div id=\"box1\" className=\"boxes boxes-blue\">\n            <input checked={checked} type=\"checkbox\" onChange={() => {\n                props.listitem.completed = !props.listitem.completed\n                setChecked(props.listitem.completed)\n                props.setData(Object.assign([], props.data))\n            }}/>\n            <label>{props.listitem.text}</label><br/>\n            <div className={\"edit-delete-button-container\"}>\n            <img className=\"edit-delete-button\" onClick={() => setShowAlert(true)} src={\"edit-solid.svg\"}></img>\n            <img className=\"edit-delete-button\" onClick={(e) => props.handleTaskDelete(e)} src={\"times-solid.svg\"}></img>\n            </div>\n            <Alert visible={showAlert} inputValue={props.listitem.text} onClose={() => setShowAlert(false)} onOk={handleAlertOKListItem} cancelName={\"Don't Edit Task\"} okName={\"Edit Task\"}>\n                <div>Edit Task:</div>\n            </Alert>\n        </div>\n    )\n}\n\nfunction Lists(props)\n{\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOKListItem(listItemName) {\n        updateListItems([...props.list.listItems,\n            {\n                id: props.list.listItems.length,\n                text: listItemName,\n                completed: false\n            }\n        ]);\n    }\n    function updateListItems(newListItems){\n        props.setData(props.data.map(list => {\n            if (list.id === props.list.id) {\n                list.listItems = newListItems\n            }\n            return list;\n        }))\n    }\n    return (\n        <>\n            {console.log(props.list)}\n            {console.log(props.list.title)}\n            {/*{console.log(props.data)}*/}\n            {/*{console.log(props.data[0].title)}*/}\n            <h1>{props.data[0].title}</h1>\n            {/*{*/}\n            {/*    props.list.listItems*/}\n            {/*        .filter((x) => !x.completed)*/}\n            {/*        .map((y) => <ListsItemDisplay list={props.list} key={y.id} setData={props.setData} data={props.data} listitem={y}/>)}*/}\n            {/*<hr/>*/}\n            {/*<h3>Completed:</h3>*/}\n            {/*{*/}\n            {/*props.list.listItems*/}\n            {/*    .filter((x) => x.completed)*/}\n            {/*    .map((y) => <ListsItemDisplay list={props.list} key={y.id} setData={props.setData} data={props.data} listitem={y}/>)}*/}\n            <div id=\"button1\">\n                <button onClick={() => {setShowAlert(true)}} className=\"addTask\">\n                    <img src=\"plus-solid.svg\"/>\n                    <span>Add Task</span>\n                </button>\n            </div>\n            <Alert visible={showAlert}  onClose={() => setShowAlert(false)} onOk={handleAlertOKListItem} cancelName={\"Don't Add Task\"} okName={\"Add Task\"}>\n                <div>Add Task:</div>\n            </Alert>\n        </>\n    )\n}\n\nexport default Lists;"]},"metadata":{},"sourceType":"module"}