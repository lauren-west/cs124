{"ast":null,"code":"import _classCallCheck from \"/Users/laurenwest/code/cs124/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/laurenwest/code/cs124/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport firebase from '@firebase/app-compat';\nimport { Component } from '@firebase/component';\nimport { trace as _trace } from '@firebase/performance';\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar PerformanceCompatImpl = /*#__PURE__*/function () {\n  function PerformanceCompatImpl(app, _delegate) {\n    _classCallCheck(this, PerformanceCompatImpl);\n\n    this.app = app;\n    this._delegate = _delegate;\n  }\n\n  _createClass(PerformanceCompatImpl, [{\n    key: \"instrumentationEnabled\",\n    get: function get() {\n      return this._delegate.instrumentationEnabled;\n    },\n    set: function set(val) {\n      this._delegate.instrumentationEnabled = val;\n    }\n  }, {\n    key: \"dataCollectionEnabled\",\n    get: function get() {\n      return this._delegate.dataCollectionEnabled;\n    },\n    set: function set(val) {\n      this._delegate.dataCollectionEnabled = val;\n    }\n  }, {\n    key: \"trace\",\n    value: function trace(traceName) {\n      return _trace(this._delegate, traceName);\n    }\n  }]);\n\n  return PerformanceCompatImpl;\n}();\n\nvar name = \"@firebase/performance-compat\";\nvar version = \"0.1.2\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction registerPerformanceCompat(firebaseInstance) {\n  firebaseInstance.INTERNAL.registerComponent(new Component('performance-compat', performanceFactory, \"PUBLIC\"\n  /* PUBLIC */\n  ));\n  firebaseInstance.registerVersion(name, version);\n}\n\nfunction performanceFactory(container) {\n  var app = container.getProvider('app-compat').getImmediate(); // The following call will always succeed.\n\n  var performance = container.getProvider('performance').getImmediate();\n  return new PerformanceCompatImpl(app, performance);\n}\n\nregisterPerformanceCompat(firebase);","map":{"version":3,"sources":["../src/performance.ts","../src/index.ts"],"names":["packageName"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;;;IA0Ba,qB;AAGX,iCACS,GADT,EAEW,SAFX,EAEyC;AAAA;;AADhC,SAAA,GAAA,GAAA,GAAA;AACE,SAAA,SAAA,GAAA,SAAA;AACP;;;;SAEJ,eAA0B;AACxB,aAAO,KAAK,SAAL,CAAe,sBAAtB;AACD,K;SAED,aAA2B,GAA3B,EAAuC;AACrC,WAAK,SAAL,CAAe,sBAAf,GAAwC,GAAxC;AACD;;;SAED,eAAyB;AACvB,aAAO,KAAK,SAAL,CAAe,qBAAtB;AACD,K;SAED,aAA0B,GAA1B,EAAsC;AACpC,WAAK,SAAL,CAAe,qBAAf,GAAuC,GAAvC;AACD;;;WAED,eAAM,SAAN,EAAuB;AACrB,aAAO,MAAK,CAAC,KAAK,SAAN,EAAiB,SAAjB,CAAZ;AACD;;;;;;;;ACpDH;;;;;;;;;;;;;;;;;AA2BA,SAAS,yBAAT,CAAmC,gBAAnC,EAAuE;AACrE,EAAA,gBAAgB,CAAC,QAAjB,CAA0B,iBAA1B,CACE,IAAI,SAAJ,CACE,oBADF,EAEE,kBAFF,EAEoB;AAAA;AAFpB,GADF;AAQA,EAAA,gBAAgB,CAAC,eAAjB,CAAiCA,IAAjC,EAA8C,OAA9C;AACD;;AAED,SAAS,kBAAT,CACE,SADF,EAC+B;AAE7B,MAAM,GAAG,GAAG,SAAS,CAAC,WAAV,CAAsB,YAAtB,EAAoC,YAApC,EAAZ,CAF6B,C;;AAI7B,MAAM,WAAW,GAAG,SAAS,CAAC,WAAV,CAAsB,aAAtB,EAAqC,YAArC,EAApB;AAEA,SAAO,IAAI,qBAAJ,CAA0B,GAA1B,EAA+B,WAA/B,CAAP;AACD;;AAED,yBAAyB,CAAC,QAAD,CAAzB","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  trace,\n  FirebasePerformance,\n  // The PerformanceTrace type has not changed between modular and non-modular packages.\n  PerformanceTrace\n} from '@firebase/performance';\nimport { FirebasePerformance as FirebasePerformanceCompat } from '@firebase/performance-types';\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-compat';\n\nexport class PerformanceCompatImpl\n  implements FirebasePerformanceCompat, _FirebaseService\n{\n  constructor(\n    public app: FirebaseApp,\n    readonly _delegate: FirebasePerformance\n  ) {}\n\n  get instrumentationEnabled(): boolean {\n    return this._delegate.instrumentationEnabled;\n  }\n\n  set instrumentationEnabled(val: boolean) {\n    this._delegate.instrumentationEnabled = val;\n  }\n\n  get dataCollectionEnabled(): boolean {\n    return this._delegate.dataCollectionEnabled;\n  }\n\n  set dataCollectionEnabled(val: boolean) {\n    this._delegate.dataCollectionEnabled = val;\n  }\n\n  trace(traceName: string): PerformanceTrace {\n    return trace(this._delegate, traceName);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType\n} from '@firebase/component';\nimport { PerformanceCompatImpl } from './performance';\nimport { name as packageName, version } from '../package.json';\nimport { FirebasePerformance as FirebasePerformanceCompat } from '@firebase/performance-types';\n\nfunction registerPerformanceCompat(firebaseInstance: _FirebaseNamespace): void {\n  firebaseInstance.INTERNAL.registerComponent(\n    new Component(\n      'performance-compat',\n      performanceFactory,\n      ComponentType.PUBLIC\n    )\n  );\n\n  firebaseInstance.registerVersion(packageName, version);\n}\n\nfunction performanceFactory(\n  container: ComponentContainer\n): PerformanceCompatImpl {\n  const app = container.getProvider('app-compat').getImmediate();\n  // The following call will always succeed.\n  const performance = container.getProvider('performance').getImmediate();\n\n  return new PerformanceCompatImpl(app, performance);\n}\n\nregisterPerformanceCompat(firebase as _FirebaseNamespace);\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    performance: {\n      (app?: FirebaseApp): FirebasePerformanceCompat;\n    };\n  }\n  interface FirebaseApp {\n    performance(): FirebasePerformanceCompat;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}