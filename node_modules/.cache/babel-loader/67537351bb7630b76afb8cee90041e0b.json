{"ast":null,"code":"var _jsxFileName = \"/Users/laurenwest/code/cs124/lab2R/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport MainPage from './MainPage';\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\nimport Alert from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //responsible for everyhing\n  // rendering desired information\n  let [showListAlert, setListAlert] = useState(false); // let [showListItemAlert, setListItemAlert] = useState(false);\n\n  let [selectedList, setList] = useState(-1);\n  let [data, setData] = useState(DATA);\n\n  if (selectedList >= 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Lists, {\n          data: data,\n          selectedId: selectedList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), showListAlert && /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: toggleModal,\n        onOk: handleAlertOK,\n        cancelName: \"Don't Frob\",\n        okName: \"Frob\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Add Task?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(MainPage, {\n      setData: setData,\n      data: data,\n      onListClick: n => setList(n)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(App, \"4TUNjE9GyiC0OQ+0p7zWbOPXzTk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/laurenwest/code/cs124/lab2R/src/App.js"],"names":["React","useEffect","useState","useMemo","MainPage","Lists","DATA","Alert","App","showListAlert","setListAlert","selectedList","setList","data","setData","toggleModal","handleAlertOK","n"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,OAApC,QAAkD,OAAlD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACE,MAAI,CAACC,aAAD,EAAgBC,YAAhB,IAAgCR,QAAQ,CAAC,KAAD,CAA5C,CAHW,CAIX;;AACA,MAAI,CAACS,YAAD,EAAeC,OAAf,IAA0BV,QAAQ,CAAC,CAAC,CAAF,CAAtC;AACA,MAAI,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACI,IAAD,CAA9B;;AACA,MAAIK,YAAY,IAAI,CAApB,EAAsB;AAClB,wBACI;AAAA,8BACI;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEE,IAAb;AAAmB,UAAA,UAAU,EAAEF;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKF,aAAa,iBAAI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEM,WAAhB;AAA6B,QAAA,IAAI,EAAEC,aAAnC;AAAkD,QAAA,UAAU,EAAE,YAA9D;AAA4E,QAAA,MAAM,EAAE,MAApF;AAAA,+BACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADc;AAAA;AAAA;AAAA;AAAA,cAJtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH,GAbD,MAaO;AACH,wBAAO,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEF,OAAnB;AAA4B,MAAA,IAAI,EAAED,IAAlC;AAAwC,MAAA,WAAW,EAAGI,CAAD,IAAOL,OAAO,CAACK,CAAD;AAAnE;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ;;GAvBQT,G;;KAAAA,G;AAyBT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useEffect, useState, useMemo} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\nimport Alert from './Alert'\n\n\n\nfunction App() {\n  //responsible for everyhing\n  // rendering desired information\n    let [showListAlert, setListAlert] = useState(false);\n    // let [showListItemAlert, setListItemAlert] = useState(false);\n    let [selectedList, setList] = useState(-1);\n    let [data, setData] = useState(DATA);\n    if (selectedList >= 0){\n        return (\n            <div>\n                <div>\n                    <Lists data={data} selectedId={selectedList}/>\n                </div>\n                {showListAlert && <Alert onClose={toggleModal} onOk={handleAlertOK} cancelName={\"Don't Frob\"} okName={\"Frob\"}>\n                    <div>\n                    Add Task?\n                    </div>\n                </Alert>}\n            </div>\n        )\n    } else {\n        return <MainPage setData={setData} data={data} onListClick={(n) => setList(n)}/>\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}