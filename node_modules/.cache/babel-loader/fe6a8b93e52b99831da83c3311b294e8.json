{"ast":null,"code":"var _jsxFileName = \"/Users/laurenwest/code/cs124/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './AlertApp.css';\nimport React, { useState } from \"react\";\nimport MainPage from './MainPage';\nimport Lists from \"./Lists\";\nimport firebase from \"firebase/compat\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport { collection, doc, setDoc, query, where, getDoc, getDocs, updateDoc, deleteDoc } from \"firebase/firestore\";\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCcQ6XCOvMIA7pHME4bWBgy_7OVy_7XErA\",\n  authDomain: \"cs124-fall2021.firebaseapp.com\",\n  projectId: \"cs124-fall2021\",\n  storageBucket: \"cs124-fall2021.appspot.com\",\n  messagingSenderId: \"264318304667\",\n  appId: \"1:264318304667:web:4be8d27a02811b1ccd613e\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction App() {\n  _s();\n\n  const collectionName = \"lewing-hmc-tasks2\";\n  const query = db.collection(collectionName);\n  const [hasFetchedTask, setFetch] = useState(false);\n  let collectionRef = db.collection(collectionName);\n  const [value, loading, error] = useCollection(query);\n\n  if (!loading) {\n    value.docs.map(async x => console.log((await getDoc(x.ref)).data().title));\n  }\n\n  const data = loading === false ? value.docs.map(element => element.data()) : [];\n  const [showAlert, setShowAlert] = useState(false);\n  const [showEditAlert, setShowEditAlert] = useState(false);\n  let [listId, setListId] = useState(0);\n  let [selectedPage, setPage] = useState({\n    type: \"home\"\n  });\n\n  function handleAddList(listName) {\n    const List = {\n      id: generateUniqueID(),\n      title: listName\n    };\n    collectionRef.doc(List.id).set(List);\n  }\n\n  function handleDeleteList(id, e) {\n    collectionRef.doc(id).delete();\n    e.stopPropagation();\n  }\n\n  function setFetchAndPage() {\n    setFetch(false);\n    setPage({\n      type: \"home\"\n    });\n  }\n\n  function addListItem(list, itemName, priority) {\n    const Task = {\n      id: generateUniqueID(),\n      title: itemName,\n      completed: false,\n      priority: priority // planning on low, medium, high\n\n    };\n    list.collection(list.id).doc(Task.id).set(Task);\n    setFetch(false);\n  }\n\n  async function getDocInfo(id) {\n    let currTasks = [];\n\n    if (!loading) {\n      const q = collectionRef.doc(id).collection(id);\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        currTasks.push([doc.data().id, doc.data().title, doc.data().completed, doc.data().priority]);\n      });\n    }\n\n    return currTasks;\n  }\n\n  async function updateTask(listid, taskid, title_val, comp_value, priority_value) {\n    await collectionRef.doc(listid).collection(listid).doc(taskid).update({\n      title: title_val,\n      completed: comp_value,\n      priority: priority_value\n    });\n    setFetch(false);\n  }\n\n  async function updateList(id, title_val) {\n    await collectionRef.doc(id).update({\n      title: title_val\n    });\n  }\n\n  async function deleteTask(listid, taskid) {\n    await collectionRef.doc(listid).collection(listid).doc(taskid).delete();\n    setFetch(false);\n  }\n\n  const pageRenderLookup = {\n    \"home\": /*#__PURE__*/_jsxDEV(MainPage, {\n      updateList: updateList,\n      handleDelete: handleDeleteList,\n      setData: handleAddList,\n      data: data,\n      onListClick: n => setPage({\n        type: \"list\",\n        selectedId: n\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this),\n    \"list\": /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => setFetchAndPage(),\n        src: \"long-arrow-alt-left-solid.svg\",\n        className: \"back-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Lists, {\n        collectionRef: collectionRef,\n        query: useCollection,\n        deleteTask: deleteTask,\n        updateTask: updateTask,\n        setFetch: setFetch,\n        fetch: loading,\n        data: data.filter(x => x.id == selectedPage.selectedId),\n        getDocInfo: getDocInfo,\n        addListItem: addListItem,\n        list: collectionRef.doc(selectedPage.selectedId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  };\n  return pageRenderLookup[selectedPage.type];\n}\n\n_s(App, \"0X8x7SZ0txEWem7ubOhtXPE+iZE=\", false, function () {\n  return [useCollection];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/laurenwest/code/cs124/src/App.js"],"names":["React","useState","MainPage","Lists","firebase","useCollection","collection","doc","setDoc","query","where","getDoc","getDocs","updateDoc","deleteDoc","generateUniqueID","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","db","firestore","App","collectionName","hasFetchedTask","setFetch","collectionRef","value","loading","error","docs","map","x","console","log","ref","data","title","element","showAlert","setShowAlert","showEditAlert","setShowEditAlert","listId","setListId","selectedPage","setPage","type","handleAddList","listName","List","id","set","handleDeleteList","e","delete","stopPropagation","setFetchAndPage","addListItem","list","itemName","priority","Task","completed","getDocInfo","currTasks","q","querySnapshot","forEach","push","updateTask","listid","taskid","title_val","comp_value","priority_value","update","updateList","deleteTask","pageRenderLookup","n","selectedId","filter"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAAQC,aAAR,QAA4B,gCAA5B;AACA,SAAQC,UAAR,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAwCC,KAAxC,EAA+CC,MAA/C,EAAuDC,OAAvD,EAAgEC,SAAhE,EAA2EC,SAA3E,QAA2F,oBAA3F;AACA,SAAQC,gBAAR,QAA+B,8CAA/B;;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,gCAFO;AAGnBC,EAAAA,SAAS,EAAE,gBAHQ;AAInBC,EAAAA,aAAa,EAAE,4BAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAAvB;AAQAlB,QAAQ,CAACmB,aAAT,CAAuBP,cAAvB;AACA,MAAMQ,EAAE,GAAGpB,QAAQ,CAACqB,SAAT,EAAX;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAMC,cAAc,GAAG,mBAAvB;AACA,QAAMlB,KAAK,GAAGe,EAAE,CAAClB,UAAH,CAAcqB,cAAd,CAAd;AACA,QAAM,CAACC,cAAD,EAAiBC,QAAjB,IAA6B5B,QAAQ,CAAC,KAAD,CAA3C;AACA,MAAI6B,aAAa,GAAGN,EAAE,CAAClB,UAAH,CAAcqB,cAAd,CAApB;AACA,QAAM,CAACI,KAAD,EAAQC,OAAR,EAAiBC,KAAjB,IAA0B5B,aAAa,CAACI,KAAD,CAA7C;;AACA,MAAI,CAACuB,OAAL,EAAc;AACVD,IAAAA,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAe,MAAOC,CAAP,IAAaC,OAAO,CAACC,GAAR,CAAY,CAAC,MAAM3B,MAAM,CAACyB,CAAC,CAACG,GAAH,CAAb,EAAsBC,IAAtB,GAA6BC,KAAzC,CAA5B;AACH;;AACD,QAAMD,IAAI,GAAGR,OAAO,KAAK,KAAZ,GAAoBD,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAgBO,OAAD,IAAYA,OAAO,CAACF,IAAR,EAA3B,CAApB,GAAiE,EAA9E;AAEA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4B3C,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC4C,aAAD,EAAgBC,gBAAhB,IAAoC7C,QAAQ,CAAC,KAAD,CAAlD;AACA,MAAI,CAAC8C,MAAD,EAASC,SAAT,IAAsB/C,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAI,CAACgD,YAAD,EAAeC,OAAf,IAA0BjD,QAAQ,CAAC;AACnCkD,IAAAA,IAAI,EAAE;AAD6B,GAAD,CAAtC;;AAIA,WAASC,aAAT,CAAuBC,QAAvB,EAAiC;AAC7B,UAAMC,IAAI,GAAG;AACTC,MAAAA,EAAE,EAAExC,gBAAgB,EADX;AAET0B,MAAAA,KAAK,EAAEY;AAFE,KAAb;AAIAvB,IAAAA,aAAa,CAACvB,GAAd,CAAkB+C,IAAI,CAACC,EAAvB,EAA2BC,GAA3B,CAA+BF,IAA/B;AACH;;AAGD,WAASG,gBAAT,CAA0BF,EAA1B,EAA8BG,CAA9B,EAAgC;AAC5B5B,IAAAA,aAAa,CAACvB,GAAd,CAAkBgD,EAAlB,EAAsBI,MAAtB;AACAD,IAAAA,CAAC,CAACE,eAAF;AACH;;AAED,WAASC,eAAT,GAA0B;AACtBhC,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAqB,IAAAA,OAAO,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAP;AACH;;AAED,WAASW,WAAT,CAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,QAArC,EAA8C;AAC1C,UAAMC,IAAI,GAAG;AACTX,MAAAA,EAAE,EAAExC,gBAAgB,EADX;AAET0B,MAAAA,KAAK,EAAEuB,QAFE;AAGTG,MAAAA,SAAS,EAAE,KAHF;AAITF,MAAAA,QAAQ,EAAEA,QAJD,CAIU;;AAJV,KAAb;AAMAF,IAAAA,IAAI,CAACzD,UAAL,CAAgByD,IAAI,CAACR,EAArB,EAAyBhD,GAAzB,CAA6B2D,IAAI,CAACX,EAAlC,EAAsCC,GAAtC,CAA0CU,IAA1C;AACArC,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;;AAED,iBAAeuC,UAAf,CAA0Bb,EAA1B,EAA6B;AACzB,QAAIc,SAAS,GAAG,EAAhB;;AACA,QAAG,CAACrC,OAAJ,EAAY;AACR,YAAMsC,CAAC,GAAGxC,aAAa,CAACvB,GAAd,CAAkBgD,EAAlB,EAAsBjD,UAAtB,CAAiCiD,EAAjC,CAAV;AACA,YAAMgB,aAAa,GAAG,MAAM3D,OAAO,CAAC0D,CAAD,CAAnC;AACAC,MAAAA,aAAa,CAACC,OAAd,CAAuBjE,GAAD,IAAS;AAC3B8D,QAAAA,SAAS,CAACI,IAAV,CAAe,CAAClE,GAAG,CAACiC,IAAJ,GAAWe,EAAZ,EAAgBhD,GAAG,CAACiC,IAAJ,GAAWC,KAA3B,EAAkClC,GAAG,CAACiC,IAAJ,GAAW2B,SAA7C,EAAwD5D,GAAG,CAACiC,IAAJ,GAAWyB,QAAnE,CAAf;AACP,OAFG;AAEA;;AACJ,WAAOI,SAAP;AACH;;AAED,iBAAeK,UAAf,CAA0BC,MAA1B,EAAkCC,MAAlC,EAA0CC,SAA1C,EAAqDC,UAArD,EAAiEC,cAAjE,EAAgF;AAC5E,UAAMjD,aAAa,CAACvB,GAAd,CAAkBoE,MAAlB,EACDrE,UADC,CACUqE,MADV,EAEDpE,GAFC,CAEGqE,MAFH,EAGDI,MAHC,CAGM;AACJvC,MAAAA,KAAK,EAAEoC,SADH;AAEJV,MAAAA,SAAS,EAAEW,UAFP;AAGJb,MAAAA,QAAQ,EAAEc;AAHN,KAHN,CAAN;AAQAlD,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;;AAED,iBAAeoD,UAAf,CAA0B1B,EAA1B,EAA8BsB,SAA9B,EAAwC;AACpC,UAAM/C,aAAa,CAACvB,GAAd,CAAkBgD,EAAlB,EAAsByB,MAAtB,CAA6B;AAC3BvC,MAAAA,KAAK,EAAEoC;AADoB,KAA7B,CAAN;AAGH;;AAED,iBAAeK,UAAf,CAA0BP,MAA1B,EAAkCC,MAAlC,EAAyC;AACrC,UAAM9C,aAAa,CAACvB,GAAd,CAAkBoE,MAAlB,EAA0BrE,UAA1B,CAAqCqE,MAArC,EAA6CpE,GAA7C,CAAiDqE,MAAjD,EAAyDjB,MAAzD,EAAN;AACA9B,IAAAA,QAAQ,CAAC,KAAD,CAAR;AAEH;;AAED,QAAMsD,gBAAgB,GAAG;AACrB,yBACQ,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEF,UAAtB;AAAkC,MAAA,YAAY,EAAExB,gBAAhD;AAAkE,MAAA,OAAO,EAAEL,aAA3E;AAA0F,MAAA,IAAI,EAAEZ,IAAhG;AAAsG,MAAA,WAAW,EAAG4C,CAAD,IAC/GlC,OAAO,CAAC;AACRC,QAAAA,IAAI,EAAE,MADE;AAERkC,QAAAA,UAAU,EAAED;AAFJ,OAAD;AADX;AAAA;AAAA;AAAA;AAAA,YAFa;AAQrB,yBACI;AAAA,8BACI;AAAK,QAAA,OAAO,EAAE,MAAMvB,eAAe,EAAnC;AAAuC,QAAA,GAAG,EAAE,+BAA5C;AAA6E,QAAA,SAAS,EAAE;AAAxF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,aAAa,EAAE/B,aAAtB;AAAqC,QAAA,KAAK,EAAEzB,aAA5C;AAA2D,QAAA,UAAU,EAAE6E,UAAvE;AAAmF,QAAA,UAAU,EAAER,UAA/F;AAA2G,QAAA,QAAQ,EAAE7C,QAArH;AAA+H,QAAA,KAAK,EAAEG,OAAtI;AAA+I,QAAA,IAAI,EAAEQ,IAAI,CAAC8C,MAAL,CAAalD,CAAD,IAAOA,CAAC,CAACmB,EAAF,IAAQN,YAAY,CAACoC,UAAxC,CAArJ;AAA2M,QAAA,UAAU,EAAEjB,UAAvN;AAAmO,QAAA,WAAW,EAAEN,WAAhP;AAA6P,QAAA,IAAI,EAAEhC,aAAa,CAACvB,GAAd,CAAkB0C,YAAY,CAACoC,UAA/B;AAAnQ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AATiB,GAAzB;AAeA,SAAOF,gBAAgB,CAAClC,YAAY,CAACE,IAAd,CAAvB;AACH;;GApGQzB,G;UAM2BrB,a;;;KAN3BqB,G;AAsGT,eAAeA,GAAf","sourcesContent":["import './AlertApp.css';\nimport React, {useState} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {collection, doc, setDoc, query, where, getDoc, getDocs, updateDoc, deleteDoc} from \"firebase/firestore\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCcQ6XCOvMIA7pHME4bWBgy_7OVy_7XErA\",\n    authDomain: \"cs124-fall2021.firebaseapp.com\",\n    projectId: \"cs124-fall2021\",\n    storageBucket: \"cs124-fall2021.appspot.com\",\n    messagingSenderId: \"264318304667\",\n    appId: \"1:264318304667:web:4be8d27a02811b1ccd613e\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction App() {\n\n    const collectionName = \"lewing-hmc-tasks2\"\n    const query = db.collection(collectionName);\n    const [hasFetchedTask, setFetch] = useState(false);\n    let collectionRef = db.collection(collectionName)\n    const [value, loading, error] = useCollection(query)\n    if (!loading) {\n        value.docs.map(async (x) => console.log((await getDoc(x.ref)).data().title))\n    }\n    const data = loading === false ? value.docs.map((element)=> element.data()) : []\n\n    const [showAlert, setShowAlert] = useState(false);\n    const [showEditAlert, setShowEditAlert] = useState(false);\n    let [listId, setListId] = useState(0);\n    let [selectedPage, setPage] = useState({\n        type: \"home\"\n    })\n\n    function handleAddList(listName) {\n        const List = {\n            id: generateUniqueID(),\n            title: listName,\n        }\n        collectionRef.doc(List.id).set(List)\n    }\n\n\n    function handleDeleteList(id, e){\n        collectionRef.doc(id).delete()\n        e.stopPropagation()\n    }\n\n    function setFetchAndPage(){\n        setFetch(false);\n        setPage({type: \"home\"});\n    }\n\n    function addListItem(list, itemName, priority){\n        const Task = {\n            id: generateUniqueID(),\n            title: itemName,\n            completed: false,\n            priority: priority // planning on low, medium, high\n        }\n        list.collection(list.id).doc(Task.id).set(Task)\n        setFetch(false)\n    }\n\n    async function getDocInfo(id){\n        let currTasks = [];\n        if(!loading){\n            const q = collectionRef.doc(id).collection(id);\n            const querySnapshot = await getDocs(q);\n            querySnapshot.forEach((doc) => {\n                currTasks.push([doc.data().id, doc.data().title, doc.data().completed, doc.data().priority]);\n        });}\n        return currTasks;\n    }\n\n    async function updateTask(listid, taskid, title_val, comp_value, priority_value){\n        await collectionRef.doc(listid)\n            .collection(listid)\n            .doc(taskid)\n            .update({\n                title: title_val,\n                completed: comp_value,\n                priority: priority_value\n            });\n        setFetch(false)\n    }\n\n    async function updateList(id, title_val){\n        await collectionRef.doc(id).update({\n                title: title_val\n            })\n    }\n\n    async function deleteTask(listid, taskid){\n        await collectionRef.doc(listid).collection(listid).doc(taskid).delete();\n        setFetch(false)\n\n    }\n\n    const pageRenderLookup = {\n        \"home\": (\n                <MainPage updateList={updateList} handleDelete={handleDeleteList} setData={handleAddList} data={data} onListClick={(n) =>\n                    setPage({\n                    type: \"list\",\n                    selectedId: n\n                })}/>\n        ),\n        \"list\": (\n            <>\n                <img onClick={() => setFetchAndPage()} src={\"long-arrow-alt-left-solid.svg\"} className={\"back-arrow\"}/>\n                <Lists collectionRef={collectionRef} query={useCollection} deleteTask={deleteTask} updateTask={updateTask} setFetch={setFetch} fetch={loading} data={data.filter((x) => x.id == selectedPage.selectedId)}  getDocInfo={getDocInfo} addListItem={addListItem} list={collectionRef.doc(selectedPage.selectedId)}/>\n            </>\n        )\n    }\n    return pageRenderLookup[selectedPage.type]\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}