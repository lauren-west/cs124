{"ast":null,"code":"var _jsxFileName = \"/Users/laurenwest/code/cs124/lab2R/src/Lists.js\",\n    _s = $RefreshSig$();\n\nimport \"./main.css\";\nimport { Data } from \"./InMemoryApp\";\nimport React, { useEffect, useState, useMemo } from \"react\"; // function handleToggle()\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ShowEditAlert(props) {\n  // props.setCurrentTask(props.listitem.text)\n  console.log(\"you made it here!!\");\n  props.setShowEditAlert(true);\n}\n\n_c = ShowEditAlert;\n\nfunction ListsItemDisplay(props) {\n  _s();\n\n  let [checked, setChecked] = useState(props.listitem.completed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"box1\",\n    className: \"boxes boxes-blue\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      checked: checked,\n      type: \"checkbox\",\n      onChange: () => {\n        props.listitem.completed = !props.listitem.completed;\n        setChecked(props.listitem.completed);\n        props.setData(Object.assign([], props.data));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: props.listitem.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"edit-button\",\n      onClick: ShowEditAlert,\n      src: \"edit-solid.svg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListsItemDisplay, \"P9c7DcLXg3+3wiG2hpZnodrghaM=\");\n\n_c2 = ListsItemDisplay;\n\nfunction Lists(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.data[props.selectedId].title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), props.data[props.selectedId].listItems.filter(x => !x.completed).map(y => /*#__PURE__*/_jsxDEV(ListsItemDisplay, {\n      setCurrentTask: props.setCurrentTask,\n      setData: props.setData,\n      setShowEditAlert: props.setShowEditAlert,\n      selectedId: props.selectedId,\n      handleDelete: props.handleDelete,\n      data: props.data,\n      listitem: y\n    }, y.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Completed:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), props.data[props.selectedId].listItems.filter(x => x.completed).map(y => /*#__PURE__*/_jsxDEV(ListsItemDisplay, {\n      setData: props.setData,\n      setShowAlert: props.setShowAlert,\n      selectedId: props.selectedId,\n      handleDelete: props.handleDelete,\n      data: props.data,\n      listitem: y\n    }, y.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"button1\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.setShowAlert(true);\n        },\n        className: \"addTask\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"plus-solid.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c3 = Lists;\nexport default Lists;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ShowEditAlert\");\n$RefreshReg$(_c2, \"ListsItemDisplay\");\n$RefreshReg$(_c3, \"Lists\");","map":{"version":3,"sources":["/Users/laurenwest/code/cs124/lab2R/src/Lists.js"],"names":["Data","React","useEffect","useState","useMemo","ShowEditAlert","props","console","log","setShowEditAlert","ListsItemDisplay","checked","setChecked","listitem","completed","setData","Object","assign","data","text","Lists","selectedId","title","listItems","filter","x","map","y","setCurrentTask","handleDelete","id","setShowAlert"],"mappings":"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","sourcesContent":["import \"./main.css\"\nimport {Data} from \"./InMemoryApp\"\nimport React, {useEffect, useState, useMemo} from \"react\";\n\n// function handleToggle()\n\nfunction ShowEditAlert(props) {\n    // props.setCurrentTask(props.listitem.text)\n    console.log(\"you made it here!!\")\n    props.setShowEditAlert(true)\n}\n\nfunction ListsItemDisplay(props){\n    let[checked, setChecked] = useState(props.listitem.completed)\n    return (\n        <div id=\"box1\" className=\"boxes boxes-blue\">\n            <input checked={checked} type=\"checkbox\" onChange={() => {\n                props.listitem.completed = !props.listitem.completed\n                setChecked(props.listitem.completed)\n                props.setData(Object.assign([], props.data))\n            }}/>\n            <label>{props.listitem.text}</label><br/>\n            <img className=\"edit-button\" onClick={ShowEditAlert} src={\"edit-solid.svg\"}></img>\n        </div>\n    )\n}\n\nfunction Lists(props)\n{\n    return (\n        <>\n            <h1>{props.data[props.selectedId].title}</h1>\n            {\n                props.data[props.selectedId].listItems\n                    .filter((x) => !x.completed)\n                    .map((y) => <ListsItemDisplay setCurrentTask={props.setCurrentTask} key={y.id} setData={props.setData} setShowEditAlert={props.setShowEditAlert} selectedId={props.selectedId} handleDelete={props.handleDelete} data={props.data} listitem={y}/>)}\n            <hr/>\n            <h3>Completed:</h3>\n            {\n            props.data[props.selectedId].listItems\n                .filter((x) => x.completed)\n                .map((y) => <ListsItemDisplay key={y.id} setData={props.setData} setShowAlert={props.setShowAlert} selectedId={props.selectedId} handleDelete={props.handleDelete} data={props.data} listitem={y}/>)}\n            <div id=\"button1\">\n                <button onClick={() => {props.setShowAlert(true)}} className=\"addTask\">\n                    <img src=\"plus-solid.svg\"/>\n                    <span>Add Task</span>\n                </button>\n            </div>\n        </>\n    )\n}\n\nexport default Lists;"]},"metadata":{},"sourceType":"module"}