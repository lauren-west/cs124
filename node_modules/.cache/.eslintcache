[{"/Users/laurenwest/code/cs124/src/index.js":"1","/Users/laurenwest/code/cs124/src/App.js":"2","/Users/laurenwest/code/cs124/src/reportWebVitals.js":"3","/Users/laurenwest/code/cs124/src/Lists.js":"4","/Users/laurenwest/code/cs124/src/MainPage.js":"5","/Users/laurenwest/code/cs124/src/Alert.js":"6"},{"size":530,"mtime":1634264083778,"results":"7","hashOfConfig":"8"},{"size":4212,"mtime":1636076730788,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1634264246477,"results":"10","hashOfConfig":"8"},{"size":5190,"mtime":1636080177527,"results":"11","hashOfConfig":"8"},{"size":2819,"mtime":1636065111205,"results":"12","hashOfConfig":"8"},{"size":2017,"mtime":1636066299407,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ffiht0",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/laurenwest/code/cs124/src/index.js",[],"/Users/laurenwest/code/cs124/src/App.js",["29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45"],"import './AlertApp.css';\nimport React, {useState} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {collection, doc, setDoc, query, where, getDoc, getDocs, updateDoc, deleteDoc} from \"firebase/firestore\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCcQ6XCOvMIA7pHME4bWBgy_7OVy_7XErA\",\n    authDomain: \"cs124-fall2021.firebaseapp.com\",\n    projectId: \"cs124-fall2021\",\n    storageBucket: \"cs124-fall2021.appspot.com\",\n    messagingSenderId: \"264318304667\",\n    appId: \"1:264318304667:web:4be8d27a02811b1ccd613e\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction App() {\n\n    const collectionName = \"lewing-hmc-tasks2\"\n    const query = db.collection(collectionName);\n    const [hasFetchedTask, setFetch] = useState(false);\n    let collectionRef = db.collection(collectionName)\n    const [value, loading, error] = useCollection(query)\n    if (!loading) {\n        value.docs.map(async (x) => console.log((await getDoc(x.ref)).data().title))\n    }\n    const data = loading === false ? value.docs.map((element)=> element.data()) : []\n\n    const [showAlert, setShowAlert] = useState(false);\n    const [showEditAlert, setShowEditAlert] = useState(false);\n    let [listId, setListId] = useState(0);\n    let [selectedPage, setPage] = useState({\n        type: \"home\"\n    })\n\n    function handleAddList(listName) {\n        const List = {\n            id: generateUniqueID(),\n            title: listName,\n        }\n        collectionRef.doc(List.id).set(List)\n    }\n\n\n    function handleDeleteList(id, e){\n        collectionRef.doc(id).delete()\n        e.stopPropagation()\n    }\n\n    function setFetchAndPage(){\n        setFetch(false);\n        setPage({type: \"home\"});\n    }\n\n    function addListItem(list, itemName, priority){\n        const Task = {\n            id: generateUniqueID(),\n            title: itemName,\n            completed: false,\n            priority: priority // planning on low, medium, high\n        }\n        list.collection(list.id).doc(Task.id).set(Task)\n        setFetch(false)\n    }\n\n    async function getDocInfo(id){\n        let currTasks = [];\n        if(!loading){\n            const q = collectionRef.doc(id).collection(id);\n            const querySnapshot = await getDocs(q);\n            querySnapshot.forEach((doc) => {\n                currTasks.push([doc.data().id, doc.data().title, doc.data().completed, doc.data().priority]);\n        });}\n        return currTasks;\n    }\n\n    async function updateTask(listid, taskid, title_val, comp_value, priority_value){\n        await collectionRef.doc(listid)\n            .collection(listid)\n            .doc(taskid)\n            .update({\n                title: title_val,\n                completed: comp_value,\n                priority: priority_value\n            });\n        setFetch(false)\n    }\n\n    async function updateList(id, title_val){\n        await collectionRef.doc(id).update({\n                title: title_val\n            })\n    }\n\n    async function deleteTask(listid, taskid){\n        await collectionRef.doc(listid).collection(listid).doc(taskid).delete();\n        setFetch(false)\n\n    }\n\n    const pageRenderLookup = {\n        \"home\": (\n                <MainPage updateList={updateList} handleDelete={handleDeleteList} setData={handleAddList} data={data} onListClick={(n) =>\n                    setPage({\n                    type: \"list\",\n                    selectedId: n\n                })}/>\n        ),\n        \"list\": (\n            <>\n                <img onClick={() => setFetchAndPage()} src={\"long-arrow-alt-left-solid.svg\"} className={\"back-arrow\"}/>\n                <Lists collectionRef={collectionRef} query={useCollection} deleteTask={deleteTask} updateTask={updateTask} setFetch={setFetch} fetch={loading} data={data.filter((x) => x.id == selectedPage.selectedId)}  getDocInfo={getDocInfo} addListItem={addListItem} list={collectionRef.doc(selectedPage.selectedId)}/>\n            </>\n        )\n    }\n    return pageRenderLookup[selectedPage.type]\n}\n\nexport default App;\n","/Users/laurenwest/code/cs124/src/reportWebVitals.js",[],"/Users/laurenwest/code/cs124/src/Lists.js",["46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70"],"import \"./main.css\"\nimport React, {useEffect, useState, useMemo} from \"react\";\nimport Alert from \"./Alert\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {collection, doc, setDoc, where, getDoc, getDocs} from \"firebase/firestore\";\nimport firebase from \"firebase/compat\";\n\nfunction ShowEditAlert(props) {\n    props.setCurrentTask(props.listitem.id)\n    props.setShowEditAlert(true)\n}\n\nfunction ListsItemDisplay(props){\n    console.log(props.currentTasks);\n    const [checked, setChecked] = useState(props.completed); //useState(props.listitem.completed)\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOKListItem(listitem, priority) {\n        props.updateTask(props.list.id, props.id, listitem, props.completed, priority)\n\n    }\n    function handleDelete(e) {\n        e.stopPropagation()\n        props.deleteTask(props.list.id, props.id)\n\n    }\n    function showPriorityImage(priority){\n        if (priority == \"high\"){\n            return (\n                <div>\n            <img className=\"priority-img\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n            <img className=\"priority-img\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n                </div>)\n        } else if (priority == \"medium\"){\n            return (\n                <div>\n                    <img className=\"priority-img\" onClick={() => setShowAlert(true)} src={\"exclamation-solid.svg\"}></img>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div id=\"box1\" className=\"boxes boxes-blue\">\n            <input checked={props.completed} type=\"checkbox\" onChange={() => {\n                props.updateTask(props.list.id, props.id, props.listitem, !props.completed, props.priority)\n                // props.setData(Object.assign([], props.data))\n                console.log(\"add completed attribute\")\n            }}/>\n            <label>{props.listitem}</label><br/>\n\n            <div className={\"edit-delete-button-container\"}>\n                {showPriorityImage(props.priority)}\n            <img className=\"edit-delete-button\" onClick={() => setShowAlert(true)} src={\"edit-solid.svg\"}></img>\n            <img className=\"edit-delete-button\" onClick={(e) => handleDelete(e)} src={\"times-solid.svg\"}></img>\n            </div>\n            <Alert priority={props.priority} task={true} visible={showAlert} inputValue={props.listitem} onClose={() => setShowAlert(false)} onOk={handleAlertOKListItem} cancelName={\"Don't Edit Task\"} okName={\"Edit Task\"}>\n                <div>Edit Task:</div>\n            </Alert>\n        </div>\n    )\n}\n\nfunction Lists(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    const [currentTasks, setTasks] = useState([]);\n    const query = props.collectionRef;\n    const [value, loading, error] = useCollection(props.collectionRef.doc(props.list.id).collection(props.list.id))\n    const elmo = loading === false ? value.docs.map((element)=> element.data()) : []\n\n\n    return (\n        <>\n            <h1>{props.data[0].title}</h1>\n            {elmo.filter((y) => !y.completed).filter((z) => z.priority == \"high\").map((x) => <ListsItemDisplay deleteTask={props.deleteTask} updateTask={props.updateTask} setTasks={setTasks} currentTasks={currentTasks} list={props.list} setData={props.setData} data={props.data} id={x.id} listitem={x.title} completed={x.completed} priority={x.priority}/>)}\n            {elmo.filter((y) => !y.completed).filter((z) => z.priority == \"medium\").map((x) => <ListsItemDisplay deleteTask={props.deleteTask} updateTask={props.updateTask} setTasks={setTasks} currentTasks={currentTasks} list={props.list} setData={props.setData} data={props.data} id={x.id} listitem={x.title} completed={x.completed} priority={x.priority}/>)}\n            {elmo.filter((y) => !y.completed).filter((z) => z.priority == \"low\").map((x) => <ListsItemDisplay deleteTask={props.deleteTask} updateTask={props.updateTask} setTasks={setTasks} currentTasks={currentTasks} list={props.list} setData={props.setData} data={props.data} id={x.id} listitem={x.title} completed={x.completed} priority={x.priority}/>)}\n            <hr/>\n            <h3>Completed:</h3>\n            {elmo.filter((y) => y.completed).map((x) => <ListsItemDisplay deleteTask={props.deleteTask} updateTask={props.updateTask} setTasks={setTasks} currentTasks={currentTasks} list={props.list} setData={props.setData} data={props.data} id={x.id} listitem={x.title} completed={x.completed} priority={x.priority}/>)}\n            <div id=\"button1\">\n                <button onClick={() => {setShowAlert(true)}} className=\"addTask\">\n                    <img src=\"plus-solid.svg\"/>\n                    <span>Add Task</span>\n                </button>\n            </div>\n            <Alert priority={props.priority} task={true} visible={showAlert}  onClose={() => setShowAlert(false)} onOk={(input) => props.addListItem(props.list, input, \"low\") } cancelName={\"Don't Add Task\"} okName={\"Add Task\"}>\n                <div>Add Task:</div>\n            </Alert>\n        </>\n    )\n}\n\nexport default Lists;","/Users/laurenwest/code/cs124/src/MainPage.js",["71","72","73","74","75"],"import './main.css'\nimport React, {useState} from \"react\";\nimport Alert from \"./Alert\";\n\nfunction ListsDisplay(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    function handleAlertOK(listName) {\n\n    }\n\n    function handleEdit(inputVal) {\n        props.updateList(props.list.id, inputVal)\n    }\n\n    // async function updateTask(listid, taskid, title_val, comp_value, priority_value){\n    //     await collectionRef.doc(listid)\n    //         .collection(listid)\n    //         .doc(taskid)\n    //         .update({\n    //             title: title_val,\n    //             completed: comp_value,\n    //             priority: priority_value\n    //         });\n    //     setFetch(false)\n    // }\n    // function handleDelete(e) {\n    //     e.stopPropagation()\n    //     props.setData(props.data.filter((list) => list.id !== props.list.id))\n    //\n    //\n    // }\n\n    return (\n        <>\n            <div onClick={() => props.onClick(props.list.id)} className=\"boxes\" id=\"list-box-1\">\n                <img src=\"list-solid.svg\"/>\n                <span>{props.list.title}</span>\n                <div className={\"edit-delete-button-container\"}>\n                    <img className=\"edit-delete-button\" onClick={(e) => {\n                        e.stopPropagation()\n                        setShowAlert(true)\n                    }} src={\"edit-solid.svg\"}/>\n                    <img className=\"edit-delete-button\" onClick={(e) => props.handleDelete(props.list.id, e)} src={\"times-solid.svg\"}></img>\n                {/*    (e) => props.handleDelete(e.target.id)*/}\n                </div>\n\n            </div>\n            <Alert inputValue={props.list.title} visible={showAlert} onClose={() => setShowAlert(false)} onOk={handleEdit} cancelName={\"Don't Edit List\"} okName={\"Edit List\"}>\n                <div>Edit List:</div>\n            </Alert>\n        </>\n    )\n}\n\nfunction MainPage(props) {\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOK(listName) {\n        props.setData(listName)\n    }\n\n    return (\n        <>\n            <h1 id=\"MyLists\">My Lists</h1>\n            {props.data.map((x) => <ListsDisplay handleDelete={props.handleDelete} updateList={props.updateList} setData={props.setData} data={props.data} list={x} onClick={props.onListClick}/>)}\n            <div id=\"button1\">\n                <button onClick={() => setShowAlert(true)} className=\"addList addTask\">\n                    <img src=\"plus-solid.svg\"/>\n                    <span>Add List</span>\n                </button>\n            </div>\n            <Alert inputValue={\"\"} visible={showAlert} onClose={() => setShowAlert(false)} onOk={handleAlertOK} cancelName={\"Don't Add List\"} okName={\"Add List\"}>\n                <div>Add List:</div>\n            </Alert>\n        </>\n    )\n}\n\nexport default MainPage;","/Users/laurenwest/code/cs124/src/Alert.js",[],{"ruleId":"76","severity":1,"message":"77","line":7,"column":9,"nodeType":"78","messageId":"79","endLine":7,"endColumn":19},{"ruleId":"76","severity":1,"message":"80","line":7,"column":21,"nodeType":"78","messageId":"79","endLine":7,"endColumn":24},{"ruleId":"76","severity":1,"message":"81","line":7,"column":26,"nodeType":"78","messageId":"79","endLine":7,"endColumn":32},{"ruleId":"76","severity":1,"message":"82","line":7,"column":34,"nodeType":"78","messageId":"79","endLine":7,"endColumn":39},{"ruleId":"76","severity":1,"message":"83","line":7,"column":41,"nodeType":"78","messageId":"79","endLine":7,"endColumn":46},{"ruleId":"76","severity":1,"message":"84","line":7,"column":65,"nodeType":"78","messageId":"79","endLine":7,"endColumn":74},{"ruleId":"76","severity":1,"message":"85","line":7,"column":76,"nodeType":"78","messageId":"79","endLine":7,"endColumn":85},{"ruleId":"76","severity":1,"message":"86","line":25,"column":12,"nodeType":"78","messageId":"79","endLine":25,"endColumn":26},{"ruleId":"76","severity":1,"message":"87","line":27,"column":28,"nodeType":"78","messageId":"79","endLine":27,"endColumn":33},{"ruleId":"76","severity":1,"message":"88","line":33,"column":12,"nodeType":"78","messageId":"79","endLine":33,"endColumn":21},{"ruleId":"76","severity":1,"message":"89","line":33,"column":23,"nodeType":"78","messageId":"79","endLine":33,"endColumn":35},{"ruleId":"76","severity":1,"message":"90","line":34,"column":12,"nodeType":"78","messageId":"79","endLine":34,"endColumn":25},{"ruleId":"76","severity":1,"message":"91","line":34,"column":27,"nodeType":"78","messageId":"79","endLine":34,"endColumn":43},{"ruleId":"76","severity":1,"message":"92","line":35,"column":10,"nodeType":"78","messageId":"79","endLine":35,"endColumn":16},{"ruleId":"76","severity":1,"message":"93","line":35,"column":18,"nodeType":"78","messageId":"79","endLine":35,"endColumn":27},{"ruleId":"94","severity":1,"message":"95","line":115,"column":17,"nodeType":"96","endLine":115,"endColumn":120},{"ruleId":"97","severity":1,"message":"98","line":116,"column":190,"nodeType":"99","messageId":"100","endLine":116,"endColumn":192},{"ruleId":"76","severity":1,"message":"101","line":2,"column":16,"nodeType":"78","messageId":"79","endLine":2,"endColumn":25},{"ruleId":"76","severity":1,"message":"102","line":2,"column":37,"nodeType":"78","messageId":"79","endLine":2,"endColumn":44},{"ruleId":"76","severity":1,"message":"77","line":5,"column":9,"nodeType":"78","messageId":"79","endLine":5,"endColumn":19},{"ruleId":"76","severity":1,"message":"80","line":5,"column":21,"nodeType":"78","messageId":"79","endLine":5,"endColumn":24},{"ruleId":"76","severity":1,"message":"81","line":5,"column":26,"nodeType":"78","messageId":"79","endLine":5,"endColumn":32},{"ruleId":"76","severity":1,"message":"83","line":5,"column":34,"nodeType":"78","messageId":"79","endLine":5,"endColumn":39},{"ruleId":"76","severity":1,"message":"103","line":5,"column":41,"nodeType":"78","messageId":"79","endLine":5,"endColumn":47},{"ruleId":"76","severity":1,"message":"104","line":5,"column":49,"nodeType":"78","messageId":"79","endLine":5,"endColumn":56},{"ruleId":"76","severity":1,"message":"105","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":16},{"ruleId":"76","severity":1,"message":"106","line":8,"column":10,"nodeType":"78","messageId":"79","endLine":8,"endColumn":23},{"ruleId":"76","severity":1,"message":"107","line":15,"column":12,"nodeType":"78","messageId":"79","endLine":15,"endColumn":19},{"ruleId":"76","severity":1,"message":"108","line":15,"column":21,"nodeType":"78","messageId":"79","endLine":15,"endColumn":31},{"ruleId":"97","severity":1,"message":"98","line":28,"column":22,"nodeType":"99","messageId":"100","endLine":28,"endColumn":24},{"ruleId":"94","severity":1,"message":"95","line":31,"column":13,"nodeType":"96","endLine":31,"endColumn":108},{"ruleId":"94","severity":1,"message":"95","line":32,"column":13,"nodeType":"96","endLine":32,"endColumn":108},{"ruleId":"97","severity":1,"message":"98","line":34,"column":29,"nodeType":"99","messageId":"100","endLine":34,"endColumn":31},{"ruleId":"94","severity":1,"message":"95","line":37,"column":21,"nodeType":"96","endLine":37,"endColumn":116},{"ruleId":"94","severity":1,"message":"95","line":59,"column":13,"nodeType":"96","endLine":59,"endColumn":107},{"ruleId":"94","severity":1,"message":"95","line":60,"column":13,"nodeType":"96","endLine":60,"endColumn":106},{"ruleId":"76","severity":1,"message":"109","line":72,"column":11,"nodeType":"78","messageId":"79","endLine":72,"endColumn":16},{"ruleId":"76","severity":1,"message":"87","line":73,"column":28,"nodeType":"78","messageId":"79","endLine":73,"endColumn":33},{"ruleId":"97","severity":1,"message":"98","line":80,"column":72,"nodeType":"99","messageId":"100","endLine":80,"endColumn":74},{"ruleId":"97","severity":1,"message":"98","line":81,"column":72,"nodeType":"99","messageId":"100","endLine":81,"endColumn":74},{"ruleId":"97","severity":1,"message":"98","line":82,"column":72,"nodeType":"99","messageId":"100","endLine":82,"endColumn":74},{"ruleId":"94","severity":1,"message":"95","line":88,"column":21,"nodeType":"96","endLine":88,"endColumn":48},{"ruleId":"76","severity":1,"message":"110","line":7,"column":14,"nodeType":"78","messageId":"79","endLine":7,"endColumn":27},{"ruleId":"94","severity":1,"message":"95","line":36,"column":17,"nodeType":"96","endLine":36,"endColumn":44},{"ruleId":"94","severity":1,"message":"95","line":39,"column":21,"nodeType":"96","endLine":42,"endColumn":48},{"ruleId":"94","severity":1,"message":"95","line":43,"column":21,"nodeType":"96","endLine":43,"endColumn":135},{"ruleId":"94","severity":1,"message":"95","line":68,"column":21,"nodeType":"96","endLine":68,"endColumn":48},"no-unused-vars","'collection' is defined but never used.","Identifier","unusedVar","'doc' is defined but never used.","'setDoc' is defined but never used.","'query' is defined but never used.","'where' is defined but never used.","'updateDoc' is defined but never used.","'deleteDoc' is defined but never used.","'hasFetchedTask' is assigned a value but never used.","'error' is assigned a value but never used.","'showAlert' is assigned a value but never used.","'setShowAlert' is assigned a value but never used.","'showEditAlert' is assigned a value but never used.","'setShowEditAlert' is assigned a value but never used.","'listId' is assigned a value but never used.","'setListId' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'getDoc' is defined but never used.","'getDocs' is defined but never used.","'firebase' is defined but never used.","'ShowEditAlert' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'query' is assigned a value but never used.","'handleAlertOK' is defined but never used."]